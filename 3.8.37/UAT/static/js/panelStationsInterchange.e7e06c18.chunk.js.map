{"version":3,"sources":["panels/colour-diag/colours lazy /^/.//.*$/ groupOptions: {} namespace object","panels/colour-diag/data.ts","panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","panels/stations/edit-diag/name-list-items.tsx","panels/stations/edit-diag/interchange-tab.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","cityList","country","name","en","zh","ga","ja","pt","ko","useStyles","makeStyles","createStyles","cityItem","display","flexDirection","alignItems","menuItemSpan","padding","button","borderRadius","height","width","minWidth","marginRight","inputColour","position","left","top","buttonContainer","flexShrink","PalettePanel","props","useTranslation","t","i18n","classes","lineList","theme","React","useState","list","setList","listPromise","default","useEffect","a","data","colour","fg","toString","useLineList","length","filter","l","newTheme","onUpdate","List","component","disablePadding","value","onChange","event","target","slice","Divider","variant","ListItem","ListItemText","primary","TextField","select","style","line","disabled","MenuItem","className","backgroundColor","color","getTransText2","languages","CustomPanel","hexTemp","setHexTemp","type","rgb","opacity","htmlFor","Tooltip","title","Button","borderColor","error","match","hex","val","idx","toUpperCase","Select","native","label","CitySelectItem","items","useMemo","c","CountryFlag","useEmojiStyles","img","codePoints","split","char","codePointAt","concat","includes","language","navigator","platform","indexOf","src","process","join","alt","String","fromCodePoint","cp","parseInt","contentWrapper","overflow","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","breakpoints","down","contentLeft","maxWidth","contentControl","flexGrow","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","textAlign","fontSize","inputBaseInputEN","chipWrapper","overflowX","chipRoot","lineHeight","margin","chipLabel","Dialog2","Dialog","open","onClose","DialogTitle","DialogContent","lineName","DialogActions","onClick","LineNameInput","nameChange","index","newName","Paper","Icon","InputBase","root","input","autoFocus","RecentChipSet","param","useContext","ParamContext","allInfos","Set","values","stn_list","reduce","acc","info","transfer","line_name","JSON","stringify","reverse","chips","x","i","parse","txt","Chip","secondary","secondaryTypographyProps","ColourControl","tabIndex","setTabIndex","tabNav","Tabs","indicatorColor","textColor","_","scrollButtons","Tab","panel","ColourDialog","createSvgIcon","d","isDeleteKeyboardEvent","keyboardEvent","key","ref","avatarProp","avatar","clickableProp","clickable","_props$color","ComponentProp","deleteIconProp","deleteIcon","_props$disabled","iconProp","icon","onDelete","onKeyDown","onKeyUp","_props$size","size","_props$variant","other","_objectWithoutProperties","chipRef","handleRef","useForkRef","handleDeleteIconClick","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","clsx","capitalize","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","_extends","role","undefined","outlined","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","currentTarget","preventDefault","current","blur","labelSmall","withStyles","grey","deleteIconColor","fade","text","fontFamily","typography","pxToRem","getContrastText","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","verticalAlign","boxSizing","pointerEvents","marginLeft","contrastText","dark","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","textOverflow","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","listItemIcon","NameListItems","ListItemIcon","helperText","intChipSetStyles","StationEditInterchangeTab","rmgStyle","CanvasContext","dispatch","stnTrans","stnId","osiNameDialogOpened","setOsiNameDialogOpened","addClick","newInfo","setIdx","deleteClick","intIdx","ListItemSecondaryAction","IconButton","setIndex","osi_names","OSINameDialog","osiName","intChip","intChipText","intChipTextZH","intChipTextEN","intChipLabel","intChipDeleteIcon","InterchangeChipSet","intInfos","chipSelected","setChipSelected","nameDialogOpened","setNameDialogOpened","intChips","intInfo","Array","memo","dividers","newOSIName","prevProps","nextProps","InterchangeMore","tickDirecChange","direction","tick_direc","Switch","edge","checked","isPaid","paid_area"],"mappings":"oHAAA,IAAIA,EAAM,CACT,cAAe,CACd,IACA,IAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,aAAc,CACb,IACA,GAED,gBAAiB,CAChB,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,WAAY,CACX,IACA,GAED,cAAe,CACd,IACA,GAED,YAAa,CACZ,IACA,GAED,eAAgB,CACf,IACA,GAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,SAAU,CACT,IACA,IAED,YAAa,CACZ,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,I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","file":"static/js/panelStationsInterchange.e7e06c18.chunk.js","sourcesContent":["var map = {\n\t\"./README.md\": [\n\t\t219,\n\t\t73\n\t],\n\t\"./barcelona\": [\n\t\t169,\n\t\t5\n\t],\n\t\"./barcelona.ts\": [\n\t\t169,\n\t\t5\n\t],\n\t\"./beijing\": [\n\t\t170,\n\t\t16\n\t],\n\t\"./beijing.ts\": [\n\t\t170,\n\t\t16\n\t],\n\t\"./changsha\": [\n\t\t171,\n\t\t27\n\t],\n\t\"./changsha.ts\": [\n\t\t171,\n\t\t27\n\t],\n\t\"./chengdu\": [\n\t\t172,\n\t\t38\n\t],\n\t\"./chengdu.ts\": [\n\t\t172,\n\t\t38\n\t],\n\t\"./chongqing\": [\n\t\t173,\n\t\t40\n\t],\n\t\"./chongqing.ts\": [\n\t\t173,\n\t\t40\n\t],\n\t\"./dongguan\": [\n\t\t174,\n\t\t6\n\t],\n\t\"./dongguan.ts\": [\n\t\t174,\n\t\t6\n\t],\n\t\"./edinburgh\": [\n\t\t175,\n\t\t7\n\t],\n\t\"./edinburgh.ts\": [\n\t\t175,\n\t\t7\n\t],\n\t\"./foshan\": [\n\t\t176,\n\t\t8\n\t],\n\t\"./foshan.ts\": [\n\t\t176,\n\t\t8\n\t],\n\t\"./glasgow\": [\n\t\t177,\n\t\t9\n\t],\n\t\"./glasgow.ts\": [\n\t\t177,\n\t\t9\n\t],\n\t\"./guangzhou\": [\n\t\t178,\n\t\t10\n\t],\n\t\"./guangzhou.ts\": [\n\t\t178,\n\t\t10\n\t],\n\t\"./hangzhou\": [\n\t\t179,\n\t\t11\n\t],\n\t\"./hangzhou.ts\": [\n\t\t179,\n\t\t11\n\t],\n\t\"./hongkong\": [\n\t\t180,\n\t\t12\n\t],\n\t\"./hongkong.ts\": [\n\t\t180,\n\t\t12\n\t],\n\t\"./kansai\": [\n\t\t181,\n\t\t13\n\t],\n\t\"./kansai.ts\": [\n\t\t181,\n\t\t13\n\t],\n\t\"./kaohsiung\": [\n\t\t182,\n\t\t14\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t182,\n\t\t14\n\t],\n\t\"./london\": [\n\t\t183,\n\t\t15\n\t],\n\t\"./london.ts\": [\n\t\t183,\n\t\t15\n\t],\n\t\"./macao\": [\n\t\t184,\n\t\t17\n\t],\n\t\"./macao.ts\": [\n\t\t184,\n\t\t17\n\t],\n\t\"./madrid\": [\n\t\t185,\n\t\t18\n\t],\n\t\"./madrid.ts\": [\n\t\t185,\n\t\t18\n\t],\n\t\"./nanjing\": [\n\t\t186,\n\t\t19\n\t],\n\t\"./nanjing.ts\": [\n\t\t186,\n\t\t19\n\t],\n\t\"./newtaipei\": [\n\t\t187,\n\t\t20\n\t],\n\t\"./newtaipei.ts\": [\n\t\t187,\n\t\t20\n\t],\n\t\"./osaka\": [\n\t\t188,\n\t\t21\n\t],\n\t\"./osaka.ts\": [\n\t\t188,\n\t\t21\n\t],\n\t\"./oslo\": [\n\t\t189,\n\t\t22\n\t],\n\t\"./oslo.ts\": [\n\t\t189,\n\t\t22\n\t],\n\t\"./other\": [\n\t\t190,\n\t\t23\n\t],\n\t\"./other.ts\": [\n\t\t190,\n\t\t23\n\t],\n\t\"./paris\": [\n\t\t191,\n\t\t24\n\t],\n\t\"./paris.ts\": [\n\t\t191,\n\t\t24\n\t],\n\t\"./qingdao\": [\n\t\t192,\n\t\t25\n\t],\n\t\"./qingdao.ts\": [\n\t\t192,\n\t\t25\n\t],\n\t\"./sanfrancisco\": [\n\t\t193,\n\t\t26\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t193,\n\t\t26\n\t],\n\t\"./seoul\": [\n\t\t194,\n\t\t28\n\t],\n\t\"./seoul.ts\": [\n\t\t194,\n\t\t28\n\t],\n\t\"./shanghai\": [\n\t\t195,\n\t\t29\n\t],\n\t\"./shanghai.ts\": [\n\t\t195,\n\t\t29\n\t],\n\t\"./shenzhen\": [\n\t\t196,\n\t\t30\n\t],\n\t\"./shenzhen.ts\": [\n\t\t196,\n\t\t30\n\t],\n\t\"./singapore\": [\n\t\t197,\n\t\t31\n\t],\n\t\"./singapore.ts\": [\n\t\t197,\n\t\t31\n\t],\n\t\"./stockholm\": [\n\t\t198,\n\t\t32\n\t],\n\t\"./stockholm.ts\": [\n\t\t198,\n\t\t32\n\t],\n\t\"./taipei\": [\n\t\t199,\n\t\t33\n\t],\n\t\"./taipei.ts\": [\n\t\t199,\n\t\t33\n\t],\n\t\"./tianjin\": [\n\t\t200,\n\t\t34\n\t],\n\t\"./tianjin.ts\": [\n\t\t200,\n\t\t34\n\t],\n\t\"./tokyo\": [\n\t\t201,\n\t\t35\n\t],\n\t\"./tokyo.ts\": [\n\t\t201,\n\t\t35\n\t],\n\t\"./toronto\": [\n\t\t202,\n\t\t36\n\t],\n\t\"./toronto.ts\": [\n\t\t202,\n\t\t36\n\t],\n\t\"./tyneandwear\": [\n\t\t203,\n\t\t37\n\t],\n\t\"./tyneandwear.ts\": [\n\t\t203,\n\t\t37\n\t],\n\t\"./xian\": [\n\t\t204,\n\t\t39\n\t],\n\t\"./xian.ts\": [\n\t\t204,\n\t\t39\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 211;\nmodule.exports = webpackAsyncContext;","export const cityList: CityEntry[] = [\n    {\n        id: 'barcelona',\n        country: 'ES',\n        name: {\n            en: 'Barcelona',\n            'zh-Hans': '巴塞罗那',\n            'zh-HK': '巴塞隆拿',\n            'zh-TW': '巴塞隆納',\n        },\n    },\n    {\n        id: 'beijing',\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: 'changsha',\n        country: 'CN',\n        name: {\n            en: 'Changsha',\n            'zh-Hans': '长沙',\n            'zh-Hant': '長沙',\n        },\n    },\n    {\n        id: 'chengdu',\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: 'chongqing',\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: 'dongguan',\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: 'edinburgh',\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: 'foshan',\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: 'glasgow',\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: 'guangzhou',\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: 'hangzhou',\n        country: 'CN',\n        name: {\n            en: 'Hangzhou',\n            zh: '杭州',\n        },\n    },\n    {\n        id: 'hongkong',\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: 'kansai',\n        country: 'JP',\n        name: {\n            en: 'Kansai Area',\n            ja: '近畿地方',\n            'zh-Hans': '近畿地方（关西地方）',\n            'zh-Hant': '近畿地方（關西地方）',\n        },\n    },\n    {\n        id: 'kaohsiung',\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: 'london',\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: 'macao',\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: 'madrid',\n        country: 'ES',\n        name: {\n            en: 'Madrid',\n            'zh-Hans': '马德里',\n            'zh-Hant': '馬德里',\n        },\n    },\n    {\n        id: 'nanjing',\n        country: 'CN',\n        name: {\n            en: 'Nanjing',\n            zh: '南京',\n        },\n    },\n    {\n        id: 'newtaipei',\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: 'osaka',\n        country: 'JP',\n        name: {\n            en: 'Osaka',\n            ja: '大阪',\n            zh: '大阪',\n        },\n    },\n    {\n        id: 'oslo',\n        country: 'NO',\n        name: {\n            en: 'Oslo',\n            'zh-Hans': '奥斯陆',\n            'zh-Hant': '奧斯陸',\n        },\n    },\n    {\n        id: 'paris',\n        country: 'FR',\n        name: {\n            en: 'Paris',\n            zh: '巴黎',\n        },\n    },\n    {\n        id: 'qingdao',\n        country: 'CN',\n        name: {\n            en: 'Qingdao',\n            'zh-Hans': '青岛',\n            'zh-Hant': '青島',\n        },\n    },\n    {\n        id: 'sanfrancisco',\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: 'seoul',\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: 'shanghai',\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: 'shenzhen',\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: 'singapore',\n        country: 'SG',\n        name: {\n            en: 'Singapore',\n            zh: '新加坡',\n        },\n    },\n    {\n        id: 'stockholm',\n        country: 'SE',\n        name: {\n            en: 'Stockholm',\n            'zh-Hans': '斯德哥尔摩',\n            'zh-Hant': '斯德哥爾摩',\n        },\n    },\n    {\n        id: 'taipei',\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            zh: '台北',\n        },\n    },\n    {\n        id: 'tianjin',\n        country: 'CN',\n        name: {\n            en: 'Tianjin',\n            zh: '天津',\n        },\n    },\n    {\n        id: 'tokyo',\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: 'toronto',\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: 'tyneandwear',\n        country: 'GBENG',\n        name: {\n            en: 'Tyne and Wear',\n            'zh-Hans': '泰恩-威尔',\n            'zh-HK': '泰威',\n            'zh-TW': '泰恩-威爾',\n        },\n    },\n    {\n        id: 'xian',\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: 'other',\n        country: 'UN',\n        name: {\n            en: 'Customise',\n            'zh-Hans': '自定义',\n            'zh-Hant': '自訂',\n        },\n    },\n];\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    List,\n    ListItem,\n    TextField,\n    MenuItem,\n    Button,\n    makeStyles,\n    createStyles,\n    Tooltip,\n    ListItemText,\n    Divider,\n    Select,\n} from '@material-ui/core';\nimport { getTransText2 } from '../../utils';\nimport { cityList } from './data';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 24,\n            width: 24,\n            minWidth: 0,\n            marginRight: 8,\n            // border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = (theme: Theme) => {\n    const [list, setList] = React.useState([] as LineEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `./colours/${theme[0]}`).then(\n              module => module.default as LineEntry[]\n          )\n        : Promise.resolve([] as LineEntry[]);\n\n    useEffect(\n        () => {\n            if (typeof theme[0] === 'undefined') {\n                return;\n            }\n            (async () => {\n                const data = await listPromise;\n                setList(theme[0] === 'other' ? [{ ...data[0], colour: theme[2], fg: theme[3] || '#fff' }] : data);\n            })();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [theme.toString()]\n    );\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport const PalettePanel = (props: ColourDialogProps) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const cityChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n        props.onUpdate('theme', [event.target.value, ...props.theme.slice(1)]);\n\n    // Hook for fetching line list of current city\n    const lineList = useLineList(props.theme);\n\n    // Hook for updating props.theme when lineList changed\n    useEffect(\n        () => {\n            if (lineList.length === 0) return; // initialising, ignore\n            if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n            let { id, colour, fg } = lineList[0];\n            let newTheme = [props.theme[0], id, colour, fg || '#fff'];\n            props.onUpdate('theme', newTheme);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [lineList]\n    );\n\n    const lineChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let line = event.target.value;\n        let { colour, fg } = lineList.filter(l => l.id === line)[0];\n        let newTheme = [props.theme[0], line, colour, fg || '#fff'];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <CitySelectItem value={props.theme[0]} onChange={cityChange} />\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.line')} />\n                <TextField\n                    select\n                    style={{ width: 166 }}\n                    onChange={lineChange}\n                    value={props.theme[1]}\n                    disabled={props.theme[0] === 'other'}\n                >\n                    {lineList.map(l => (\n                        <MenuItem key={l.id} value={l.id}>\n                            <span\n                                className={classes.menuItemSpan}\n                                style={{\n                                    backgroundColor: l.colour,\n                                    color: l.fg || '#fff',\n                                }}\n                            >\n                                {getTransText2(l.name, i18n.languages)}\n                            </span>\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </ListItem>\n        </List>\n    );\n};\n\nexport const CustomPanel = (props: ColourDialogProps) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [hexTemp, setHexTemp] = useState(props.theme[2]);\n\n    useEffect(\n        () => setHexTemp(props.theme[2]),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.theme[2]]\n    );\n\n    const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let rgb = event.target.value;\n        // setHexTemp(rgb);\n        props.onUpdate('theme', ['other', 'other', rgb, props.theme[3]]);\n    };\n\n    const hexChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let hex = event.target.value;\n        if (hex.match(/^#[0-9a-fA-F]{0,6}$/) === null) return;\n        setHexTemp(hex);\n\n        if (props.theme[0] !== 'other') {\n            if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = ['other', 'other', hex, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex not valid, modify theme city only\n                let newTheme = ['other', 'other', ...props.theme.slice(2)];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            }\n        } else {\n            if (hex.match(/^#[0-9a-fA-F]{6}$/) !== null) {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            } else {\n                // if hex not valid, do nothing\n            }\n        }\n    };\n\n    const fgChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let newTheme = ['other', 'other', props.theme[2], event.target.value];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <ListItem>\n                <ListItemText primary={t('colour.colour')} />\n                <div className={classes.buttonContainer}>\n                    <input\n                        type=\"color\"\n                        id=\"input-color\"\n                        value={props.theme[2]}\n                        onChange={colourChange}\n                        className={classes.inputColour}\n                        style={{ opacity: 0 }}\n                    />\n                    <label htmlFor=\"input-color\">\n                        <Tooltip title={t('colour.tooltip')} aria-label=\"colour picker\">\n                            <Button\n                                className={classes.button}\n                                style={{\n                                    backgroundColor: props.theme[2],\n                                    borderColor: props.theme[3] || '#fff',\n                                }}\n                                variant=\"contained\"\n                                component=\"span\"\n                            >\n                                {' '}\n                            </Button>\n                        </Tooltip>\n                    </label>\n                </div>\n                <TextField\n                    error={!hexTemp?.match(/^#[0-9a-fA-F]{6}$/g)}\n                    style={{ width: 85 }}\n                    onChange={hexChange}\n                    value={hexTemp?.toUpperCase()}\n                />\n            </ListItem>\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.fg')} />\n                <Select\n                    native\n                    style={{ width: 85 }}\n                    label={t('colour.fg')}\n                    onChange={fgChange}\n                    value={props.theme[3] || '#fff'}\n                >\n                    <option value=\"#fff\">{t('colour.fgWhite')}</option>\n                    <option value=\"#000\">{t('colour.fgBlack')}</option>\n                </Select>\n            </ListItem>\n        </List>\n    );\n};\n\nconst CitySelectItem = (props: { value: string; onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const items = useMemo(\n        () =>\n            cityList.map(c => (\n                <MenuItem key={c.id} value={c.id}>\n                    <span className={classes.cityItem}>\n                        <CountryFlag code={c.country} />\n                        <span>{getTransText2(c.name, i18n.languages)}</span>\n                    </span>\n                </MenuItem>\n            )),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    return (\n        <ListItem>\n            <ListItemText primary={t('colour.city')} />\n            <TextField select style={{ width: 166 }} value={props.value} onChange={props.onChange}>\n                {items}\n            </TextField>\n        </ListItem>\n    );\n};\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: { code: string }) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => ((char.codePointAt(0) || 0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4'].concat(\n            props.code\n                .toUpperCase()\n                .split('')\n                .map(char => ((char.codePointAt(0) || 0) + 917536).toString(16).toUpperCase()),\n            'E007F'\n        );\n    }\n\n    // special case for simplified Chinese\n    if (['zh-CN', 'zh-Hans'].includes(i18n.language) && props.code === 'TW') codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img\n            src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`}\n            className={classes.img}\n            alt={`Flag of ${props.code}`}\n        />\n    ) : (\n        // <img src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import React, { useState, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Paper,\n    ListItem,\n    List,\n    Icon,\n    InputBase,\n    makeStyles,\n    DialogActions,\n    Button,\n    createStyles,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n    ListItemText,\n} from '@material-ui/core';\nimport { PalettePanel, CustomPanel } from './theme-items';\nimport { ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        contentWrapper: {\n            display: 'flex',\n            overflow: 'hidden',\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        contentLeft: {\n            maxWidth: 280,\n        },\n        contentControl: {\n            flexGrow: 0,\n            flexShrink: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            width: 270,\n        },\n\n        paperRoot: {\n            maxWidth: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n\n        chipWrapper: {\n            overflowX: 'auto',\n            display: 'flex',\n        },\n        chipRoot: {\n            borderRadius: 4.5,\n            height: 32,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        chipLabel: {\n            padding: '0 6px',\n            '& > span': {\n                display: 'block',\n                textAlign: 'center',\n            },\n            '& > span:first-child': {\n                fontSize: '1rem',\n            },\n            '& > span:last-child': {\n                lineHeight: '0.8rem',\n            },\n        },\n    })\n);\n\ninterface Props {\n    open: boolean;\n    theme: [string, string, string, '#000' | '#fff'];\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst Dialog2 = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <Dialog open={props.open} onClose={props.onClose}>\n            <DialogTitle>{t('colour.title')}</DialogTitle>\n            <DialogContent className={classes.contentWrapper}>\n                <List component=\"div\" disablePadding className={classes.contentLeft}>\n                    <LineNameInput theme={props.theme} lineName={props.lineName} onUpdate={props.onUpdate} />\n                    <Divider />\n                    <RecentChipSet onUpdate={props.onUpdate} />\n                </List>\n                <div className={classes.contentControl}>\n                    <ColourControl theme={props.theme} onUpdate={props.onUpdate} />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\">\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Dialog2;\n\nconst LineNameInput = (props: { lineName: Name; theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const classes = useStyles();\n\n    const nameChange = (value: string, index: number) => {\n        let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n        props.onUpdate('name', newName);\n    };\n\n    return (\n        <ListItem style={{ justifyContent: 'center' }}>\n            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                <Icon className={classes.iconRoot}>edit</Icon>\n                <InputBase\n                    value={props.lineName[0]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputZH,\n                    }}\n                    style={{ color: props.theme[3] || '#fff' }}\n                    onChange={e => nameChange(e.target.value, 0)}\n                    autoFocus\n                />\n                <InputBase\n                    value={props.lineName[1]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputEN,\n                    }}\n                    style={{ color: props.theme[3] || '#fff' }}\n                    onChange={e => nameChange(e.target.value, 1)}\n                />\n            </Paper>\n        </ListItem>\n    );\n};\n\nconst RecentChipSet = (props: { onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { param } = useContext(ParamContext);\n\n    const allInfos = useMemo(\n        () =>\n            new Set(\n                Object.values(param.stn_list)\n                    .reduce(\n                        (acc, { transfer }) => {\n                            const { info } = transfer;\n                            return acc.concat(...info);\n                        },\n                        [[...param.theme, ...param.line_name] as InterchangeInfo]\n                    )\n                    .map(val => JSON.stringify(val))\n                    .reverse()\n            ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    const chips = useMemo(\n        () =>\n            [...allInfos].map((x, i) => {\n                const info: InterchangeInfo = JSON.parse(x);\n                const label = info.slice(4).map((txt, i) => (\n                    <span key={i} style={{ color: info[3] }}>\n                        {txt}\n                    </span>\n                ));\n\n                return (\n                    <Chip\n                        key={i}\n                        onClick={() => {\n                            props.onUpdate('theme', info.slice(0, 4));\n                            props.onUpdate('name', info.slice(4));\n                        }}\n                        style={{ backgroundColor: info[2] }}\n                        className={classes.chipRoot}\n                        classes={{ label: classes.chipLabel }}\n                        {...{ label }}\n                    />\n                );\n            }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ListItem>\n            <ListItemText\n                primary={t('colour.recent')}\n                secondary={chips}\n                secondaryTypographyProps={{ component: 'div' }}\n                classes={{ secondary: classes.chipWrapper }}\n            />\n        </ListItem>\n    );\n};\n\nconst ColourControl = (props: { theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const [tabIndex, setTabIndex] = useState(props.theme[0] === 'other' ? 1 : 0);\n\n    const tabNav = (\n        <Tabs\n            value={tabIndex}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(_, val) => setTabIndex(val)}\n            variant=\"fullWidth\"\n            scrollButtons=\"off\"\n        >\n            <Tab label={t('colour.palette')} style={{ minWidth: 'unset' }} />\n            <Tab label={t('colour.custom')} style={{ minWidth: 'unset' }} />\n        </Tabs>\n    );\n\n    const panel = (idx => {\n        switch (idx) {\n            case 0:\n                return <PalettePanel {...props} />;\n            case 1:\n                return <CustomPanel {...props} />;\n            default:\n                return <></>;\n        }\n    })(tabIndex);\n\n    return (\n        <>\n            {tabNav}\n            {panel}\n        </>\n    );\n};\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        listItemIcon: {\n            width: '1em',\n            fontSize: '1.5rem',\n            textAlign: 'center',\n        },\n    })\n);\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>文</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameZH')}\n                        onChange={props.onUpdate(0)}\n                        value={props.name[0]}\n                        autoFocus\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>A</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameEN')}\n                        onChange={props.onUpdate(1)}\n                        value={props.name[1]}\n                        helperText={t('stations.edit.name.nameENHelper')}\n                    />\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.name.toString()]\n    );\n};\n\nexport default NameListItems;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    IconButton,\n    Icon,\n    Divider,\n    Button,\n    ListItemIcon,\n    Switch,\n    Chip,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Tooltip,\n    makeStyles,\n    createStyles,\n    Select,\n} from '@material-ui/core';\nimport { ParamContext, CanvasContext } from '../../../context';\nimport ColourDialog from '../../colour-diag';\nimport NameListItems from './name-list-items';\n\nconst StationEditInterchangeTab = (props: { stnId: string }) => {\n    const { t } = useTranslation();\n\n    const { rmgStyle } = useContext(CanvasContext);\n    const { param, dispatch } = useContext(ParamContext);\n    const stnTrans = param.stn_list[props.stnId].transfer;\n\n    const [osiNameDialogOpened, setOsiNameDialogOpened] = React.useState(false);\n\n    const addClick = (index: number) => {\n        let newInfo = [...param.theme, '轉綫', 'Line'] as InterchangeInfo;\n        dispatch({\n            type: 'ADD_STATION_INTERCHANGE_INFO',\n            stnId: props.stnId,\n            setIdx: index,\n            info: newInfo,\n        });\n    };\n\n    const deleteClick = (index: number, i: number) => {\n        dispatch({\n            type: 'REMOVE_STATION_INTERCHANGE_INFO',\n            stnId: props.stnId,\n            setIdx: index,\n            intIdx: i,\n        });\n    };\n\n    return (\n        <List>\n            <ListItem>\n                <ListItemText>\n                    <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.within')}</h3>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <Tooltip title={t('stations.edit.interchange.add')} aria-label=\"add\">\n                        <IconButton onClick={() => addClick(0)}>\n                            <Icon>add_circle</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <InterchangeChipSet stnId={props.stnId} setIndex={0} onDelete={i => deleteClick(0, i)} />\n            </ListItem>\n            {['mtr', 'shmetro'].includes(rmgStyle || '') && (\n                <>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText>\n                            <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.osi')}</h3>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                style={{ lineHeight: '1rem', whiteSpace: 'pre', marginRight: 5 }}\n                                onClick={() => setOsiNameDialogOpened(true)}\n                            >\n                                {stnTrans.osi_names[0] ? stnTrans.osi_names[0].join('\\r\\n') : '車站名\\r\\nStn Name'}\n                            </Button>\n                            <OSINameDialog\n                                open={osiNameDialogOpened}\n                                osiName={stnTrans.osi_names[0] || ['', '']}\n                                stnId={props.stnId}\n                                onClose={() => setOsiNameDialogOpened(false)}\n                            />\n                            <Tooltip title={t('stations.edit.interchange.add')} aria-label=\"add\">\n                                <IconButton onClick={() => addClick(1)}>\n                                    <Icon>add_circle</Icon>\n                                </IconButton>\n                            </Tooltip>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <InterchangeChipSet stnId={props.stnId} setIndex={1} onDelete={i => deleteClick(1, i)} />\n                    </ListItem>\n                    <ListItem>\n                        <span>{t('stations.edit.interchange.note')}</span>\n                    </ListItem>\n                </>\n            )}\n            {rmgStyle === 'mtr' && <InterchangeMore stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default StationEditInterchangeTab;\n\nconst intChipSetStyles = makeStyles(() =>\n    createStyles({\n        intChip: {\n            borderRadius: 4.5,\n            height: 40,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        intChipText: {\n            display: 'block',\n            textAlign: 'center' as 'center',\n        },\n        intChipTextZH: {\n            fontSize: 18,\n            lineHeight: '1.2rem',\n        },\n        intChipTextEN: {\n            fontSize: '.75rem',\n            lineHeight: '.9rem',\n            whiteSpace: 'pre-wrap' as 'pre-wrap',\n        },\n        intChipLabel: {\n            paddingLeft: 6,\n            paddingRight: 6,\n        },\n        intChipDeleteIcon: {\n            marginLeft: -3,\n        },\n    })\n);\n\ninterface InterchangeChipSetProps {\n    stnId: string;\n    setIndex: number;\n    onDelete: (i: number) => void;\n}\n\nconst InterchangeChipSet = (props: InterchangeChipSetProps) => {\n    const classes = intChipSetStyles();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const intInfos = param.stn_list[props.stnId].transfer.info[props.setIndex];\n\n    const [chipSelected, setChipSelected] = React.useState(-1);\n    const [nameDialogOpened, setNameDialogOpened] = React.useState(false);\n\n    const handleClick = (index: number) => {\n        setChipSelected(index);\n        setNameDialogOpened(true);\n    };\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'theme') {\n            dispatch({\n                type: 'UPDATE_STATION_INTERCHANGE_INFO',\n                stnId: props.stnId,\n                setIdx: props.setIndex,\n                intIdx: chipSelected,\n                info: (value as string[]).concat(Array(2)) as InterchangeInfo,\n            });\n        }\n        if (key === 'name') {\n            dispatch({\n                type: 'UPDATE_STATION_INTERCHANGE_INFO',\n                stnId: props.stnId,\n                setIdx: props.setIndex,\n                intIdx: chipSelected,\n                info: Array(4).concat(value) as InterchangeInfo,\n            });\n        }\n    };\n\n    const intChips = intInfos?.map((intInfo, i) => {\n        let label = (\n            <span style={{ color: intInfo[3] }}>\n                <span className={`${classes.intChipText} ${classes.intChipTextZH}`}>{intInfo[4]}</span>\n                <span className={`${classes.intChipText} ${classes.intChipTextEN}`}>{intInfo[5]}</span>\n            </span>\n        );\n        return (\n            <Chip\n                key={i}\n                label={label}\n                className={classes.intChip}\n                classes={{\n                    label: classes.intChipLabel,\n                    deleteIcon: classes.intChipDeleteIcon,\n                }}\n                style={{ backgroundColor: intInfo[2] }}\n                onDelete={() => props.onDelete(i)}\n                onClick={() => handleClick(i)}\n            />\n        );\n    });\n\n    return (\n        <div>\n            {intChips}\n\n            <ColourDialog\n                open={nameDialogOpened}\n                theme={\n                    intInfos?.[chipSelected] === undefined\n                        ? (([] as any) as Theme)\n                        : [\n                              intInfos[chipSelected][0],\n                              intInfos[chipSelected][1],\n                              intInfos[chipSelected][2],\n                              intInfos[chipSelected][3] as '#fff' | '#000',\n                          ]\n                }\n                lineName={\n                    intInfos?.[chipSelected] === undefined\n                        ? ['', '']\n                        : [intInfos[chipSelected][4], intInfos[chipSelected][5]]\n                }\n                onUpdate={nameDialogUpdate}\n                onClose={() => setNameDialogOpened(false)}\n            />\n        </div>\n    );\n};\n\ninterface OSINameDialogProps {\n    open: boolean;\n    stnId: string;\n    osiName: Name;\n    onClose: () => void;\n}\n\nconst OSINameDialog = React.memo(\n    (props: OSINameDialogProps) => {\n        const { t } = useTranslation();\n\n        const { dispatch } = useContext(ParamContext);\n\n        const handleUpdate = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newOSIName = props.osiName.map((val, i) => (i === index ? event.target.value : val)) as Name;\n            dispatch({ type: 'UPDATE_STATION_OSI_NAME', stnId: props.stnId, name: newOSIName });\n        };\n\n        return (\n            <Dialog open={props.open} onClose={props.onClose}>\n                <DialogTitle>{t('stations.edit.interchange.osiName')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <NameListItems onUpdate={handleUpdate} name={props.osiName} />\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                        {t('dialog.done')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) =>\n        prevProps.open === nextProps.open && prevProps.osiName.toString() === nextProps.osiName.toString()\n);\n\nconst InterchangeMore = (props: { stnId: string }) => {\n    const { t } = useTranslation();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const stnTrans = param.stn_list[props.stnId].transfer;\n\n    const tickDirecChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let direction = event.target.value;\n        if (direction === 'l' || direction === 'r')\n            dispatch({\n                type: 'UPDATE_STATION_TICK_DIREC',\n                stnId: props.stnId,\n                direction,\n            });\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Divider />\n                <ListItem>\n                    <ListItemText>\n                        <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.settings')}</h3>\n                    </ListItemText>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>format_textdirection_l_to_r</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.tickDirec.label')} />\n                    <ListItemSecondaryAction>\n                        <Select native value={stnTrans.tick_direc} onChange={tickDirecChange}>\n                            {['l', 'r'].map(d => (\n                                <option key={d} value={d}>\n                                    {t('stations.edit.interchange.tickDirec.' + d)}\n                                </option>\n                            ))}\n                        </Select>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>attach_money</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.paidArea')} />\n                    <ListItemSecondaryAction>\n                        <Switch\n                            color=\"primary\"\n                            edge=\"end\"\n                            onChange={(_, checked) =>\n                                dispatch({\n                                    type: 'UPDATE_STATION_PAID_AREA',\n                                    stnId: props.stnId,\n                                    isPaid: checked,\n                                })\n                            }\n                            checked={stnTrans.paid_area}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.stnId, stnTrans.tick_direc, stnTrans.paid_area]\n    );\n};\n"],"sourceRoot":""}