{"version":3,"sources":["svgs/destination/destination-shmetro.tsx"],"names":["memo","DefsSHMetro","InfoSHMetro","id","viewBox","refY","d","fill","routes","useAppSelector","store","helper","param","validDests","Set","filter","route","includes","current_stn_idx","map","res","stnId","direction","reverse","destNames","stn_list","name","terminalEl","useRef","useState","width","terminalBBox","setTerminalBBox","useEffect","current","getBBox","flat","middle","svgWidth","destination","platformX","PLATFORM_WIDTH","transform","svg_height","stroke","strokeWidth","markerEnd","Terminal","ref","platform_num","PlatformNum","line_name","match","LineNameBoxNumber","LineNameBoxText","forwardRef","props","useMemo","length","textAnchor","i","className","fontSize","dy","r","dominantBaseline","x","boxX","height","lineNumber","lineNameRes","letterSpacing"],"mappings":"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","file":"static/js/destinationSHMetro.44afcd25.chunk.js","sourcesContent":["import React, { memo, useMemo, forwardRef, useRef, useState, useEffect } from 'react';\nimport { useAppSelector } from '../../redux';\n\nexport default memo(function DestinationSHMetro() {\n    return (\n        <>\n            <DefsSHMetro />\n            <InfoSHMetro />\n        </>\n    );\n});\n\nconst DefsSHMetro = memo(() => (\n    <defs>\n        {/* An extension of the line/path. Remember to minus the stroke-width.  */}\n        <marker id=\"slope\" viewBox=\"-1.5 0 3 1.5\" refY={0.5}>\n            <path d=\"M0,0L1,1H-1z\" fill=\"var(--rmg-theme-colour)\" />\n        </marker>\n    </defs>\n));\n\nconst InfoSHMetro = () => {\n    const { routes } = useAppSelector(store => store.helper);\n    const param = useAppSelector(store => store.param);\n\n    // for each left valid destinations, get the name from id\n    const validDests = [\n        ...new Set(\n            routes\n                .filter(route => route.includes(param.current_stn_idx))\n                .map(route => {\n                    let res = route.filter(stnId => !['linestart', 'lineend'].includes(stnId));\n                    return param.direction === 'l' ? res[0] : res.reverse()[0];\n                })\n        ),\n    ];\n    const destNames: string[][] = [\n        validDests.map(id => param.stn_list[id].name[0]),\n        validDests.map(id => param.stn_list[id].name[1]),\n    ];\n\n    const terminalEl = useRef<SVGGElement | null>(null);\n    const [terminalBBox, setTerminalBBox] = useState({ width: 0 } as SVGRect);\n    useEffect(\n        () => setTerminalBBox(terminalEl.current!.getBBox()),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [...destNames.flat()]\n    );\n\n    const [middle, MARGIN, PADDING, LINEBOX_WIDTH, PLATFORM_WIDTH] = [param.svgWidth.destination / 2, 10, 36, 264, 325];\n    // Alignment Priority:\n    // 1. Centre of canvas\n    // 2. Centre of remaining\n    const platformX =\n        middle - MARGIN - PADDING - terminalBBox.width >= PLATFORM_WIDTH / 2 &&\n        middle - MARGIN - PADDING - LINEBOX_WIDTH >= PLATFORM_WIDTH / 2\n            ? middle\n            : param.direction === 'l'\n            ? (param.svgWidth.destination + terminalBBox.width - LINEBOX_WIDTH) / 2\n            : (param.svgWidth.destination - terminalBBox.width + LINEBOX_WIDTH) / 2;\n\n    // the platform screen doors flash light\n    // #20\n    // $('g#station_info_shmetro > rect').attr({ transform: `translate(${this._svgDestWidth / 2},${250 + dh})` })\n\n    return (\n        <g transform={`translate(0,${param.svg_height - 300})`}>\n            <path\n                stroke=\"var(--rmg-theme-colour)\"\n                strokeWidth={12}\n                d={\n                    param.direction === 'l'\n                        ? `M${param.svgWidth.destination - 24},16 H 36`\n                        : `M24,16 H ${param.svgWidth.destination - 36}`\n                }\n                transform=\"translate(0,220)\"\n                markerEnd=\"url(#slope)\"\n            />\n\n            <Terminal ref={terminalEl} destNames={destNames} />\n            {param.platform_num !== false && (\n                <g transform={`translate(${platformX},0)`}>\n                    <PlatformNum />\n                </g>\n            )}\n            {/* <!-- Todo: fix this absolute position --> */}\n            {/* Todo: fix svgWidth.destination*0.8, this has only been tested on 1000 width */}\n\n            {param.line_name[0].match(/^[\\w\\d]+/) ? <LineNameBoxNumber /> : <LineNameBoxText />}\n        </g>\n    );\n};\n\nconst Terminal = forwardRef((props: { destNames: string[][] }, ref: React.Ref<SVGGElement>) => {\n    const param = useAppSelector(store => store.param);\n\n    return (\n        <g ref={ref} transform={`translate(${param.direction === 'l' ? 36 : param.svgWidth.destination - 36},145)`}>\n            {useMemo(\n                () => (\n                    <>\n                        {/* translate is not a generalized implementation, only dest length of 1 and 2 are supported */}\n                        <g transform={`translate(0,${props.destNames[0].length === 2 ? -20 : 20})`}>\n                            <path\n                                d=\"M60,60L0,0L60-60H100L55-15H160V15H55L100,60z\"\n                                fill=\"black\"\n                                transform={`rotate(${param.direction === 'l' ? 0 : 180})scale(0.8)`}\n                            />\n                        </g>\n                        <g\n                            textAnchor={param.direction === 'l' ? 'start' : 'end'}\n                            transform={`translate(${param.direction === 'l' ? 128 + 20 : -128 - 20},25)`}\n                        >\n                            {props.destNames[0].map((name, i) => (\n                                <text className=\"rmg-name__zh\" fontSize={70} dy={i * -100 + 7} key={i}>\n                                    {'往' + name}\n                                </text>\n                            ))}\n                            {props.destNames[1].map((name, i) => (\n                                <text className=\"rmg-name__en\" fontSize={25} dy={i * -100 + 40} key={i}>\n                                    {'To ' + name}\n                                </text>\n                            ))}\n                        </g>\n                    </>\n                ),\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                [param.direction, ...props.destNames.flat()]\n            )}\n        </g>\n    );\n});\n\nconst PlatformNum = () => {\n    const param = useAppSelector(store => store.param);\n\n    // Total width: 325\n    return (\n        <g transform={`translate(${-325 / 2 + 60},150)`}>\n            <circle r={60} fill=\"none\" stroke=\"black\" strokeWidth={2} />\n            <text className=\"rmg-name__en\" dominantBaseline=\"central\" fontSize={120} textAnchor=\"middle\">\n                {param.platform_num}\n            </text>\n            <text className=\"rmg-name__zh\" fontSize={100} dominantBaseline=\"central\" x={65}>\n                站台\n            </text>\n        </g>\n    );\n};\n\nconst LineNameBoxText = () => {\n    const param = useAppSelector(store => store.param);\n    const { line_name } = param;\n\n    const boxX = param.direction === 'l' ? param.svgWidth.destination - 36 - 132 : 36 + 132;\n\n    // Total width: 264\n    return useMemo(\n        () => (\n            <g transform={`translate(${boxX},92)`}>\n                <rect fill=\"var(--rmg-theme-colour)\" x={-132} width={264} height={120} />\n                <g textAnchor=\"middle\" transform=\"translate(0,68)\" fill=\"var(--rmg-theme-fg)\">\n                    <text className=\"rmg-name__zh\" fontSize={68}>\n                        {line_name[0]}\n                    </text>\n                    <text className=\"rmg-name__en\" fontSize={30} dy={42}>\n                        {line_name[1]}\n                    </text>\n                </g>\n            </g>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [boxX, ...line_name]\n    );\n};\n\nconst LineNameBoxNumber = () => {\n    const param = useAppSelector(store => store.param);\n\n    const [lineNumber, lineNameRes] = param.line_name[0].match(/^[\\w\\d]+|.+/g) as string[];\n\n    // Number width: 108\n    // Text width: 136\n    // Gap: 20\n    // Left: 108/2 + 20 + 136 = 210\n    // Right: 108/2 = 54\n    const boxX = param.direction === 'l' ? param.svgWidth.destination - 36 - 210 : 36 + 54;\n\n    // Total width: 264\n    return useMemo(\n        () => (\n            <g transform={`translate(${boxX},92)`}>\n                <rect fill=\"var(--rmg-theme-colour)\" x={-54} width={108} height={120} />\n                <text\n                    className=\"rmg-name__zh\"\n                    fill=\"var(--rmg-theme-fg)\"\n                    fontSize={96}\n                    textAnchor=\"middle\"\n                    dominantBaseline=\"central\"\n                    transform=\"translate(0,60)\"\n                    letterSpacing={-5}\n                >\n                    {lineNumber}\n                </text>\n                <g textAnchor=\"start\" transform=\"translate(74,68)\">\n                    <text className=\"rmg-name__zh\" fontSize={68}>\n                        {lineNameRes}\n                    </text>\n                    <text className=\"rmg-name__en\" fontSize={30} dy={42}>\n                        {param.line_name[1]}\n                    </text>\n                </g>\n            </g>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [boxX, ...param.line_name]\n    );\n};\n"],"sourceRoot":""}