{"version":3,"sources":["panels/panel-info.tsx"],"names":["useStyles","makeStyles","createStyles","panel","maxWidth","display","flexDirection","justifyContent","alignItems","margin","textAlign","root","width","media","height","detail","action","typography","memo","classes","t","useTranslation","className","image","process","component","variant","color","size","href"],"mappings":"iIAAA,yCAaMA,EAAYC,sBAAW,kBACzBC,uBAAa,CACTC,MAAO,CACHC,SAAU,IACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZ,wBAAyB,CACrBC,OAAQ,QACRC,UAAW,YAGnBC,KAAM,CACFN,QAAS,OACTG,WAAY,SACZI,MAAO,cACPH,OAAQ,SAEZI,MAAO,CACHC,OAAQ,IACRF,MAAO,IACPH,OAAQ,GAEZM,OAAQ,CACJV,QAAS,OACTC,cAAe,UAEnBU,OAAQ,CACJT,eAAgB,YAEpBU,WAAY,CACRR,OAAQ,cAKLS,0BAAK,WAChB,IAAMC,EAAUnB,IACRoB,EAAMC,2BAAND,EAER,OACI,yBAAKE,UAAWH,EAAQhB,OACpB,kBAAC,OAAD,CAAMmB,UAAWH,EAAQR,MACrB,kBAAC,YAAD,CAAWW,UAAWH,EAAQN,MAAOU,MAAOC,kCAC5C,yBAAKF,UAAWH,EAAQJ,QACpB,kBAAC,cAAD,KACI,kBAAC,aAAD,CAAYU,UAAU,KAAKC,QAAQ,MAC9BN,EAAE,eAEP,kBAAC,aAAD,CAAYM,QAAQ,YAAYC,MAAM,iBAAtC,kCAIJ,kBAAC,cAAD,CAAaL,UAAWH,EAAQH,QAC5B,kBAAC,SAAD,CAAQY,KAAK,QAAQD,MAAM,UAAUE,KAAK,iDAA1C,UAGA,kBAAC,SAAD,CACID,KAAK,QACLD,MAAM,UACNE,KAAK,wDAEJT,EAAE,qBAMnB,kBAAC,aAAD,CAAYM,QAAQ,QAAQC,MAAM,eAC7BP,EAAE,gBAGP,kBAAC,aAAD,CAAYM,QAAQ,QAAQC,MAAM,eAAlC,6DAC+D,IAC3D,kBAAC,aAAD,CAAYF,UAAU,IAAIC,QAAQ,QAAQC,MAAM,UAAUE,KAAK,yBAA/D,YAEc,IAJlB,0DAKuD,IACnD,kBAAC,aAAD,CACIJ,UAAU,IACVC,QAAQ,QACRC,MAAM,UACNE,KAAK,oDAJT","file":"static/js/panelInfo.dc459ff3.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Card,\n    CardMedia,\n    CardContent,\n    Typography,\n    makeStyles,\n    createStyles,\n    CardActions,\n    Button,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        panel: {\n            maxWidth: 500,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& .MuiTypography-root': {\n                margin: '8px 0',\n                textAlign: 'justify',\n            },\n        },\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: 'fit-content',\n            margin: '8px 0',\n        },\n        media: {\n            height: 120,\n            width: 120,\n            margin: 6,\n        },\n        detail: {\n            display: 'flex',\n            flexDirection: 'column',\n        },\n        action: {\n            justifyContent: 'flex-end',\n        },\n        typography: {\n            margin: '8px 0',\n        },\n    })\n);\n\nexport default memo(function PanelInfo() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <div className={classes.panel}>\n            <Card className={classes.root}>\n                <CardMedia className={classes.media} image={process.env.PUBLIC_URL + '/logo512.png'} />\n                <div className={classes.detail}>\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            {t('info.title')}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            @wongchito and @thekingofcity\n                        </Typography>\n                    </CardContent>\n                    <CardActions className={classes.action}>\n                        <Button size=\"small\" color=\"primary\" href=\"https://github.com/wongchito/RailMapGenerator\">\n                            GitHub\n                        </Button>\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            href=\"https://github.com/wongchito/RailMapGenerator/issues\"\n                        >\n                            {t('info.feedback')}\n                        </Button>\n                    </CardActions>\n                </div>\n            </Card>\n\n            <Typography variant=\"body2\" color=\"textPrimary\">\n                {t('info.notice')}\n            </Typography>\n\n            <Typography variant=\"body2\" color=\"textPrimary\">\n                All flag emojis shown on Windows platforms are designed by{' '}\n                <Typography component=\"a\" variant=\"body2\" color=\"primary\" href=\"https://openmoji.org/\">\n                    OpenMoji\n                </Typography>{' '}\n                â€“ the open-source emoji and icon project. License:{' '}\n                <Typography\n                    component=\"a\"\n                    variant=\"body2\"\n                    color=\"primary\"\n                    href=\"https://creativecommons.org/licenses/by-sa/4.0/#\"\n                >\n                    CC BY-SA 4.0\n                </Typography>\n            </Typography>\n        </div>\n    );\n});\n"],"sourceRoot":""}