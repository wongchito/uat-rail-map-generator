{"version":3,"sources":["../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/react-i18next/dist/es/withTranslation.js","panels/save/upload-item.tsx","panels/save/export-diag/utils.ts","panels/save/export-diag/preview-diag.tsx","panels/save/export-diag/index.ts","panels/save/export-diag/dialog.tsx","panels/save/panel.tsx","panels/save/index.ts"],"names":["objectWithoutPropertiesLoose","module","exports","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","__esModule","sourceKeys","keys","DialogContentText","React","props","ref","Typography","_extends","component","variant","color","withStyles","root","marginBottom","name","Card","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","clsx","elevation","overflow","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","type","concat","capitalize","checked","disabled","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","_excluded","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","UploadLi","t","useTranslation","useState","open","setOpen","importedParam","setImportedParam","ListItem","button","htmlFor","ListItemIcon","Icon","ListItemText","accept","style","display","id","onChange","event","console","log","files","Promise","resolve","reader","FileReader","onloadend","readAsText","then","e","JSON","parse","result","param","ImportDialog","onClose","document","getElementById","value","localStorage","rmgParam","stringify","window","location","reload","content","Dialog","DialogTitle","DialogContent","dividers","whiteSpace","stn_list","entries","map","x","includes","join","trim","replace","DialogActions","Button","onClick","autoFocus","test","svgEl","scale","svgW","viewBox","baseVal","width","svgH","height","canvas","querySelectorAll","Number","devicePixelRatio","setAttribute","toString","ctx","getContext","clearRect","el","elStyle","getComputedStyle","fontFamily","fill","dominantBaseline","textAnchor","img","Image","onload","setTimeout","drawImage","uri","filename","link","createElement","download","href","body","appendChild","click","removeChild","saveAs","toDataURL","Date","toISOString","src","btoa","unescape","encodeURIComponent","outerHTML","useStyles","makeStyles","createStyles","contentWrapper","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","breakpoints","down","flexDirection","contentCanvas","flex","contentControl","flexGrow","flexShrink","minWidth","contentRoot","padding","contentControlContent","justifyContent","formControlRoot","margin","PreviewDialog","rmgStyle","useContext","CanvasContext","setSvgEl","isLoaded","setIsLoaded","showBorder","setShowBorder","isTransparent","setIsTransparent","setScale","format","setFormat","isAccept","setIsAccept","isTermsDialogOpen","setIsTermsDialogOpen","contentEl","useRef","useEffect","querySelector","getPropertyValue","match","thisSVGHeight","elem","cloneNode","setProperty","tag","l","sheet","cssRules","rule","cssText","txt","s","textContent","prepend","getBase64FontFace","response","a","all","uris","catch","err","alert","error","fonts","ready","handleClose","current","removeAttribute","maxWidth","dangerouslySetInnerHTML","__html","List","disablePadding","ListItemSecondaryAction","Switch","_","Divider","Select","native","nextScale","getAttribute","ratio","toFixed","cursor","TermsDialog","useMemo","ExportDialog","canvasAvailable","canvasToShown","previewDialogOpened","setPreviewDialogOpened","setCanvas","c","TemplateDialog","lazy","allLangs","en","SaveLists","i18n","isTempDialogOpen","setIsTempDialogOpen","isExportDialogOpen","setIsExportDialogOpen","isStyleDialogOpen","setIsStyleDialogOpen","isLangDialogOpen","setIsLangDialogOpen","getTransText2","languages","Suspense","fallback","LinearProgress","StyleDialog","gtag","event_category","event_label","LangDialog","to","textDecoration","lang","language","changeLanguage","title","documentElement","Panel","TranslatedSaveLists","ns","options","undefined","WrappedComponent","I18nextWithTranslation","_ref","forwardedRef","rest","_useTranslation","_useTranslation2","_slicedToArray","passDownProps","tReady","withRef","displayName","getDisplayName","forwardRef","assign","withTranslation","Grid","container","justify","alignItems","item","xs","sm","md","lg"],"mappings":"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","file":"static/js/panelSave.72585e59.chunk.js","sourcesContent":["var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"forwardedRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useTranslation } from './useTranslation';\nimport { getDisplayName } from './utils';\nexport function withTranslation(ns) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      var forwardedRef = _ref.forwardedRef,\n          rest = _objectWithoutProperties(_ref, _excluded);\n\n      var _useTranslation = useTranslation(ns, rest),\n          _useTranslation2 = _slicedToArray(_useTranslation, 3),\n          t = _useTranslation2[0],\n          i18n = _useTranslation2[1],\n          ready = _useTranslation2[2];\n\n      var passDownProps = _objectSpread(_objectSpread({}, rest), {}, {\n        t: t,\n        i18n: i18n,\n        tReady: ready\n      });\n\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n\n      return React.createElement(WrappedComponent, passDownProps);\n    }\n\n    I18nextWithTranslation.displayName = \"withI18nextTranslation(\".concat(getDisplayName(WrappedComponent), \")\");\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n\n    var forwardRef = function forwardRef(props, ref) {\n      return React.createElement(I18nextWithTranslation, Object.assign({}, props, {\n        forwardedRef: ref\n      }));\n    };\n\n    return options.withRef ? React.forwardRef(forwardRef) : I18nextWithTranslation;\n  };\n}","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n} from '@material-ui/core';\n\nexport default function UploadLi() {\n    const { t } = useTranslation();\n\n    const [open, setOpen] = React.useState(false);\n    const [importedParam, setImportedParam] = React.useState({} as RMGParam);\n\n    const handleUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n        console.log(event.target.files![0]);\n        let filePromise = new Promise((resolve: (event: ProgressEvent<FileReader>) => void) => {\n            let reader = new FileReader();\n            reader.onloadend = resolve;\n            reader.readAsText(event.target.files![0]);\n        });\n        filePromise\n            .then(e => JSON.parse(e.target!.result as string))\n            .then(param => {\n                setImportedParam(param);\n                setOpen(true);\n            });\n    };\n\n    const handleClose = (action: string) => () => {\n        if (action === 'close') {\n            (document.getElementById('upload-param') as HTMLInputElement).value = '';\n            setOpen(false);\n            return;\n        }\n        if (action === 'accept') {\n            localStorage.rmgParam = JSON.stringify(importedParam);\n            window.location.reload(true);\n        }\n    };\n\n    return (\n        <>\n            <ListItem button component=\"label\" htmlFor=\"upload-param\">\n                <ListItemIcon>\n                    <Icon>folder_open</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('file.open.button')} />\n            </ListItem>\n            <input\n                type=\"file\"\n                accept=\"application/json\"\n                style={{ display: 'none' }}\n                id=\"upload-param\"\n                onChange={handleUpload}\n            />\n            <ImportDialog open={open} onClose={handleClose} content={importedParam} />\n        </>\n    );\n}\n\ninterface ImportDialogProps {\n    onClose: (action: string) => () => void;\n    open: boolean;\n    content: {} | RMGParam;\n}\n\nfunction ImportDialog(props: ImportDialogProps) {\n    const { t } = useTranslation();\n\n    const describeParams = (param: RMGParam) => {\n        return `Number of stations: ${Object.keys(param.stn_list).length - 2}\n                ${Object.entries(param.stn_list)\n                    .map(x => (['linestart', 'lineend'].includes(x[0]) ? '' : x[1].name.join(' - ')))\n                    .join('\\r\\n')\n                    .trim()\n                    .replace(/\\\\/, ' ')}`;\n    };\n\n    return (\n        <Dialog onClose={props.onClose('close')} open={props.open}>\n            <DialogTitle>Your Configuration</DialogTitle>\n            <DialogContent dividers>\n                <DialogContentText style={{ whiteSpace: 'pre-line' }}>\n                    {Object.keys(props.content).length === 0 ? 'empty' : describeParams(props.content as RMGParam)}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose('close')} color=\"primary\">\n                    {t('dialog.cancel')}\n                </Button>\n                <Button onClick={props.onClose('accept')} color=\"primary\" autoFocus>\n                    Import\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","export function test(svgEl: SVGSVGElement, scale: number) {\n    let svgW = svgEl.viewBox.baseVal.width;\n    let svgH = svgEl.viewBox.baseVal.height;\n\n    // svgEl.removeAttribute('height');\n\n    let canvas = document.querySelectorAll('canvas')[0];\n    canvas.width = Number(svgW) * window.devicePixelRatio * scale;\n    canvas.height = Number(svgH) * window.devicePixelRatio * scale;\n\n    svgEl.setAttribute('width', canvas.width.toString());\n    svgEl.setAttribute('height', canvas.height.toString());\n\n    let ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // bypass Chrome min font size (to be improved)\n\n    svgEl.querySelectorAll('.rmg-name__en.rmg-name__mtr--station').forEach(el => el.setAttribute('font-size', '11px'));\n\n    svgEl.querySelectorAll('.rmg-name__zh.IntName').forEach(el => el.setAttribute('font-size', '10px'));\n\n    svgEl.querySelectorAll('.rmg-name__en.rmg-name__mtr--osi').forEach(el => el.setAttribute('font-size', '9px'));\n\n    svgEl\n        .querySelectorAll('.rmg-name__en.rmg-name__gzmtr--next2-dest')\n        .forEach(el => el.setAttribute('font-size', '8.5px'));\n\n    svgEl.querySelectorAll('.rmg-name__en.IntName').forEach(el => el.setAttribute('font-size', '7px'));\n\n    // svgEl\n    //     .querySelectorAll('text:not([font-size]), tspan:not([font-size])')\n    //     .forEach((el) => el.setAttribute('font-size', window.getComputedStyle(el).fontSize));\n\n    svgEl.querySelectorAll('text, tspan').forEach(el => {\n        let elStyle = window.getComputedStyle(el);\n        el.setAttribute('font-family', elStyle.fontFamily);\n        el.setAttribute('fill', elStyle.fill);\n        el.setAttribute('dominant-baseline', elStyle.dominantBaseline);\n        el.setAttribute('text-anchor', elStyle.textAnchor || '');\n        // el.removeAttribute('class');\n    });\n\n    var img = new Image();\n    img.onload = () => {\n        setTimeout(() => {\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            saveAs(canvas.toDataURL('image/png'), 'rmg.' + new Date().toISOString() + '.png');\n        }, 2000);\n    };\n    img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgEl.outerHTML)));\n}\n\nfunction saveAs(uri: string, filename: string) {\n    var link = document.createElement('a');\n\n    if (typeof link.download === 'string') {\n        link.href = uri;\n        link.download = filename;\n        //Firefox requires the link to be in the body\n        document.body.appendChild(link);\n        //simulate click\n        link.click();\n        //remove the link when done\n        document.body.removeChild(link);\n    } else {\n        window.open(uri);\n    }\n}\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Button,\n    Switch,\n    makeStyles,\n    createStyles,\n    Select,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemSecondaryAction,\n    Divider,\n    Checkbox,\n    Typography,\n} from '@material-ui/core';\n\nimport { test } from './utils';\nimport { CanvasContext } from '../../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        contentWrapper: {\n            display: 'flex',\n            overflow: 'hidden',\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        contentCanvas: {\n            flex: 1,\n        },\n        contentControl: {\n            flexGrow: 0,\n            flexShrink: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            minWidth: 250,\n        },\n        contentRoot: {\n            padding: 'unset',\n            '&:first-child': {\n                paddingTop: 'unset',\n            },\n        },\n        contentControlContent: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n        },\n        formControlRoot: {\n            margin: 0,\n        },\n    })\n);\n\ninterface Props {\n    onClose: (action: string) => void;\n    open: boolean;\n    canvas: string;\n}\n\nexport default function PreviewDialog(props: Props) {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { rmgStyle } = React.useContext(CanvasContext);\n\n    const [svgEl, setSvgEl] = useState((document.createElement('svg') as Element) as SVGSVGElement);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    const [showBorder, setShowBorder] = useState(false);\n    const [isTransparent, setIsTransparent] = useState(false);\n    const [scale, setScale] = useState(1);\n    const [format, setFormat] = useState('png');\n\n    const [isAccept, setIsAccept] = useState(false);\n    const [isTermsDialogOpen, setIsTermsDialogOpen] = useState(false);\n\n    const handleShowBorder = (_: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n        svgEl.querySelector('rect#canvas-border')?.setAttribute('stroke', checked ? 'black' : 'none');\n        setShowBorder(checked);\n    };\n\n    const handleTransparent = (_: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n        svgEl.querySelector('rect#canvas-bg')?.setAttribute('fill', checked ? 'none' : 'white');\n        setIsTransparent(checked);\n    };\n\n    const handleScaleChange = (event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>) => {\n        let nextScale = event.target.value as number;\n        svgEl.setAttribute('height', ((Number(svgEl.getAttribute('height')) / scale) * nextScale).toString());\n        setScale(nextScale);\n    };\n\n    const contentEl = React.useRef<HTMLDivElement | null>(null);\n\n    useEffect(\n        () => {\n            if (props.canvas === '') {\n                setSvgEl((document.createElement('svg') as Element) as SVGSVGElement);\n                setIsLoaded(false);\n                return;\n            }\n            let [, thisSVGHeight] = ['--rmg-svg-width', '--rmg-svg-height']\n                .map(\n                    key =>\n                        (document.querySelector(`svg#${props.canvas}`) as SVGSVGElement).style\n                            .getPropertyValue(key)\n                            .match(/\\d+/g)![0]\n                )\n                .map(Number);\n\n            // let MAX_WIDTH = Math.min(window.innerWidth, 1412) - 64 - 24 * 2;\n            // let MAX_HEIGHT = window.innerHeight - 64 - 64 - 52 - 8 * 2;\n            // let scaleFactor = Math.min(MAX_WIDTH / thisSVGWidth, MAX_HEIGHT / thisSVGHeight);\n\n            let elem = document.querySelector(`svg#${props.canvas}`)!.cloneNode(true) as SVGSVGElement;\n            // elem.setAttribute('width', (thisSVGWidth * scaleFactor).toString());\n            elem.setAttribute('height', (thisSVGHeight * scale).toString());\n            elem.style.setProperty('all', 'initial');\n\n            ['share', props.canvas]\n                .map(tag =>\n                    [\n                        ...([...document.querySelectorAll('link')].filter(l => l.id === 'css_' + tag)[0]\n                            ?.sheet as CSSStyleSheet).cssRules,\n                    ]\n                        .map(rule => rule.cssText)\n                        .join(' ')\n                )\n                .forEach(txt => {\n                    let s = document.createElement('style');\n                    s.textContent = txt;\n                    elem.prepend(s);\n                });\n\n            elem.querySelector('rect#canvas-border')?.setAttribute('stroke', showBorder ? 'black' : 'none');\n            elem.querySelector('rect#canvas-bg')?.setAttribute('fill', isTransparent ? 'none' : 'white');\n\n            if (rmgStyle === 'mtr') {\n                import(/* webpackChunkName: \"panelPreviewMTR\" */ './mtr-helper')\n                    .then(({ getBase64FontFace }) =>\n                        getBase64FontFace(elem)\n                            .then(async response => {\n                                let uris = await Promise.all(response);\n                                let s = document.createElement('style');\n                                s.textContent = uris.join(' ');\n                                elem.prepend(s);\n                            })\n                            .catch(err => {\n                                alert('Failed to fonts. Fonts in the exported PNG will be missing.');\n                                console.error(err);\n                            })\n                    )\n                    .then(() => {\n                        setSvgEl(elem);\n                        document.fonts.ready.then(() => setIsLoaded(true));\n                    });\n            } else {\n                setSvgEl(elem);\n                setIsLoaded(true);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.canvas]\n    );\n\n    const handleClose = (action: 'close' | 'download') => () => {\n        if (action === 'close') {\n            props.onClose('close');\n        } else {\n            let svgEl = contentEl.current!.querySelector('svg') as SVGSVGElement;\n            if (format === 'png') {\n                test(svgEl, scale);\n            } else if (format === 'svg') {\n                svgEl.removeAttribute('height');\n                var link = document.createElement('a');\n                link.href = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgEl.outerHTML)));\n                link.download = 'rmg.' + new Date().toISOString() + '.svg';\n                link.click();\n            }\n            props.onClose('close');\n        }\n    };\n\n    return (\n        <Dialog onClose={handleClose('close')} open={props.open} maxWidth={false}>\n            <DialogTitle>{t('file.preview.title')}</DialogTitle>\n            <div className={classes.contentWrapper}>\n                <DialogContent\n                    dangerouslySetInnerHTML={{ __html: svgEl.outerHTML }}\n                    ref={contentEl}\n                    className={classes.contentCanvas}\n                    classes={{ root: classes.contentRoot }}\n                />\n                <div className={classes.contentControl}>\n                    <DialogContent classes={{ root: classes.contentRoot }} className={classes.contentControlContent}>\n                        <List component=\"div\" disablePadding>\n                            <ListItem>\n                                <ListItemText primary={t('file.preview.transparent')} />\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        color=\"primary\"\n                                        checked={isTransparent}\n                                        onChange={handleTransparent}\n                                        disabled={!isLoaded}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider variant=\"middle\" />\n                            <ListItem>\n                                <ListItemText primary={t('file.preview.border')} />\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        color=\"primary\"\n                                        checked={showBorder}\n                                        onChange={handleShowBorder}\n                                        disabled={!isLoaded}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider variant=\"middle\" />\n                            <ListItem>\n                                <ListItemText primary={t('file.preview.scale')} />\n                                <ListItemSecondaryAction>\n                                    <Select native value={scale} onChange={handleScaleChange} disabled={!isLoaded}>\n                                        {[\n                                            0.25,\n                                            0.33,\n                                            0.5,\n                                            0.67,\n                                            0.75,\n                                            0.8,\n                                            0.9,\n                                            1,\n                                            1.1,\n                                            1.25,\n                                            1.5,\n                                            1.75,\n                                            2,\n                                            2.5,\n                                            3,\n                                            4,\n                                            5,\n                                        ].map(ratio => (\n                                            <option key={ratio} value={ratio}>\n                                                {(ratio * 100).toFixed(0) + '%'}\n                                            </option>\n                                        ))}\n                                    </Select>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider variant=\"middle\" />\n                            <ListItem>\n                                <ListItemText primary={t('file.preview.format')} />\n                                <ListItemSecondaryAction>\n                                    <Select\n                                        native\n                                        value={format}\n                                        onChange={e => setFormat(e.target.value as string)}\n                                        style={{ width: 65 }}\n                                        disabled={!isLoaded}\n                                    >\n                                        <option value=\"png\">PNG</option>\n                                        <option value=\"svg\">SVG (Web Use)</option>\n                                    </Select>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                        <ListItem style={{ padding: 0 }}>\n                            <Checkbox\n                                color=\"primary\"\n                                size=\"small\"\n                                checked={isAccept}\n                                onChange={(_, checked) => setIsAccept(checked)}\n                            />\n                            <Typography variant=\"body2\">\n                                {t('file.preview.terms.accept')}\n                                <Typography\n                                    component=\"a\"\n                                    color=\"primary\"\n                                    variant=\"body2\"\n                                    style={{ cursor: 'pointer' }}\n                                    onClick={() => setIsTermsDialogOpen(true)}\n                                >\n                                    {t('file.preview.terms.tandc')}\n                                </Typography>\n                            </Typography>\n\n                            <TermsDialog open={isTermsDialogOpen} onClose={() => setIsTermsDialogOpen(false)} />\n                        </ListItem>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"outlined\" onClick={handleClose('close')} color=\"primary\" autoFocus>\n                            {t('dialog.cancel')}\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            onClick={handleClose('download')}\n                            color=\"primary\"\n                            disabled={!isLoaded || !isAccept}\n                        >\n                            {t('file.preview.download')}\n                        </Button>\n                    </DialogActions>\n                </div>\n            </div>\n        </Dialog>\n    );\n}\n\nconst TermsDialog = (props: { open: boolean; onClose: () => void }) => {\n    const { t } = useTranslation();\n    return useMemo(\n        () => (\n            <Dialog open={props.open} onClose={props.onClose}>\n                <DialogTitle>{t('file.preview.terms.tandc')}</DialogTitle>\n                <DialogContent dividers>\n                    <Typography component=\"p\">\n                        The downloaded image may be modified, published, or used for other purposes, under the following\n                        conditions.\n                    </Typography>\n                    <Typography component=\"ol\">\n                        <Typography component=\"li\">\n                            The layout of the elements on the sign or rail map, is designed by{' '}\n                            <Typography component=\"a\" color=\"primary\" href=\"http://www.gzmtr.com\" target=\"_blank\">\n                                Guangzhou Metro Corporation\n                            </Typography>\n                            ,{' '}\n                            <Typography component=\"a\" color=\"primary\" href=\"http://www.mtr.com.hk\" target=\"_blank\">\n                                MTR Corporation\n                            </Typography>{' '}\n                            or{' '}\n                            <Typography component=\"a\" color=\"primary\" href=\"http://www.shmetro.com\" target=\"_blank\">\n                                Shanghai Shentong Metro Group\n                            </Typography>\n                            , depending on your selection. You shall grant appropriate permit or license from the\n                            relevant company above before using the downloaded image for commercial purposes, if it is\n                            required to do so.\n                        </Typography>\n                        <Typography component=\"li\">\n                            The elements including shapes and lines on the image are drawn by{' '}\n                            <Typography\n                                component=\"a\"\n                                color=\"primary\"\n                                href=\"https://github.com/wongchito\"\n                                target=\"_blank\"\n                            >\n                                Chito Wong\n                            </Typography>{' '}\n                            and{' '}\n                            <Typography\n                                component=\"a\"\n                                color=\"primary\"\n                                href=\"https://github.com/thekingofcity\"\n                                target=\"_blank\"\n                            >\n                                thekingofcity\n                            </Typography>\n                            , based on the design standards or rules of the companies listed above. You may use them for\n                            any purposes, but it is recommended to state the name and the link of software alongside.\n                        </Typography>\n                        <Typography component=\"li\">\n                            The fonts of the Chinese characters in MTR style are provided by{' '}\n                            <Typography\n                                component=\"a\"\n                                color=\"primary\"\n                                href=\"https://www.google.com/get/noto/help/cjk/\"\n                                target=\"_blank\"\n                            >\n                                Google Inc.\n                            </Typography>{' '}\n                            while all others fonts are rendered from local files. You shall grant appropriate permit or\n                            license from the manufacturers before using the downloaded image for commercial purposes.\n                        </Typography>\n                    </Typography>\n                    <Typography component=\"p\">\n                        We reserve the rights, without notice, to modify, add, or remove these terms.\n                    </Typography>\n                    <Typography component=\"p\">本條款及細則暫只提供英文版，敬請原諒。</Typography>\n                    <Typography component=\"p\" variant=\"body2\">\n                        Last modified: 6 Apr 2020, 12:39 UTC\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"outlined\" color=\"primary\" onClick={props.onClose}>\n                        {t('dialog.close')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.open]\n    );\n};\n","import ExportDialog from './dialog';\n\nexport default ExportDialog;","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Dialog, DialogTitle, DialogContent, List, ListItem, ListItemText } from '@material-ui/core';\n\nimport PreviewDialog from './preview-diag';\nimport { CanvasContext } from '../../../context';\n\ninterface Props {\n    onClose: (action: string) => void;\n    open: boolean;\n}\n\nexport default function ExportDialog(props: Props) {\n    const { t } = useTranslation();\n\n    const { canvasAvailable, canvasToShown } = React.useContext(CanvasContext);\n\n    const [previewDialogOpened, setPreviewDialogOpened] = React.useState(false);\n    const [canvas, setCanvas] = React.useState('');\n\n    const handleClose = (action: string) => () => {\n        if (action !== 'close') {\n            setPreviewDialogOpened(true);\n            setCanvas(action);\n        }\n        props.onClose('close');\n    };\n\n    const previewDialogClose = (action: string) => {\n        if (action === 'close') {\n            setPreviewDialogOpened(false);\n            setCanvas('');\n        }\n    };\n\n    return (\n        <>\n            <Dialog onClose={handleClose('close')} open={props.open}>\n                <DialogTitle>{t('file.export.title')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        {(canvasToShown === 'all' ? canvasAvailable : [canvasToShown]).map(c => (\n                            <ListItem button key={c} onClick={handleClose(c)}>\n                                <ListItemText primary={t('file.export.' + c)} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </DialogContent>\n            </Dialog>\n\n            <PreviewDialog open={previewDialogOpened} onClose={previewDialogClose} canvas={canvas} />\n        </>\n    );\n}\n","import React, { useState, useContext } from 'react';\nimport { useTranslation, withTranslation } from 'react-i18next';\n\nimport {\n    Grid,\n    Card,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    Divider,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    LinearProgress,\n} from '@material-ui/core';\n\nimport { getTransText2 } from '../../utils';\n\nimport UploadListItem from './upload-item';\nimport ExportDialog from './export-diag';\nimport { CanvasContext } from '../../context';\nimport { Link } from 'react-router-dom';\n\nconst TemplateDialog = React.lazy(() => import(/* webpackChunkName: \"panelSaveTemplateDialog\" */ './template-diag'));\n\nexport default function PanelSave() {\n    let TranslatedSaveLists = withTranslation()(SaveLists);\n\n    return (\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={8} md={6} lg={4}>\n                <TranslatedSaveLists />\n            </Grid>\n        </Grid>\n    );\n}\n\nconst allLangs = {\n    en: 'English',\n    'zh-Hans': '中文（简体）',\n    'zh-HK': '中文（香港）',\n};\n\nconst SaveLists = () => {\n    const { t, i18n } = useTranslation();\n\n    const { rmgStyle } = useContext(CanvasContext);\n\n    const [isTempDialogOpen, setIsTempDialogOpen] = useState(false);\n    const [isExportDialogOpen, setIsExportDialogOpen] = useState(false);\n    const [isStyleDialogOpen, setIsStyleDialogOpen] = useState(false);\n    const [isLangDialogOpen, setIsLangDialogOpen] = useState(false);\n\n    const saveClick = () => {\n        let link = document.createElement('a');\n        link.href = 'data:application/json;base64,' + btoa(unescape(encodeURIComponent(localStorage.rmgParam)));\n        link.download = 'rmg.param.' + new Date().toISOString() + '.json';\n        link.click();\n    };\n\n    const exportDialogClose = (action: string) => {\n        setIsExportDialogOpen(false);\n    };\n\n    const styleDialogClose = (action: 'close' | ProvidedStyles) => {\n        if (action === 'close' || action === rmgStyle) {\n        } else {\n            // setStyle(action);\n            // setIsStyleDialogOpen(false);\n\n            window.gtag('event', 'set', {\n                event_category: 'style',\n                event_label: action,\n            });\n            // window.location.href = process.env.PUBLIC_URL + '/' + action;\n        }\n        setIsStyleDialogOpen(false);\n\n        // TODO: how about integrity check?\n        // e.g. when user switch from guangzhou mtr to shanghai metro\n        // the info_panel_type will be invaild\n        // do we need to set info_panel_type to default or prompt up a dialog \n    };\n\n    return (\n        <div>\n            <Card>\n                <List component=\"nav\">\n                    <ListItem button onClick={() => setIsTempDialogOpen(true)}>\n                        <ListItemIcon>\n                            <Icon>note_add</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={t('file.new.button')} />\n                    </ListItem>\n                    <UploadListItem />\n                    <ListItem button onClick={saveClick}>\n                        <ListItemIcon>\n                            <Icon>save</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={t('file.save')} />\n                    </ListItem>\n                    <ListItem button onClick={() => setIsExportDialogOpen(true)}>\n                        <ListItemIcon>\n                            <Icon>cloud_download</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={t('file.export.button')} />\n                    </ListItem>\n                </List>\n                <Divider />\n                <List component=\"nav\">\n                    <ListItem button onClick={() => setIsStyleDialogOpen(true)}>\n                        <ListItemIcon>\n                            <Icon>style</Icon>\n                        </ListItemIcon>\n                        <ListItemText primary={t('file.style.button')} secondary={t('file.style.' + rmgStyle)} />\n                    </ListItem>\n                    <ListItem button onClick={() => setIsLangDialogOpen(true)}>\n                        <ListItemIcon>\n                            <Icon>translate</Icon>\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={t('file.lang.button')}\n                            secondary={getTransText2(allLangs, i18n.languages)}\n                        />\n                    </ListItem>\n                </List>\n            </Card>\n\n            <React.Suspense fallback={<LinearProgress />}>\n                <TemplateDialog open={isTempDialogOpen} onClose={() => setIsTempDialogOpen(false)} />\n            </React.Suspense>\n\n            <ExportDialog open={isExportDialogOpen} onClose={exportDialogClose} />\n\n            <StyleDialog open={isStyleDialogOpen} onClose={styleDialogClose} />\n            <LangDialog open={isLangDialogOpen} onClose={() => setIsLangDialogOpen(false)} />\n        </div>\n    );\n};\n\ninterface StyleDialogProps {\n    onClose: (style: 'close' | ProvidedStyles) => void;\n    open: boolean;\n}\n\nfunction StyleDialog(props: StyleDialogProps) {\n    const { t } = useTranslation();\n\n    return (\n        <Dialog onClose={() => props.onClose('close')} open={props.open}>\n            <DialogTitle>{t('file.style.title')}</DialogTitle>\n            <DialogContent dividers>\n                <List>\n                    {(['gzmtr', 'mtr', 'shmetro'] as ProvidedStyles[]).map(key => (\n                        <Link to={'/' + key} key={key} style={{ textDecoration: 'none', color: 'unset' }}>\n                            <ListItem button onClick={() => props.onClose(key)}>\n                                <ListItemText primary={t('file.style.' + key)} />\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </DialogContent>\n        </Dialog>\n    );\n}\n\ninterface LangDialogProps {\n    onClose: () => void;\n    open: boolean;\n}\n\nfunction LangDialog(props: LangDialogProps) {\n    const { t, i18n } = useTranslation();\n\n    const handleClick = (lang: string) => {\n        if (lang === i18n.language) {\n            props.onClose();\n        } else {\n            i18n.changeLanguage(lang).then(t => (document.title = t('title')));\n            // history.pushState({url:window.location.href}, null, '?' + window.urlParams.toString());\n            window.gtag('event', 'set', {\n                event_category: 'language',\n                event_label: lang,\n            });\n            document.documentElement.setAttribute('lang', lang);\n            props.onClose();\n        }\n    };\n\n    return (\n        <Dialog onClose={props.onClose} open={props.open}>\n            <DialogTitle>{t('file.lang.title')}</DialogTitle>\n            <DialogContent dividers>\n                <List>\n                    {(Object.keys(allLangs) as (keyof typeof allLangs)[]).map(key => (\n                        <ListItem button onClick={() => handleClick(key)} key={key}>\n                            <ListItemText primary={allLangs[key]} />\n                        </ListItem>\n                    ))}\n                </List>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import Panel from './panel';\n\nexport default Panel;"],"sourceRoot":""}