{"version":3,"sources":["svgs/destination/destination-mtr.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","svgs/strip/strip-mtr.tsx"],"names":["memo","DefsMTR","stripPc","InfoMTR","id","d","fill","destNames","routes","useAppSelector","store","helper","svgWidths","param","svgWidth","direction","customisedMTRDestination","customiseMTRDest","platformNumber","platform_num","lineName","line_name","currentStationIndex","current_stn_idx","stationList","stn_list","terminal","validDests","Set","filter","route","includes","map","stnId","slice","ShortDirection","left","name","join","replace","destNameEl","React","useRef","useState","width","bBox","setBBox","useEffect","current","getBBox","toString","isLegacy","flagLength","arrowX","CanvasType","Destination","platformNumX","destNameX","style","transform","xlinkHref","PlatformNum","num","ref","textAnchor","className","fontSize","dy","props","others","useMemo","cx","cy","r","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","height"],"mappings":"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","file":"static/js/destinationMTR.070e849f.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport StripMTR from '../strip/strip-mtr';\nimport { CanvasType, Name, ShortDirection } from '../../constants/constants';\nimport { useAppSelector } from '../../redux';\n\nexport default memo(function DestinationMTR() {\n    return (\n        <>\n            <DefsMTR />\n            <StripMTR stripPc={90} />\n            <InfoMTR />\n        </>\n    );\n});\n\nconst DefsMTR = memo(() => (\n    <defs>\n        <path id=\"arrow\" d=\"M60,60L0,0L60-60H100L55-15H160V15H55L100,60z\" fill=\"var(--rmg-black,#000)\" />\n    </defs>\n));\n\nconst InfoMTR = () => {\n    const routes = useAppSelector(store => store.helper.routes);\n\n    const svgWidths = useAppSelector(store => store.param.svgWidth);\n    const direction = useAppSelector(store => store.param.direction);\n    const customisedMTRDestination = useAppSelector(store => store.param.customiseMTRDest);\n    const platformNumber = useAppSelector(store => store.param.platform_num);\n    const lineName = useAppSelector(store => store.param.line_name);\n\n    const currentStationIndex = useAppSelector(store => store.param.current_stn_idx);\n    const stationList = useAppSelector(store => store.param.stn_list);\n\n    let destNames: Name;\n    if (customisedMTRDestination.terminal !== false) {\n        destNames = customisedMTRDestination.terminal;\n    } else {\n        const validDests = [\n            ...new Set(\n                routes\n                    .filter(route => route.includes(currentStationIndex))\n                    .map(\n                        route =>\n                            route\n                                .filter(stnId => !['linestart', 'lineend'].includes(stnId))\n                                .slice(direction === ShortDirection.left ? 0 : -1)[0]\n                    )\n                    .filter(id => id !== currentStationIndex)\n            ),\n        ];\n        destNames = [\n            validDests.map(stnId => stationList[stnId].name[0]).join('/'),\n            validDests\n                .map(stnId => stationList[stnId].name[1])\n                .join('/')\n                .replace('\\\\', ' '),\n        ];\n    }\n\n    const destNameEl = React.useRef<SVGGElement | null>(null);\n    const [bBox, setBBox] = React.useState({ width: 0 } as DOMRect);\n    React.useEffect(\n        () => setBBox(destNameEl.current!.getBBox()),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [destNames.toString(), customisedMTRDestination.isLegacy]\n    );\n\n    const flagLength = 160 + 150 + bBox.width + 45 + 50;\n    const arrowX = (svgWidths[CanvasType.Destination] - (direction === ShortDirection.left ? 1 : -1) * flagLength) / 2;\n    const platformNumX = arrowX + (direction === ShortDirection.left ? 1 : -1) * (160 + 50 + 75);\n    const destNameX = platformNumX + (direction === ShortDirection.left ? 1 : -1) * (75 + 45);\n\n    return (\n        <g id=\"dest_name\" style={{ transform: 'translateY(calc(var(--rmg-svg-height) / 2 - 20px))' }}>\n            <use\n                xlinkHref=\"#arrow\"\n                transform={`translate(${arrowX},0)rotate(${direction === ShortDirection.left ? 0 : 180})`}\n            />\n            <PlatformNum num={platformNumber} transform={`translate(${platformNumX},0)`} />\n            <g\n                ref={destNameEl}\n                textAnchor={direction === ShortDirection.left ? 'start' : 'end'}\n                transform={`translate(${destNameX},-25)`}\n                fill=\"var(--rmg-black)\"\n            >\n                <text className=\"rmg-name__zh\" fontSize={90}>\n                    {(customisedMTRDestination.isLegacy ? lineName[0] : '') + 'å¾€' + destNames[0]}\n                </text>\n                <text className=\"rmg-name__en\" fontSize={45} dy={80}>\n                    {(customisedMTRDestination.isLegacy ? lineName[1] + ' ' : '') + 'to ' + destNames[1]}\n                </text>\n            </g>\n        </g>\n    );\n};\n\nconst PlatformNum = (props: { num: string | false } & React.SVGProps<SVGGElement>) => {\n    const { num, ...others } = props;\n\n    return (\n        <g id=\"platform\" {...others}>\n            {React.useMemo(\n                () => (\n                    <>\n                        <circle cx={0} cy={0} r={75} fill=\"var(--rmg-theme-colour)\" />\n                        <text className=\"rmg-name__zh\" dy={0} textAnchor=\"middle\" fontSize={135} fill=\"#fff\">\n                            {num}\n                        </text>\n                    </>\n                ),\n                [num]\n            )}\n        </g>\n    );\n};\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { memo } from 'react';\n\nexport default memo(function StripMTR(props: { stripPc: number }) {\n    return (\n        <rect\n            fill=\"var(--rmg-theme-colour)\"\n            height={20}\n            style={{\n                width: 'var(--rmg-svg-width)',\n                ['--strip-percentage' as any]: props.stripPc,\n                transform: `translateY(calc(var(--strip-percentage, 95) * var(--rmg-svg-height) / 100 - 10px))`,\n            }}\n        />\n    );\n});\n"],"sourceRoot":""}