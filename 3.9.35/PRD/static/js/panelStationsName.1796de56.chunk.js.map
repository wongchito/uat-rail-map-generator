{"version":3,"sources":["panels/stations/edit-diag/name-tab.tsx"],"names":["NameTab","props","rmgStyle","useAppSelector","store","app","component","RmgStyle","GZMTR","NumInput","NameInput","SecondaryNameInput","useStyles","makeStyles","createStyles","lineNumRoot","display","alignItems","justifyContent","border","borderRightWidth","borderRadius","padding","minWidth","height","fontSize","numInput","borderLeftWidth","width","marginTop","textAlign","nameInputZH","lineHeight","nameInputEN","fontFamily","join","collapseWrapper","collapseWrapperInner","secondaryNameRoot","secondaryNameParenthesis","secondaryNameInputRoot","flexDirection","secondaryNameInputZH","stnId","classes","dispatch","useAppDispatch","lineNum","param","line_num","stationInfo","stn_list","style","className","fullWidth","value","num","onChange","target","updateStationNum","t","useTranslation","name","placeholder","MTR","updateStationName","autoFocus","helperText","secondaryName","primary","color","edge","checked","_","updateStationSecondaryName","in","unmountOnExit","wrapper","wrapperInner"],"mappings":"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","file":"static/js/panelStationsName.1796de56.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Collapse,\n    createStyles,\n    Icon,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Switch,\n    TextField,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useAppDispatch, useAppSelector } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\nimport { updateStationName, updateStationNum, updateStationSecondaryName } from '../../../redux/param/action';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NameTab = (props: Props) => {\n    const rmgStyle = useAppSelector(store => store.app.rmgStyle);\n\n    return (\n        <List component=\"div\">\n            {rmgStyle === RmgStyle.GZMTR && <NumInput {...props} />}\n            <NameInput {...props} />\n            {rmgStyle === RmgStyle.GZMTR && <SecondaryNameInput {...props} />}\n        </List>\n    );\n};\n\nexport default NameTab;\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        lineNumRoot: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            border: 'solid 2px',\n            borderRightWidth: 1,\n            borderRadius: '32px 0 0 32px',\n            padding: '2px 5px',\n            minWidth: 32,\n            height: 32,\n            fontSize: '1.5rem',\n        },\n        numInput: {\n            display: 'inline-block',\n            border: 'solid 2px',\n            borderLeftWidth: 1,\n            borderRadius: '0 32px 32px 0',\n            padding: '2px 5px',\n            width: 32,\n            height: 32,\n            '& .MuiInputBase-root': {\n                marginTop: 1.7,\n            },\n            '& .MuiInputBase-input': {\n                fontSize: '1.5rem',\n                padding: 'unset',\n                textAlign: 'center',\n            },\n        },\n        nameInputZH: {\n            '& .MuiInputBase-input': {\n                textAlign: 'center',\n                fontSize: '3rem',\n                lineHeight: '3rem',\n            },\n        },\n        nameInputEN: {\n            '& .MuiInputBase-input': {\n                textAlign: 'center',\n                fontSize: '1.2rem',\n                lineHeight: '1.2rem',\n            },\n        },\n        'nameInputZH-mtr': {\n            '& .MuiInputBase-input': {\n                fontFamily: [\n                    'Myriad Pro',\n                    'Vegur',\n                    'Noto Serif KR',\n                    'Noto Serif JP',\n                    'Noto Serif TC',\n                    'Noto Serif SC',\n                    'HiraMinProN-W6',\n                    'serif',\n                ].join(),\n            },\n        },\n        'nameInputEN-mtr': {\n            '& .MuiInputBase-input': {\n                fontFamily: ['Myriad Pro', 'Vegur', 'Arial', 'sans-serif'].join(),\n            },\n        },\n        'nameInputZH-gzmtr': {\n            '& .MuiInputBase-input': {\n                fontFamily: ['Arial', 'STKaiti', 'KaiTi', 'sans-serif'].join(),\n            },\n        },\n        collapseWrapper: {\n            justifyContent: 'center',\n        },\n        collapseWrapperInner: {\n            width: '65%',\n        },\n        secondaryNameRoot: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& .MuiInputBase-input': {\n                textAlign: 'center',\n            },\n        },\n        secondaryNameParenthesis: {\n            fontSize: '4rem',\n        },\n        secondaryNameInputRoot: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n        },\n        secondaryNameInputZH: {\n            '& .MuiInputBase-input': {\n                fontSize: '1.5rem',\n                lineHeight: '1.5rem',\n            },\n        },\n    })\n);\n\nconst NumInput = (props: Props) => {\n    const { stnId } = props;\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const lineNum = useAppSelector(store => store.param.line_num);\n    const stationInfo = useAppSelector(store => store.param.stn_list[stnId]);\n\n    return (\n        <ListItem style={{ justifyContent: 'center' }}>\n            <div className={classes.lineNumRoot}>\n                <span>{lineNum}</span>\n            </div>\n            <TextField\n                fullWidth\n                className={classes.numInput}\n                value={stationInfo?.num}\n                onChange={({ target: { value } }) => {\n                    dispatch(updateStationNum(stnId, value));\n                }}\n            />\n        </ListItem>\n    );\n};\n\nconst NameInput = (props: Props) => {\n    const { stnId } = props;\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const rmgStyle = useAppSelector(store => store.app.rmgStyle);\n    const { name } = useAppSelector(store => store.param.stn_list[stnId]);\n    return (\n        <ListItem style={{ flexDirection: 'column' }}>\n            <TextField\n                fullWidth\n                placeholder={t('editor.zh')}\n                className={`${classes.nameInputZH} ${\n                    rmgStyle === RmgStyle.GZMTR\n                        ? classes['nameInputZH-gzmtr']\n                        : rmgStyle === RmgStyle.MTR\n                        ? classes['nameInputZH-mtr']\n                        : ''\n                }`}\n                value={name[0]}\n                onChange={({ target: { value } }) => dispatch(updateStationName(stnId, [value, name[1]]))}\n                autoFocus\n            />\n            <TextField\n                fullWidth\n                placeholder={t('editor.en')}\n                className={`${classes.nameInputEN} ${rmgStyle === RmgStyle.MTR ? classes['nameInputEN-mtr'] : ''}`}\n                value={name[1]}\n                onChange={({ target: { value } }) => dispatch(updateStationName(stnId, [name[0], value]))}\n                helperText={t('editor.backslashToWrap')}\n            />\n        </ListItem>\n    );\n};\n\nconst SecondaryNameInput = (props: Props) => {\n    const { stnId } = props;\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useAppDispatch();\n\n    const { secondaryName } = useAppSelector(store => store.param.stn_list[stnId]);\n    return (\n        <>\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>text_fields</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('stations.edit.name.secondary')} />\n                <ListItemSecondaryAction>\n                    <Switch\n                        color=\"primary\"\n                        edge=\"end\"\n                        checked={secondaryName !== false}\n                        onChange={(_, checked) => {\n                            dispatch(updateStationSecondaryName(stnId, checked ? ['', ''] : false));\n                        }}\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Collapse\n                in={secondaryName !== false}\n                unmountOnExit\n                classes={{ wrapper: classes.collapseWrapper, wrapperInner: classes.collapseWrapperInner }}\n            >\n                <div className={classes.secondaryNameRoot}>\n                    <span className={classes.secondaryNameParenthesis}>{'('}</span>\n                    <div className={classes.secondaryNameInputRoot}>\n                        <TextField\n                            fullWidth\n                            placeholder={t('editor.zh')}\n                            className={classes.secondaryNameInputZH}\n                            value={secondaryName ? secondaryName[0] : ''}\n                            onChange={({ target: { value } }) => {\n                                dispatch(\n                                    updateStationSecondaryName(stnId, [value, secondaryName ? secondaryName[1] : ''])\n                                );\n                            }}\n                        />\n                        <TextField\n                            fullWidth\n                            placeholder={t('editor.en')}\n                            value={secondaryName ? secondaryName[1] : ''}\n                            onChange={({ target: { value } }) => {\n                                dispatch(\n                                    updateStationSecondaryName(stnId, [secondaryName ? secondaryName[0] : '', value])\n                                );\n                            }}\n                        />\n                    </div>\n                    <span className={classes.secondaryNameParenthesis}>{')'}</span>\n                </div>\n            </Collapse>\n        </>\n    );\n};\n"],"sourceRoot":""}