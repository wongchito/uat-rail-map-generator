{"version":3,"sources":["panels/panel-info.tsx"],"names":["useStyles","makeStyles","createStyles","panel","maxWidth","display","flexDirection","margin","textAlign","root","alignItems","width","flexWrap","logo","height","cardHeader","marginLeft","detailGrid","gridTemplateColumns","marginRight","marginTop","detailColumn","detailRow","coreContributorAvatar","colorAndLineContributorAvatar","action","justifyContent","typography","memo","classes","t","useTranslation","className","image","process","component","variant","version","size","color","href","map","name","replaceAll"],"mappings":"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","file":"static/js/panelInfo.f489a6d7.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Card,\n    CardMedia,\n    CardContent,\n    Typography,\n    makeStyles,\n    createStyles,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { version } from '../../package.json';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        panel: {\n            maxWidth: 500,\n            display: 'flex',\n            flexDirection: 'column',\n            '& .MuiTypography-root': {\n                margin: '8px 0',\n                textAlign: 'justify',\n            },\n        },\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '500px',\n            margin: '8px 0',\n            flexWrap: \"wrap\",\n            flexDirection: 'row',\n        },\n        logo: {\n            height: 100,\n            width: 100,\n            margin: 6,\n        },\n        cardHeader: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            marginLeft: 10,\n        },\n        detailGrid: {\n            display: 'grid',\n            gridTemplateColumns: '115px 115px 115px 115px',\n            margin: 6,\n            marginLeft: 20,\n            marginRight: 20,\n            marginTop: 20,\n        },\n        detailColumn: {\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: \"wrap\",\n        },\n        detailRow: {\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'row',\n            flexWrap: \"wrap\",\n            marginLeft: 20,\n        },\n        coreContributorAvatar: {\n            height: 100,\n            width: 100,\n            margin: 6,\n        },\n        colorAndLineContributorAvatar: {\n            height: 80,\n            width: 80,\n            margin: 6,\n        },\n        action: {\n            justifyContent: 'flex-end',\n        },\n        typography: {\n            margin: '8px 0',\n        },\n    })\n);\n\nexport default memo(function PanelInfo() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <div className={classes.panel}>\n            <Card className={classes.root}>\n                <div className={classes.detailRow}>\n                    <CardMedia className={classes.logo} image={process.env.PUBLIC_URL + '/logo512.png'} />\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            {t('info.title')} {version}\n                        </Typography>\n                        <CardActions className={classes.action}>\n                            <Button size=\"small\" color=\"primary\" href=\"https://github.com/wongchito/RailMapGenerator\">\n                                GitHub\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                color=\"primary\"\n                                href=\"https://github.com/wongchito/RailMapGenerator/issues\"\n                            >\n                                {t('info.feedback')}\n                            </Button>\n                        </CardActions>\n                    </CardContent>\n                </div>\n            </Card>\n\n            <Card className={classes.root}>\n                <div className={classes.cardHeader}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {t('info.core.title')}\n                    </Typography>\n                </div>\n                <div className={classes.detailRow}>\n                    <CardMedia className={classes.coreContributorAvatar} image=\"https://github.com/wongchito.png\" />\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            Chito Wong\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.wongchito.first')}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.wongchito.second')}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <div className={classes.detailRow}>\n                    <CardMedia className={classes.coreContributorAvatar} image=\"https://github.com/thekingofcity.png\" />\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            thekingofcity\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.thekingofcity.first')}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.thekingofcity.second')}\n                        </Typography>\n                    </CardContent>\n                </div>\n            </Card>\n\n            <Card className={classes.root}>\n                <div className={classes.cardHeader}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {t('info.colorAndLine.title')}\n                    </Typography>\n                </div>\n                <div className={classes.detailGrid}>\n                    {['linchen1965', 'Andy1782010', 'Thomastzc', 'AnDanJune\\nUnderline', 'Tianxiu11111']\n                    .map(name => (\n                        <div className={classes.detailColumn}>\n                            <CardMedia\n                                className={classes.colorAndLineContributorAvatar}\n                                image={`https://github.com/${name.replaceAll('\\n', '')}.png`}\n                            />\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                {name}\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n                <div className={classes.cardHeader}>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        {t('info.colorAndLine.note.first')}\n                        <Typography component=\"a\" variant=\"subtitle2\" color=\"textSecondary\"\n                            href=\"https://github.com/wongchito/RailMapGenerator/wiki/How-to-add-color-palette-and-line-templates\">\n                            {t('info.colorAndLine.note.second')}\n                        </Typography>\n                        {t('info.colorAndLine.note.third')}\n                    </Typography>\n                </div>\n            </Card>\n\n            <Typography variant=\"body2\" color=\"textPrimary\">\n                {t('info.notice')}\n            </Typography>\n\n            <Typography variant=\"body2\" color=\"textPrimary\">\n                All flag emojis shown on Windows platforms are designed by{' '}\n                <Typography component=\"a\" variant=\"body2\" color=\"primary\" href=\"https://openmoji.org/\">\n                    OpenMoji\n                </Typography>{' '}\n                – the open-source emoji and icon project. License:{' '}\n                <Typography\n                    component=\"a\"\n                    variant=\"body2\"\n                    color=\"primary\"\n                    href=\"https://creativecommons.org/licenses/by-sa/4.0/#\"\n                >\n                    CC BY-SA 4.0\n                </Typography>\n            </Typography>\n        </div>\n    );\n});\n"],"sourceRoot":""}