{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","panels/stations/edit-diag/more-tab.tsx"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$color","color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","concat","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","action","hoverOpacity","colorSecondary","FormGroup","_props$row","row","display","flexDirection","flexWrap","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","key","Typography","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","FacilityLi","memo","rmgStyle","useAppSelector","store","param","style","rmgStyleServices","RmgStyle","GZMTR","Services","local","express","SHMetro","direct","rmgStyleFacility","MTR","Facilities","airport","disney","hsr","none","railway","List","stnId","providedServices","providedFacilities","t","useTranslation","dispatch","useAppDispatch","facility","stn_list","ListItem","ListItemIcon","Icon","ListItemText","ListItemSecondaryAction","Select","native","updateStationFacility","map","f","ServiceLi","services","s","includes","service","addStationService","removeStationService","secondaryTypographyProps"],"mappings":"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","file":"static/js/panelStationsMore.45917fb2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Checkbox,\n    FormControlLabel,\n    FormGroup,\n    Icon,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Select,\n} from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../../redux';\nimport { Facilities, RmgStyle, Services } from '../../../constants/constants';\nimport { addStationService, removeStationService, updateStationFacility } from '../../../redux/param/action';\n\nexport default memo(function MoreTab(props: { stnId: string }) {\n    const rmgStyle = useAppSelector(store => store.param.style);\n    const rmgStyleServices: { [s in RmgStyle]?: Services[] } = {\n        [RmgStyle.GZMTR]: [Services.local, Services.express],\n        [RmgStyle.SHMetro]: [Services.local, Services.express, Services.direct],\n    };\n    const rmgStyleFacility: { [s in RmgStyle]?: Facilities[] } = {\n        [RmgStyle.MTR]: [Facilities.airport, Facilities.disney, Facilities.hsr, Facilities.none],\n        [RmgStyle.SHMetro]: [Facilities.railway, Facilities.airport, Facilities.disney, Facilities.none],\n    }\n\n    return (\n        <div>\n            <List>\n                {rmgStyle in rmgStyleServices && (\n                    <ServiceLi stnId={props.stnId} providedServices={rmgStyleServices[rmgStyle] as Services[]} />\n                )}\n                {rmgStyle in rmgStyleFacility && (\n                    <FacilityLi stnId={props.stnId} providedFacilities={rmgStyleFacility[rmgStyle] as Facilities[]} />\n                )}\n            </List>\n        </div>\n    );\n});\n\nconst FacilityLi = (props: { stnId: string, providedFacilities: Facilities[] }) => {\n    const { stnId, providedFacilities } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const { facility } = useAppSelector(store => store.param.stn_list[stnId]);\n    return (\n        <ListItem>\n            <ListItemIcon>\n                <Icon>place</Icon>\n            </ListItemIcon>\n            <ListItemText primary={t('stations.edit.more.facility.button')} />\n            <ListItemSecondaryAction>\n                <Select\n                    native\n                    value={facility}\n                    onChange={({ target: { value } }) => {\n                        dispatch(updateStationFacility(stnId, value as Facilities));\n                    }}\n                >\n                    {providedFacilities.map(f => (\n                        <option key={f} value={f}>\n                            {t('stations.edit.more.facility.' + (f === '' ? 'none' : f))}\n                        </option>\n                    ))}\n                </Select>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n\nconst ServiceLi = (props: { stnId: string; providedServices: Services[] }) => {\n    const { stnId, providedServices } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const { services } = useAppSelector(store => store.param.stn_list[stnId]);\n\n    const handleChange =\n        (service: Services) =>\n        ({ target: { checked } }: React.ChangeEvent<HTMLInputElement>) => {\n            if (service === Services.local) return; // cannot remove local service\n            if (checked) {\n                dispatch(addStationService(props.stnId, service));\n            } else {\n                dispatch(removeStationService(props.stnId, service));\n            }\n        };\n    return (\n        <ListItem>\n            <ListItemIcon>\n                <Icon>train</Icon>\n            </ListItemIcon>\n            <ListItemText\n                primary={t('stations.edit.more.services.button')}\n                secondary={\n                    <FormGroup row>\n                        {providedServices.map(s => (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={services.includes(s)}\n                                        value={s}\n                                        onChange={handleChange(s)}\n                                        disabled={s === Services.local}\n                                    />\n                                }\n                                label={t('stations.edit.more.services.' + s)}\n                                key={s}\n                            />\n                        ))}\n                    </FormGroup>\n                }\n                secondaryTypographyProps={{ ['component' as any]: 'div' }}\n            />\n        </ListItem>\n    );\n};\n"],"sourceRoot":""}