{"version":3,"sources":["../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","panels/panel-info.tsx"],"names":["Button","React","props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","other","_objectWithoutProperties","clsx","concat","capitalize","ButtonBase","_extends","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","short","textDecoration","backgroundColor","alpha","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","Card","_props$raised","raised","Paper","elevation","overflow","MEDIA_COMPONENTS","CardMedia","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","paddingBottom","CardActions","_props$disableSpacing","disableSpacing","spacing","useStyles","makeStyles","createStyles","panel","maxWidth","flexDirection","margin","textAlign","flexWrap","logo","height","cardHeader","detailGrid","gridTemplateColumns","marginTop","detailColumn","detailRow","coreContributorAvatar","colorAndLineContributorAvatar","memo","t","useTranslation","process","Typography","version","href","map","replaceAll"],"mappings":"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","file":"static/js/panelInfo.322e1cab.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React, { memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Card,\n    CardMedia,\n    CardContent,\n    Typography,\n    makeStyles,\n    createStyles,\n    CardActions,\n    Button,\n} from '@material-ui/core';\nimport { version } from '../../package.json';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        panel: {\n            maxWidth: 500,\n            display: 'flex',\n            flexDirection: 'column',\n            '& .MuiTypography-root': {\n                margin: '8px 0',\n                textAlign: 'justify',\n            },\n        },\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '500px',\n            margin: '8px 0',\n            flexWrap: \"wrap\",\n            flexDirection: 'row',\n        },\n        logo: {\n            height: 100,\n            width: 100,\n            margin: 6,\n        },\n        cardHeader: {\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            marginLeft: 10,\n        },\n        detailGrid: {\n            display: 'grid',\n            gridTemplateColumns: '115px 115px 115px 115px',\n            margin: 6,\n            marginLeft: 20,\n            marginRight: 20,\n            marginTop: 20,\n        },\n        detailColumn: {\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: \"wrap\",\n        },\n        detailRow: {\n            display: 'flex',\n            alignItems: 'center',\n            flexDirection: 'row',\n            flexWrap: \"wrap\",\n            marginLeft: 20,\n        },\n        coreContributorAvatar: {\n            height: 100,\n            width: 100,\n            margin: 6,\n        },\n        colorAndLineContributorAvatar: {\n            height: 80,\n            width: 80,\n            margin: 6,\n        },\n        action: {\n            justifyContent: 'flex-end',\n        },\n        typography: {\n            margin: '8px 0',\n        },\n    })\n);\n\nexport default memo(function PanelInfo() {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    return (\n        <div className={classes.panel}>\n            <Card className={classes.root}>\n                <div className={classes.detailRow}>\n                    <CardMedia className={classes.logo} image={process.env.PUBLIC_URL + '/logo512.png'} />\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            {t('info.title')} {version}\n                        </Typography>\n                        <CardActions className={classes.action}>\n                            <Button size=\"small\" color=\"primary\" href=\"https://github.com/wongchito/RailMapGenerator\">\n                                GitHub\n                            </Button>\n                            <Button\n                                size=\"small\"\n                                color=\"primary\"\n                                href=\"https://github.com/wongchito/RailMapGenerator/issues\"\n                            >\n                                {t('info.feedback')}\n                            </Button>\n                        </CardActions>\n                    </CardContent>\n                </div>\n            </Card>\n\n            <Card className={classes.root}>\n                <div className={classes.cardHeader}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {t('info.core.title')}\n                    </Typography>\n                </div>\n                <div className={classes.detailRow}>\n                    <CardMedia className={classes.coreContributorAvatar} image=\"https://github.com/wongchito.png\" />\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            Chito Wong\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.wongchito.first')}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.wongchito.second')}\n                        </Typography>\n                    </CardContent>\n                </div>\n                <div className={classes.detailRow}>\n                    <CardMedia className={classes.coreContributorAvatar} image=\"https://github.com/thekingofcity.png\" />\n                    <CardContent>\n                        <Typography component=\"h6\" variant=\"h6\">\n                            thekingofcity\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.thekingofcity.first')}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                            {t('info.core.thekingofcity.second')}\n                        </Typography>\n                    </CardContent>\n                </div>\n            </Card>\n\n            <Card className={classes.root}>\n                <div className={classes.cardHeader}>\n                    <Typography component=\"h5\" variant=\"h5\">\n                        {t('info.colorAndLine.title')}\n                    </Typography>\n                </div>\n                <div className={classes.detailGrid}>\n                    {['xiany114514', 'linchen1965', 'Andy1782010', 'Thomastzc', 'AnDanJune\\nUnderline', 'Tianxiu11111']\n                    .map(name => (\n                        <div className={classes.detailColumn}>\n                            <CardMedia\n                                className={classes.colorAndLineContributorAvatar}\n                                image={`https://github.com/${name.replaceAll('\\n', '')}.png`}\n                            />\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                {name}\n                            </Typography>\n                        </div>\n                    ))}\n                </div>\n                <div className={classes.cardHeader}>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        {t('info.colorAndLine.note.first')}\n                        <Typography component=\"a\" variant=\"subtitle2\" color=\"textSecondary\"\n                            href=\"https://github.com/wongchito/RailMapGenerator/wiki/How-to-add-color-palette-and-line-templates\">\n                            {t('info.colorAndLine.note.second')}\n                        </Typography>\n                        {t('info.colorAndLine.note.third')}\n                    </Typography>\n                </div>\n            </Card>\n\n            <Typography variant=\"body2\" color=\"textPrimary\">\n                {t('info.notice')}\n            </Typography>\n\n            <Typography variant=\"body2\" color=\"textPrimary\">\n                All flag emojis shown on Windows platforms are designed by{' '}\n                <Typography component=\"a\" variant=\"body2\" color=\"primary\" href=\"https://openmoji.org/\">\n                    OpenMoji\n                </Typography>{' '}\n                – the open-source emoji and icon project. License:{' '}\n                <Typography\n                    component=\"a\"\n                    variant=\"body2\"\n                    color=\"primary\"\n                    href=\"https://creativecommons.org/licenses/by-sa/4.0/#\"\n                >\n                    CC BY-SA 4.0\n                </Typography>\n            </Typography>\n        </div>\n    );\n});\n"],"sourceRoot":""}