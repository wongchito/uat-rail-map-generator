{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","Switch","_props$color","color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","concat","capitalize","switchBase","track","theme","display","overflow","boxSizing","flexShrink","verticalAlign","marginLeft","marginRight","palette","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","createSvgIcon","d","isDeleteKeyboardEvent","keyboardEvent","key","Chip","avatarProp","avatar","clickableProp","clickable","ComponentProp","deleteIconProp","deleteIcon","_props$disabled","iconProp","label","onClick","onDelete","onKeyDown","onKeyUp","_props$variant","variant","chipRef","handleRef","useForkRef","handleDeleteIconClick","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","outlined","outlinedPrimary","outlinedSecondary","deletable","currentTarget","preventDefault","current","blur","labelSmall","deleteIconColor","text","fontFamily","typography","fontSize","pxToRem","alignItems","justifyContent","getContrastText","whiteSpace","outline","textDecoration","border","pointerEvents","contrastText","dark","userSelect","WebkitTapHighlightColor","emphasize","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","textOverflow","paddingLeft","paddingRight","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary"],"mappings":"iIAAA,gFAkCIA,EAAaC,cAAiB,SAAoBC,EAAOC,GAC3D,IAAIC,EAAYF,EAAME,UAClBC,EAAcH,EAAMI,QACpBC,EAAcL,EAAMK,YACpBC,EAAUN,EAAMM,QAChBC,EAAYP,EAAMO,UAClBC,EAAiBR,EAAMQ,eACvBC,EAAeT,EAAMU,SACrBC,EAAOX,EAAMW,KACbC,EAAKZ,EAAMY,GACXC,EAAab,EAAMa,WACnBC,EAAWd,EAAMc,SACjBC,EAAOf,EAAMe,KACbC,EAAShB,EAAMgB,OACfC,EAAWjB,EAAMiB,SACjBC,EAAUlB,EAAMkB,QAChBC,EAAWnB,EAAMmB,SACjBC,EAAWpB,EAAMoB,SACjBC,EAAWrB,EAAMqB,SACjBC,EAAOtB,EAAMsB,KACbC,EAAQvB,EAAMuB,MACdC,EAAQC,YAAyBzB,EAAO,CAAC,YAAa,UAAW,cAAe,UAAW,YAAa,iBAAkB,WAAY,OAAQ,KAAM,aAAc,WAAY,OAAQ,SAAU,WAAY,UAAW,WAAY,WAAY,WAAY,OAAQ,UAEnQ0B,EAAiBC,YAAc,CACjCC,WAAYzB,EACZ0B,QAASC,QAAQtB,GACjBO,KAAM,eAEJgB,EAAkBC,YAAeN,EAAgB,GACjDtB,EAAU2B,EAAgB,GAC1BE,EAAkBF,EAAgB,GAElCG,EAAiBC,cA+BjBzB,EAAWD,EAEXyB,GACsB,qBAAbxB,IACTA,EAAWwB,EAAexB,UAI9B,IAAI0B,EAAuB,aAATd,GAAgC,UAATA,EACzC,OAAoBvB,gBAAoBsC,IAAYC,YAAS,CAC3DC,UAAW,OACXhC,UAAWiC,YAAKlC,EAAQmC,KAAMlC,EAAWH,GAAWE,EAAQF,QAASM,GAAYJ,EAAQI,UACzFA,SAAUA,EACVW,SAAU,KACVqB,UAAMC,EACNzB,QA5CgB,SAAqB0B,GACjC1B,GACFA,EAAQ0B,GAGNV,GAAkBA,EAAehB,SACnCgB,EAAehB,QAAQ0B,IAuCzB5B,OAnCe,SAAoB4B,GAC/B5B,GACFA,EAAO4B,GAGLV,GAAkBA,EAAelB,QACnCkB,EAAelB,OAAO4B,IA8BxB3C,IAAKA,GACJuB,GAAqBzB,gBAAoB,QAASuC,YAAS,CAC5DpC,UAAWA,EACXE,QAASD,EACTK,eAAgBA,EAChBD,UAAWD,EAAQuC,MACnBnC,SAAUA,EACVE,GAAIwB,GAAexB,EACnBG,KAAMA,EACNE,SAnCsB,SAA2B2B,GACjD,IAAIE,EAAaF,EAAMG,OAAO3C,QAC9B6B,EAAgBa,GAEZ7B,GACFA,EAAS2B,EAAOE,IA+BlB3B,SAAUA,EACVlB,IAAKa,EACLM,SAAUA,EACVC,SAAUA,EACVC,KAAMA,EACNC,MAAOA,GACNV,IAAcT,EAAUC,EAAcM,MA8G5BqC,gBArOK,CAClBP,KAAM,CACJQ,QAAS,GAEX7C,QAAS,GACTM,SAAU,GACVmC,MAAO,CACLK,OAAQ,UACRC,SAAU,WACVC,QAAS,EACTC,MAAO,OACPC,OAAQ,OACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRR,QAAS,EACTS,OAAQ,IAqNsB,CAChC3C,KAAM,qBADOiC,CAEZlD,I,iCClPH,sEAgKI6D,EAAS5D,cAAiB,SAAgBC,EAAOC,GACnD,IAAIK,EAAUN,EAAMM,QAChBC,EAAYP,EAAMO,UAClBqD,EAAe5D,EAAM6D,MACrBA,OAAyB,IAAjBD,EAA0B,YAAcA,EAChDE,EAAc9D,EAAM+D,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAchE,EAAMiE,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CxC,EAAQC,YAAyBzB,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElFW,EAAoBZ,gBAAoB,OAAQ,CAClDQ,UAAWD,EAAQ4D,QAErB,OAAoBnE,gBAAoB,OAAQ,CAC9CQ,UAAWiC,YAAKlC,EAAQmC,KAAMlC,EAAW,CACvC,MAASD,EAAQ6D,UACjB,IAAO7D,EAAQ8D,SACfL,GAAgB,UAATE,GAAoB3D,EAAQ,OAAO+D,OAAOC,YAAWL,OAChDlE,gBAAoBD,IAAYwC,YAAS,CACvDhB,KAAM,WACNX,KAAMA,EACNN,YAAaM,EACbL,QAAS,CACPmC,KAAMD,YAAKlC,EAAQiE,WAAYjE,EAAQ,QAAQ+D,OAAOC,YAAWT,MACjEhB,MAAOvC,EAAQuC,MACfzC,QAASE,EAAQF,QACjBM,SAAUJ,EAAQI,UAEpBT,IAAKA,GACJuB,IAAsBzB,gBAAoB,OAAQ,CACnDQ,UAAWD,EAAQkE,YAuGRxB,iBA3RK,SAAgByB,GAClC,MAAO,CAELhC,KAAM,CACJiC,QAAS,cACTrB,MAAO,GACPC,OAAQ,GACRqB,SAAU,SACV1B,QAAS,GACT2B,UAAW,aACXzB,SAAU,WACV0B,WAAY,EACZnB,OAAQ,EAERoB,cAAe,UAKjBX,UAAW,CACTY,YAAa,GAIfX,QAAS,CACPY,aAAc,GAIhBT,WAAY,CACVpB,SAAU,WACVI,IAAK,EACLC,KAAM,EACNE,OAAQ,EAERG,MAA8B,UAAvBY,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,IAAMT,EAAMQ,QAAQC,KAAK,KACpFC,WAAYV,EAAMW,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUb,EAAMW,YAAYE,SAASC,WAEvC,YAAa,CACXC,UAAW,oBAEb,aAAc,CACZ3B,MAA8B,UAAvBY,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,KAAOT,EAAMQ,QAAQC,KAAK,MAEvF,qBAAsB,CACpB9B,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBqB,EAAMQ,QAAQ3D,KAAmB,IAAO,KAKrDmE,aAAc,CACZ,YAAa,CACX5B,MAAOY,EAAMQ,QAAQS,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAKpB,EAAMQ,QAAQS,QAAQC,KAAMlB,EAAMQ,QAAQa,OAAOC,cACvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ/B,MAA8B,UAAvBY,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,KAAOT,EAAMQ,QAAQC,KAAK,MAEvF,qBAAsB,CACpBU,gBAAiBnB,EAAMQ,QAAQS,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvBnB,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQe,OAAOC,MAAQxB,EAAMQ,QAAQe,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACXtC,MAAOY,EAAMQ,QAAQmB,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAKpB,EAAMQ,QAAQmB,UAAUT,KAAMlB,EAAMQ,QAAQa,OAAOC,cACzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ/B,MAA8B,UAAvBY,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,KAAOT,EAAMQ,QAAQC,KAAK,MAEvF,qBAAsB,CACpBU,gBAAiBnB,EAAMQ,QAAQmB,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvBnB,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQe,OAAOC,MAAQxB,EAAMQ,QAAQe,OAAOE,QAKxGG,UAAW,CACThD,MAAO,GACPC,OAAQ,GACRL,QAAS,EACT,WAAY,CACVI,MAAO,GACPC,OAAQ,IAEV,gBAAiB,CACfL,QAAS,EACT,YAAa,CACXuC,UAAW,sBAMjBpF,QAAS,GAGTM,SAAU,GAGVmC,MAAO,CACLW,KAAM,QACNH,MAAO,QAITa,MAAO,CACLoC,UAAW7B,EAAM8B,QAAQ,GACzBX,gBAAiB,eACjBvC,MAAO,GACPC,OAAQ,GACRkD,aAAc,OAIhBhC,MAAO,CACLlB,OAAQ,OACRD,MAAO,OACPmD,aAAc,EACd9C,QAAS,EACTyB,WAAYV,EAAMW,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUb,EAAMW,YAAYE,SAASC,WAEvCK,gBAAwC,UAAvBnB,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQe,OAAOC,MAAQxB,EAAMQ,QAAQe,OAAOE,MACpG9C,QAAgC,UAAvBqB,EAAMQ,QAAQ3D,KAAmB,IAAO,OA0IrB,CAChCP,KAAM,aADOiC,CAEZW,I,gFClSY8C,cAA4B1G,gBAAoB,OAAQ,CACrE2G,EAAG,oLACD,U,sCC0RJ,SAASC,EAAsBC,GAC7B,MAA6B,cAAtBA,EAAcC,KAA6C,WAAtBD,EAAcC,IAO5D,IAAIC,EAAO/G,cAAiB,SAAcC,EAAOC,GAC/C,IAAI8G,EAAa/G,EAAMgH,OACnB1G,EAAUN,EAAMM,QAChBC,EAAYP,EAAMO,UAClB0G,EAAgBjH,EAAMkH,UACtBtD,EAAe5D,EAAM6D,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CuD,EAAgBnH,EAAMuC,UACtB6E,EAAiBpH,EAAMqH,WACvBC,EAAkBtH,EAAMU,SACxBA,OAA+B,IAApB4G,GAAqCA,EAChDC,EAAWvH,EAAMW,KACjB6G,EAAQxH,EAAMwH,MACdC,EAAUzH,EAAMyH,QAChBC,EAAW1H,EAAM0H,SACjBC,EAAY3H,EAAM2H,UAClBC,EAAU5H,EAAM4H,QAChB5D,EAAchE,EAAMiE,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3C6D,EAAiB7H,EAAM8H,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDrG,EAAQC,YAAyBzB,EAAO,CAAC,SAAU,UAAW,YAAa,YAAa,QAAS,YAAa,aAAc,WAAY,OAAQ,QAAS,UAAW,WAAY,YAAa,UAAW,OAAQ,YAEhN+H,EAAUhI,SAAa,MACvBiI,EAAYC,YAAWF,EAAS9H,GAEhCiI,EAAwB,SAA+BtF,GAEzDA,EAAMuF,kBAEFT,GACFA,EAAS9E,IAgCTsE,KAA8B,IAAlBD,IAA2BQ,IAAiBR,EACxDmB,EAAiB,UAATnE,EACRoE,EAAYlB,IAAkBD,EAAYoB,IAAa,OACvDC,EAAYF,IAAcC,IAAa,CACzC/F,UAAW,OACT,GACA8E,EAAa,KAEjB,GAAIK,EAAU,CACZ,IAAIc,EAAgBhG,YAAe,YAAVqB,IAAoC,YAAZiE,EAAwBxH,EAAQ,kBAAkB+D,OAAOC,YAAWT,KAAWvD,EAAQ,0BAA0B+D,OAAOC,YAAWT,MAAWuE,GAAS9H,EAAQmI,iBAChNpB,EAAaD,GAAkBrH,iBAAqBqH,GAAkBrH,eAAmBqH,EAAgB,CACvG7G,UAAWiC,YAAK4E,EAAepH,MAAMO,UAAWD,EAAQ+G,WAAYmB,GACpEf,QAASS,IACOnI,gBAAoB2I,EAAY,CAChDnI,UAAWiC,YAAKlC,EAAQ+G,WAAYmB,GACpCf,QAASS,IAIb,IAAIlB,EAAS,KAETD,GAAchH,iBAAqBgH,KACrCC,EAASjH,eAAmBgH,EAAY,CACtCxG,UAAWiC,YAAKlC,EAAQ0G,OAAQD,EAAW/G,MAAMO,UAAW6H,GAAS9H,EAAQqI,YAAuB,YAAV9E,GAAuBvD,EAAQ,cAAc+D,OAAOC,YAAWT,SAI7J,IAAIlD,EAAO,KAcX,OAZI4G,GAAYxH,iBAAqBwH,KACnC5G,EAAOZ,eAAmBwH,EAAU,CAClChH,UAAWiC,YAAKlC,EAAQK,KAAM4G,EAASvH,MAAMO,UAAW6H,GAAS9H,EAAQsI,UAAqB,YAAV/E,GAAuBvD,EAAQ,YAAY+D,OAAOC,YAAWT,SAUjI9D,gBAAoBsI,EAAW/F,YAAS,CAC1DI,KAAMwE,GAAaQ,EAAW,cAAW/E,EACzCpC,UAAWiC,YAAKlC,EAAQmC,KAAMlC,EAAqB,YAAVsD,GAAuB,CAACvD,EAAQ,QAAQ+D,OAAOC,YAAWT,KAAUqD,GAAa5G,EAAQ,iBAAiB+D,OAAOC,YAAWT,KAAU6D,GAAYpH,EAAQ,iBAAiB+D,OAAOC,YAAWT,MAAuB,YAAZiE,GAAyB,CAACxH,EAAQuI,SAAU,CAC3R,QAAWvI,EAAQwI,gBACnB,UAAaxI,EAAQyI,mBACrBlF,IAASnD,GAAYJ,EAAQI,SAAU0H,GAAS9H,EAAQ+F,UAAWa,GAAa5G,EAAQ4G,UAAWQ,GAAYpH,EAAQ0I,WACzH,kBAAiBtI,QAAkBiC,EACnCtB,SAAU6F,GAAaQ,EAAW,OAAI/E,EACtC8E,QAASA,EACTE,UA9EkB,SAAuB/E,GAErCA,EAAMqG,gBAAkBrG,EAAMG,QAAU4D,EAAsB/D,IAGhEA,EAAMsG,iBAGJvB,GACFA,EAAU/E,IAsEZgF,QAlEgB,SAAqBhF,GAEjCA,EAAMqG,gBAAkBrG,EAAMG,SAC5B2E,GAAYf,EAAsB/D,GACpC8E,EAAS9E,GACc,WAAdA,EAAMiE,KAAoBkB,EAAQoB,SAC3CpB,EAAQoB,QAAQC,QAIhBxB,GACFA,EAAQhF,IAwDV3C,IAAK+H,GACJO,EAAW/G,GAAQwF,GAAUrG,EAAmBZ,gBAAoB,OAAQ,CAC7EQ,UAAWiC,YAAKlC,EAAQkH,MAAOY,GAAS9H,EAAQ+I,aAC/C7B,GAAQH,MAgGErE,iBApfK,SAAgByB,GAClC,IAAImB,EAAyC,UAAvBnB,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,KAAOT,EAAMQ,QAAQC,KAAK,KAChGoE,EAAkBzD,YAAKpB,EAAMQ,QAAQsE,KAAK7D,QAAS,KACvD,MAAO,CAELjD,KAAM,CACJ+G,WAAY/E,EAAMgF,WAAWD,WAC7BE,SAAUjF,EAAMgF,WAAWE,QAAQ,IACnCjF,QAAS,cACTkF,WAAY,SACZC,eAAgB,SAChBvG,OAAQ,GACRO,MAAOY,EAAMQ,QAAQ6E,gBAAgBlE,GACrCA,gBAAiBA,EACjBY,aAAc,GACduD,WAAY,SACZ5E,WAAYV,EAAMW,YAAYC,OAAO,CAAC,mBAAoB,eAE1DnC,OAAQ,UAER8G,QAAS,EACTC,eAAgB,OAChBC,OAAQ,OAERjH,QAAS,EAET6B,cAAe,SACfF,UAAW,aACX,aAAc,CACZxB,QAAS,GACT+G,cAAe,QAEjB,YAAa,CACXpF,WAAY,EACZC,aAAc,EACd3B,MAAO,GACPC,OAAQ,GACRO,MAA8B,UAAvBY,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,KAAOT,EAAMQ,QAAQC,KAAK,KACrFwE,SAAUjF,EAAMgF,WAAWE,QAAQ,KAErC,wBAAyB,CACvB9F,MAAOY,EAAMQ,QAAQS,QAAQ0E,aAC7BxE,gBAAiBnB,EAAMQ,QAAQS,QAAQ2E,MAEzC,0BAA2B,CACzBxG,MAAOY,EAAMQ,QAAQmB,UAAUgE,aAC/BxE,gBAAiBnB,EAAMQ,QAAQmB,UAAUiE,MAE3C,iBAAkB,CAChBtF,WAAY,EACZC,aAAc,EACd3B,MAAO,GACPC,OAAQ,GACRoG,SAAUjF,EAAMgF,WAAWE,QAAQ,MAKvCtD,UAAW,CACT/C,OAAQ,IAIVmC,aAAc,CACZG,gBAAiBnB,EAAMQ,QAAQS,QAAQC,KACvC9B,MAAOY,EAAMQ,QAAQS,QAAQ0E,cAI/BjE,eAAgB,CACdP,gBAAiBnB,EAAMQ,QAAQmB,UAAUT,KACzC9B,MAAOY,EAAMQ,QAAQmB,UAAUgE,cAIjC1J,SAAU,GAGVwG,UAAW,CACToD,WAAY,OACZC,wBAAyB,cACzBrH,OAAQ,UACR,mBAAoB,CAClB0C,gBAAiB4E,YAAU5E,EAAiB,MAE9C,WAAY,CACVU,UAAW7B,EAAM8B,QAAQ,KAK7BkE,sBAAuB,CACrB,mBAAoB,CAClB7E,gBAAiB4E,YAAU/F,EAAMQ,QAAQS,QAAQC,KAAM,OAK3D+E,wBAAyB,CACvB,mBAAoB,CAClB9E,gBAAiB4E,YAAU/F,EAAMQ,QAAQmB,UAAUT,KAAM,OAK7DqD,UAAW,CACT,UAAW,CACTpD,gBAAiB4E,YAAU5E,EAAiB,OAKhD+E,sBAAuB,CACrB,UAAW,CACT/E,gBAAiB4E,YAAU/F,EAAMQ,QAAQS,QAAQC,KAAM,MAK3DiF,wBAAyB,CACvB,UAAW,CACThF,gBAAiB4E,YAAU/F,EAAMQ,QAAQmB,UAAUT,KAAM,MAK7DkD,SAAU,CACRjD,gBAAiB,cACjBsE,OAAQ,aAAa7F,OAA8B,UAAvBI,EAAMQ,QAAQ3D,KAAmB,sBAAwB,6BACrF,0DAA2D,CACzDsE,gBAAiBC,YAAKpB,EAAMQ,QAAQsE,KAAK7D,QAASjB,EAAMQ,QAAQa,OAAOC,eAEzE,YAAa,CACXhB,WAAY,GAEd,iBAAkB,CAChBA,WAAY,GAEd,UAAW,CACTA,WAAY,GAEd,eAAgB,CACdA,WAAY,GAEd,gBAAiB,CACfC,YAAa,GAEf,qBAAsB,CACpBA,YAAa,IAKjB8D,gBAAiB,CACfjF,MAAOY,EAAMQ,QAAQS,QAAQC,KAC7BuE,OAAQ,aAAa7F,OAAOI,EAAMQ,QAAQS,QAAQC,MAClD,0DAA2D,CACzDC,gBAAiBC,YAAKpB,EAAMQ,QAAQS,QAAQC,KAAMlB,EAAMQ,QAAQa,OAAOC,gBAK3EgD,kBAAmB,CACjBlF,MAAOY,EAAMQ,QAAQmB,UAAUT,KAC/BuE,OAAQ,aAAa7F,OAAOI,EAAMQ,QAAQmB,UAAUT,MACpD,0DAA2D,CACzDC,gBAAiBC,YAAKpB,EAAMQ,QAAQmB,UAAUT,KAAMlB,EAAMQ,QAAQa,OAAOC,gBAM7EiB,OAAQ,GAGR2B,YAAa,GAGbkC,mBAAoB,GAGpBC,qBAAsB,GAGtBnK,KAAM,CACJkD,MAA8B,UAAvBY,EAAMQ,QAAQ3D,KAAmBmD,EAAMQ,QAAQC,KAAK,KAAOT,EAAMQ,QAAQC,KAAK,KACrFH,WAAY,EACZC,aAAc,GAIhB4D,UAAW,CACTvF,MAAO,GACPC,OAAQ,GACRyB,WAAY,EACZC,aAAc,GAIhB+F,iBAAkB,CAChBlH,MAAO,WAITmH,mBAAoB,CAClBnH,MAAO,WAIT2D,MAAO,CACL7C,SAAU,SACVsG,aAAc,WACdC,YAAa,GACbC,aAAc,GACdpB,WAAY,UAIdV,WAAY,CACV6B,YAAa,EACbC,aAAc,GAIhB9D,WAAY,CACVkD,wBAAyB,cACzB1G,MAAOyF,EACPhG,OAAQ,GACRD,MAAO,GACPH,OAAQ,UACRO,OAAQ,eACR,UAAW,CACTI,MAAOgC,YAAKyD,EAAiB,MAKjCb,gBAAiB,CACfnF,OAAQ,GACRD,MAAO,GACP2B,YAAa,EACbD,YAAa,GAIfqG,uBAAwB,CACtBvH,MAAOgC,YAAKpB,EAAMQ,QAAQS,QAAQ0E,aAAc,IAChD,oBAAqB,CACnBvG,MAAOY,EAAMQ,QAAQS,QAAQ0E,eAKjCiB,yBAA0B,CACxBxH,MAAOgC,YAAKpB,EAAMQ,QAAQmB,UAAUgE,aAAc,IAClD,oBAAqB,CACnBvG,MAAOY,EAAMQ,QAAQmB,UAAUgE,eAKnCkB,+BAAgC,CAC9BzH,MAAOgC,YAAKpB,EAAMQ,QAAQS,QAAQC,KAAM,IACxC,oBAAqB,CACnB9B,MAAOY,EAAMQ,QAAQS,QAAQC,OAKjC4F,iCAAkC,CAChC1H,MAAOgC,YAAKpB,EAAMQ,QAAQmB,UAAUT,KAAM,IAC1C,oBAAqB,CACnB9B,MAAOY,EAAMQ,QAAQmB,UAAUT,UAoOL,CAChC5E,KAAM,WADOiC,CAEZ8D","file":"static/js/71.078a0a8f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && React.isValidElement(deleteIconProp) ? React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && React.isValidElement(avatarProp)) {\n    avatar = React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && React.isValidElement(iconProp)) {\n    icon = React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: the Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);"],"sourceRoot":""}