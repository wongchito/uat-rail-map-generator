{"version":3,"sources":["panels/stations/edit-diag/name-list-items.tsx","panels/stations/edit-diag/interchange-tab.tsx","panels/colour-diag/colours lazy /^/.//.*$/ groupOptions: {} namespace object","panels/colour-diag/data.ts","panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts"],"names":["useStyles","makeStyles","createStyles","listItemIcon","width","fontSize","textAlign","NameListItems","props","t","useTranslation","classes","React","className","style","variant","label","onChange","onUpdate","value","name","autoFocus","helperText","toString","intChipSetStyles","StationEditInterchangeTab","rmgStyle","useSelector","store","app","useContext","ParamContext","param","dispatch","stnTrans","stn_list","stnId","transfer","useState","osiNameDialogOpened","setOsiNameDialogOpened","addClick","index","newInfo","theme","type","setIdx","info","deleteClick","i","intIdx","margin","title","onClick","setIndex","onDelete","RmgStyle","MTR","SHMetro","includes","color","lineHeight","whiteSpace","marginRight","osi_names","join","OSINameDialog","open","osiName","onClose","intChip","borderRadius","height","intChipText","display","intChipTextZH","intChipTextEN","intChipLabel","paddingLeft","paddingRight","intChipDeleteIcon","marginLeft","InterchangeChipSet","intInfos","chipSelected","setChipSelected","nameDialogOpened","setNameDialogOpened","intChips","map","intInfo","deleteIcon","backgroundColor","undefined","lineName","key","concat","Array","memo","dividers","event","newOSIName","val","target","prevProps","nextProps","InterchangeMore","tickDirecChange","direction","useMemo","primary","native","tick_direc","d","edge","_","checked","isPaid","paid_area","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","cityList","country","en","zh","ga","ja","pt","ko","cityItem","flexDirection","alignItems","menuItemSpan","padding","button","minWidth","inputColour","position","left","top","buttonContainer","flexShrink","PalettePanel","i18n","lineList","list","setList","listPromise","default","useEffect","a","data","colour","fg","useLineList","length","filter","l","newTheme","component","disablePadding","slice","select","line","disabled","getTransText2","languages","CustomPanel","hexTemp","setHexTemp","rgb","opacity","htmlFor","borderColor","error","match","hex","idx","toUpperCase","CitySelectItem","items","c","CountryFlag","useEmojiStyles","img","codePoints","split","char","codePointAt","language","navigator","platform","indexOf","src","process","alt","String","fromCodePoint","cp","parseInt","contentWrapper","overflow","paddingTop","spacing","paddingBottom","breakpoints","down","contentLeft","maxWidth","contentControl","flexGrow","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","inputBaseInputEN","chipWrapper","overflowX","chipRoot","chipLabel","Dialog2","LineNameInput","nameChange","newName","root","input","RecentChipSet","allInfos","Set","values","reduce","acc","line_name","JSON","stringify","reverse","chips","x","parse","txt","secondary","secondaryTypographyProps","ColourControl","tabIndex","setTabIndex","tabNav","indicatorColor","textColor","scrollButtons","panel","ColourDialog"],"mappings":"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,WAAD,WACI,cAAC,eAAD,UACI,cAAC,OAAD,4CAEJ,cAAC,eAAD,CAAcqG,QAASrG,EAAE,+CACzB,cAAC,0BAAD,UACI,cAAC,SAAD,CAAQsG,QAAM,EAAC5F,MAAOe,EAAS8E,WAAY/F,SAAU0F,EAArD,SACK,CAAC,IAAK,KAAKlB,KAAI,SAAAwB,GAAC,OACb,wBAAgB9F,MAAO8F,EAAvB,SACKxG,EAAE,uCAAyCwG,IADnCA,aAO7B,eAAC,WAAD,WACI,cAAC,eAAD,UACI,cAAC,OAAD,6BAEJ,cAAC,eAAD,CAAcH,QAASrG,EAAE,wCACzB,cAAC,0BAAD,UACI,cAAC,SAAD,CACImD,MAAM,UACNsD,KAAK,MACLjG,SAAU,SAACkG,EAAGC,GAAJ,OACNnF,EAAS,CACLY,KAAM,2BACNT,MAAO5B,EAAM4B,MACbiF,OAAQD,KAGhBA,QAASlF,EAASoF,sBAOtC,CAAC9G,EAAM4B,MAAOF,EAAS8E,WAAY9E,EAASoF,c,mBCvVpD,IAAI7B,EAAM,CACT,cAAe,CACd,GACA,IAED,cAAe,CACd,GACA,GAED,iBAAkB,CACjB,GACA,GAED,YAAa,CACZ,GACA,IAED,eAAgB,CACf,GACA,IAED,aAAc,CACb,GACA,IAED,gBAAiB,CAChB,GACA,IAED,YAAa,CACZ,GACA,IAED,eAAgB,CACf,GACA,IAED,cAAe,CACd,GACA,IAED,iBAAkB,CACjB,GACA,IAED,aAAc,CACb,GACA,GAED,gBAAiB,CAChB,GACA,GAED,cAAe,CACd,GACA,GAED,iBAAkB,CACjB,GACA,GAED,WAAY,CACX,GACA,GAED,cAAe,CACd,GACA,GAED,YAAa,CACZ,GACA,GAED,eAAgB,CACf,GACA,GAED,cAAe,CACd,GACA,GAED,iBAAkB,CACjB,GACA,GAED,aAAc,CACb,GACA,GAED,gBAAiB,CAChB,GACA,GAED,aAAc,CACb,GACA,GAED,gBAAiB,CAChB,GACA,GAED,WAAY,CACX,GACA,GAED,cAAe,CACd,GACA,GAED,cAAe,CACd,GACA,IAED,iBAAkB,CACjB,GACA,IAED,WAAY,CACX,GACA,IAED,cAAe,CACd,GACA,IAED,UAAW,CACV,GACA,IAED,aAAc,CACb,GACA,IAED,WAAY,CACX,GACA,IAED,cAAe,CACd,GACA,IAED,YAAa,CACZ,GACA,IAED,eAAgB,CACf,GACA,IAED,cAAe,CACd,GACA,IAED,iBAAkB,CACjB,GACA,IAED,UAAW,CACV,GACA,IAED,aAAc,CACb,GACA,IAED,SAAU,CACT,GACA,IAED,YAAa,CACZ,GACA,IAED,UAAW,CACV,GACA,IAED,aAAc,CACb,GACA,IAED,UAAW,CACV,GACA,IAED,aAAc,CACb,GACA,IAED,YAAa,CACZ,GACA,IAED,eAAgB,CACf,GACA,IAED,iBAAkB,CACjB,GACA,IAED,oBAAqB,CACpB,GACA,IAED,UAAW,CACV,GACA,IAED,aAAc,CACb,GACA,IAED,aAAc,CACb,GACA,IAED,gBAAiB,CAChB,GACA,IAED,aAAc,CACb,GACA,IAED,gBAAiB,CAChB,GACA,IAED,cAAe,CACd,GACA,IAED,iBAAkB,CACjB,GACA,IAED,cAAe,CACd,GACA,IAED,iBAAkB,CACjB,GACA,IAED,WAAY,CACX,GACA,IAED,cAAe,CACd,GACA,IAED,YAAa,CACZ,GACA,IAED,eAAgB,CACf,GACA,IAED,UAAW,CACV,GACA,IAED,aAAc,CACb,GACA,IAED,YAAa,CACZ,GACA,IAED,eAAgB,CACf,GACA,IAED,gBAAiB,CAChB,GACA,IAED,mBAAoB,CACnB,GACA,IAED,SAAU,CACT,GACA,IAED,YAAa,CACZ,GACA,KAGF,SAAS8B,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEjC,EAAK+B,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMxC,EAAI+B,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAK1C,IAEpB8B,EAAoBW,G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","file":"static/js/panelStationsInterchange.c6952b3d.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        listItemIcon: {\n            width: '1em',\n            fontSize: '1.5rem',\n            textAlign: 'center',\n        },\n    })\n);\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>文</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameZH')}\n                        onChange={props.onUpdate(0)}\n                        value={props.name[0]}\n                        autoFocus\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>A</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameEN')}\n                        onChange={props.onUpdate(1)}\n                        value={props.name[1]}\n                        helperText={t('stations.edit.name.nameENHelper')}\n                    />\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.name.toString()]\n    );\n};\n\nexport default NameListItems;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button,\n    Chip,\n    createStyles,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Select,\n    Switch,\n    Tooltip,\n} from '@material-ui/core';\nimport { ParamContext } from '../../../context';\nimport ColourDialog from '../../colour-diag';\nimport NameListItems from './name-list-items';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../redux';\nimport { RmgStyle } from '../../../constants/constants';\n\nconst StationEditInterchangeTab = (props: { stnId: string }) => {\n    const { t } = useTranslation();\n\n    const rmgStyle = useSelector((store: RootState) => store.app.rmgStyle);\n    const { param, dispatch } = useContext(ParamContext);\n    const stnTrans = param.stn_list[props.stnId].transfer;\n\n    const [osiNameDialogOpened, setOsiNameDialogOpened] = React.useState(false);\n\n    const addClick = (index: number) => {\n        let newInfo = [...param.theme, '轉綫', 'Line'] as InterchangeInfo;\n        dispatch({\n            type: 'ADD_STATION_INTERCHANGE_INFO',\n            stnId: props.stnId,\n            setIdx: index,\n            info: newInfo,\n        });\n    };\n\n    const deleteClick = (index: number, i: number) => {\n        dispatch({\n            type: 'REMOVE_STATION_INTERCHANGE_INFO',\n            stnId: props.stnId,\n            setIdx: index,\n            intIdx: i,\n        });\n    };\n\n    return (\n        <List>\n            <ListItem>\n                <ListItemText>\n                    <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.within')}</h3>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <Tooltip title={t('stations.edit.interchange.add')} aria-label=\"add\">\n                        <IconButton onClick={() => addClick(0)}>\n                            <Icon>add_circle</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <InterchangeChipSet stnId={props.stnId} setIndex={0} onDelete={i => deleteClick(0, i)} />\n            </ListItem>\n            {[RmgStyle.MTR, RmgStyle.SHMetro].includes(rmgStyle || '') && (\n                <>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText>\n                            <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.osi')}</h3>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                style={{ lineHeight: '1rem', whiteSpace: 'pre', marginRight: 5 }}\n                                onClick={() => setOsiNameDialogOpened(true)}\n                            >\n                                {stnTrans.osi_names[0] ? stnTrans.osi_names[0].join('\\r\\n') : '車站名\\r\\nStn Name'}\n                            </Button>\n                            <OSINameDialog\n                                open={osiNameDialogOpened}\n                                osiName={stnTrans.osi_names[0] || ['', '']}\n                                stnId={props.stnId}\n                                onClose={() => setOsiNameDialogOpened(false)}\n                            />\n                            <Tooltip title={t('stations.edit.interchange.add')} aria-label=\"add\">\n                                <IconButton onClick={() => addClick(1)}>\n                                    <Icon>add_circle</Icon>\n                                </IconButton>\n                            </Tooltip>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <InterchangeChipSet stnId={props.stnId} setIndex={1} onDelete={i => deleteClick(1, i)} />\n                    </ListItem>\n                    <ListItem>\n                        <span>{t('stations.edit.interchange.note')}</span>\n                    </ListItem>\n                </>\n            )}\n            {rmgStyle === RmgStyle.MTR && <InterchangeMore stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default StationEditInterchangeTab;\n\nconst intChipSetStyles = makeStyles(() =>\n    createStyles({\n        intChip: {\n            borderRadius: 4.5,\n            height: 40,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        intChipText: {\n            display: 'block',\n            textAlign: 'center' as 'center',\n        },\n        intChipTextZH: {\n            fontSize: 18,\n            lineHeight: '1.2rem',\n        },\n        intChipTextEN: {\n            fontSize: '.75rem',\n            lineHeight: '.9rem',\n            whiteSpace: 'pre-wrap' as 'pre-wrap',\n        },\n        intChipLabel: {\n            paddingLeft: 6,\n            paddingRight: 6,\n        },\n        intChipDeleteIcon: {\n            marginLeft: -3,\n        },\n    })\n);\n\ninterface InterchangeChipSetProps {\n    stnId: string;\n    setIndex: number;\n    onDelete: (i: number) => void;\n}\n\nconst InterchangeChipSet = (props: InterchangeChipSetProps) => {\n    const classes = intChipSetStyles();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const intInfos = param.stn_list[props.stnId].transfer.info[props.setIndex];\n\n    const [chipSelected, setChipSelected] = React.useState(-1);\n    const [nameDialogOpened, setNameDialogOpened] = React.useState(false);\n\n    const handleClick = (index: number) => {\n        setChipSelected(index);\n        setNameDialogOpened(true);\n    };\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'theme') {\n            dispatch({\n                type: 'UPDATE_STATION_INTERCHANGE_INFO',\n                stnId: props.stnId,\n                setIdx: props.setIndex,\n                intIdx: chipSelected,\n                info: (value as string[]).concat(Array(2)) as InterchangeInfo,\n            });\n        }\n        if (key === 'name') {\n            dispatch({\n                type: 'UPDATE_STATION_INTERCHANGE_INFO',\n                stnId: props.stnId,\n                setIdx: props.setIndex,\n                intIdx: chipSelected,\n                info: Array(4).concat(value) as InterchangeInfo,\n            });\n        }\n    };\n\n    const intChips = intInfos?.map((intInfo, i) => {\n        let label = (\n            <span style={{ color: intInfo[3] }}>\n                <span className={`${classes.intChipText} ${classes.intChipTextZH}`}>{intInfo[4]}</span>\n                <span className={`${classes.intChipText} ${classes.intChipTextEN}`}>{intInfo[5]}</span>\n            </span>\n        );\n        return (\n            <Chip\n                key={i}\n                label={label}\n                className={classes.intChip}\n                classes={{\n                    label: classes.intChipLabel,\n                    deleteIcon: classes.intChipDeleteIcon,\n                }}\n                style={{ backgroundColor: intInfo[2] }}\n                onDelete={() => props.onDelete(i)}\n                onClick={() => handleClick(i)}\n            />\n        );\n    });\n\n    return (\n        <div>\n            {intChips}\n\n            <ColourDialog\n                open={nameDialogOpened}\n                theme={\n                    intInfos?.[chipSelected] === undefined\n                        ? (([] as any) as Theme)\n                        : [\n                              intInfos[chipSelected][0],\n                              intInfos[chipSelected][1],\n                              intInfos[chipSelected][2],\n                              intInfos[chipSelected][3] as '#fff' | '#000',\n                          ]\n                }\n                lineName={\n                    intInfos?.[chipSelected] === undefined\n                        ? ['', '']\n                        : [intInfos[chipSelected][4], intInfos[chipSelected][5]]\n                }\n                onUpdate={nameDialogUpdate}\n                onClose={() => setNameDialogOpened(false)}\n            />\n        </div>\n    );\n};\n\ninterface OSINameDialogProps {\n    open: boolean;\n    stnId: string;\n    osiName: Name;\n    onClose: () => void;\n}\n\nconst OSINameDialog = React.memo(\n    (props: OSINameDialogProps) => {\n        const { t } = useTranslation();\n\n        const { dispatch } = useContext(ParamContext);\n\n        const handleUpdate = (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n            let newOSIName = props.osiName.map((val, i) => (i === index ? event.target.value : val)) as Name;\n            dispatch({ type: 'UPDATE_STATION_OSI_NAME', stnId: props.stnId, name: newOSIName });\n        };\n\n        return (\n            <Dialog open={props.open} onClose={props.onClose}>\n                <DialogTitle>{t('stations.edit.interchange.osiName')}</DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        <NameListItems onUpdate={handleUpdate} name={props.osiName} />\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={props.onClose} color=\"primary\" autoFocus>\n                        {t('dialog.done')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    },\n    (prevProps, nextProps) =>\n        prevProps.open === nextProps.open && prevProps.osiName.toString() === nextProps.osiName.toString()\n);\n\nconst InterchangeMore = (props: { stnId: string }) => {\n    const { t } = useTranslation();\n\n    const { param, dispatch } = React.useContext(ParamContext);\n    const stnTrans = param.stn_list[props.stnId].transfer;\n\n    const tickDirecChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let direction = event.target.value;\n        if (direction === 'l' || direction === 'r')\n            dispatch({\n                type: 'UPDATE_STATION_TICK_DIREC',\n                stnId: props.stnId,\n                direction,\n            });\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Divider />\n                <ListItem>\n                    <ListItemText>\n                        <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.settings')}</h3>\n                    </ListItemText>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>format_textdirection_l_to_r</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.tickDirec.label')} />\n                    <ListItemSecondaryAction>\n                        <Select native value={stnTrans.tick_direc} onChange={tickDirecChange}>\n                            {['l', 'r'].map(d => (\n                                <option key={d} value={d}>\n                                    {t('stations.edit.interchange.tickDirec.' + d)}\n                                </option>\n                            ))}\n                        </Select>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>attach_money</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.paidArea')} />\n                    <ListItemSecondaryAction>\n                        <Switch\n                            color=\"primary\"\n                            edge=\"end\"\n                            onChange={(_, checked) =>\n                                dispatch({\n                                    type: 'UPDATE_STATION_PAID_AREA',\n                                    stnId: props.stnId,\n                                    isPaid: checked,\n                                })\n                            }\n                            checked={stnTrans.paid_area}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.stnId, stnTrans.tick_direc, stnTrans.paid_area]\n    );\n};\n","var map = {\n\t\"./README.md\": [\n\t\t79,\n\t\t68\n\t],\n\t\"./barcelona\": [\n\t\t36,\n\t\t1\n\t],\n\t\"./barcelona.ts\": [\n\t\t36,\n\t\t1\n\t],\n\t\"./beijing\": [\n\t\t37,\n\t\t12\n\t],\n\t\"./beijing.ts\": [\n\t\t37,\n\t\t12\n\t],\n\t\"./changsha\": [\n\t\t38,\n\t\t23\n\t],\n\t\"./changsha.ts\": [\n\t\t38,\n\t\t23\n\t],\n\t\"./chengdu\": [\n\t\t39,\n\t\t34\n\t],\n\t\"./chengdu.ts\": [\n\t\t39,\n\t\t34\n\t],\n\t\"./chongqing\": [\n\t\t40,\n\t\t36\n\t],\n\t\"./chongqing.ts\": [\n\t\t40,\n\t\t36\n\t],\n\t\"./dongguan\": [\n\t\t41,\n\t\t2\n\t],\n\t\"./dongguan.ts\": [\n\t\t41,\n\t\t2\n\t],\n\t\"./edinburgh\": [\n\t\t42,\n\t\t3\n\t],\n\t\"./edinburgh.ts\": [\n\t\t42,\n\t\t3\n\t],\n\t\"./foshan\": [\n\t\t43,\n\t\t4\n\t],\n\t\"./foshan.ts\": [\n\t\t43,\n\t\t4\n\t],\n\t\"./glasgow\": [\n\t\t44,\n\t\t5\n\t],\n\t\"./glasgow.ts\": [\n\t\t44,\n\t\t5\n\t],\n\t\"./guangzhou\": [\n\t\t45,\n\t\t6\n\t],\n\t\"./guangzhou.ts\": [\n\t\t45,\n\t\t6\n\t],\n\t\"./hangzhou\": [\n\t\t46,\n\t\t7\n\t],\n\t\"./hangzhou.ts\": [\n\t\t46,\n\t\t7\n\t],\n\t\"./hongkong\": [\n\t\t47,\n\t\t8\n\t],\n\t\"./hongkong.ts\": [\n\t\t47,\n\t\t8\n\t],\n\t\"./kansai\": [\n\t\t48,\n\t\t9\n\t],\n\t\"./kansai.ts\": [\n\t\t48,\n\t\t9\n\t],\n\t\"./kaohsiung\": [\n\t\t49,\n\t\t10\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t49,\n\t\t10\n\t],\n\t\"./london\": [\n\t\t50,\n\t\t11\n\t],\n\t\"./london.ts\": [\n\t\t50,\n\t\t11\n\t],\n\t\"./macao\": [\n\t\t51,\n\t\t13\n\t],\n\t\"./macao.ts\": [\n\t\t51,\n\t\t13\n\t],\n\t\"./madrid\": [\n\t\t52,\n\t\t14\n\t],\n\t\"./madrid.ts\": [\n\t\t52,\n\t\t14\n\t],\n\t\"./nanjing\": [\n\t\t53,\n\t\t15\n\t],\n\t\"./nanjing.ts\": [\n\t\t53,\n\t\t15\n\t],\n\t\"./newtaipei\": [\n\t\t54,\n\t\t16\n\t],\n\t\"./newtaipei.ts\": [\n\t\t54,\n\t\t16\n\t],\n\t\"./osaka\": [\n\t\t55,\n\t\t17\n\t],\n\t\"./osaka.ts\": [\n\t\t55,\n\t\t17\n\t],\n\t\"./oslo\": [\n\t\t56,\n\t\t18\n\t],\n\t\"./oslo.ts\": [\n\t\t56,\n\t\t18\n\t],\n\t\"./other\": [\n\t\t57,\n\t\t19\n\t],\n\t\"./other.ts\": [\n\t\t57,\n\t\t19\n\t],\n\t\"./paris\": [\n\t\t58,\n\t\t20\n\t],\n\t\"./paris.ts\": [\n\t\t58,\n\t\t20\n\t],\n\t\"./qingdao\": [\n\t\t59,\n\t\t21\n\t],\n\t\"./qingdao.ts\": [\n\t\t59,\n\t\t21\n\t],\n\t\"./sanfrancisco\": [\n\t\t60,\n\t\t22\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t60,\n\t\t22\n\t],\n\t\"./seoul\": [\n\t\t61,\n\t\t24\n\t],\n\t\"./seoul.ts\": [\n\t\t61,\n\t\t24\n\t],\n\t\"./shanghai\": [\n\t\t62,\n\t\t25\n\t],\n\t\"./shanghai.ts\": [\n\t\t62,\n\t\t25\n\t],\n\t\"./shenzhen\": [\n\t\t63,\n\t\t26\n\t],\n\t\"./shenzhen.ts\": [\n\t\t63,\n\t\t26\n\t],\n\t\"./singapore\": [\n\t\t64,\n\t\t27\n\t],\n\t\"./singapore.ts\": [\n\t\t64,\n\t\t27\n\t],\n\t\"./stockholm\": [\n\t\t65,\n\t\t28\n\t],\n\t\"./stockholm.ts\": [\n\t\t65,\n\t\t28\n\t],\n\t\"./taipei\": [\n\t\t66,\n\t\t29\n\t],\n\t\"./taipei.ts\": [\n\t\t66,\n\t\t29\n\t],\n\t\"./tianjin\": [\n\t\t67,\n\t\t30\n\t],\n\t\"./tianjin.ts\": [\n\t\t67,\n\t\t30\n\t],\n\t\"./tokyo\": [\n\t\t68,\n\t\t31\n\t],\n\t\"./tokyo.ts\": [\n\t\t68,\n\t\t31\n\t],\n\t\"./toronto\": [\n\t\t69,\n\t\t32\n\t],\n\t\"./toronto.ts\": [\n\t\t69,\n\t\t32\n\t],\n\t\"./tyneandwear\": [\n\t\t70,\n\t\t33\n\t],\n\t\"./tyneandwear.ts\": [\n\t\t70,\n\t\t33\n\t],\n\t\"./xian\": [\n\t\t71,\n\t\t35\n\t],\n\t\"./xian.ts\": [\n\t\t71,\n\t\t35\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 75;\nmodule.exports = webpackAsyncContext;","export const cityList: CityEntry[] = [\n    {\n        id: 'barcelona',\n        country: 'ES',\n        name: {\n            en: 'Barcelona',\n            'zh-Hans': '巴塞罗那',\n            'zh-HK': '巴塞隆拿',\n            'zh-TW': '巴塞隆納',\n        },\n    },\n    {\n        id: 'beijing',\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: 'changsha',\n        country: 'CN',\n        name: {\n            en: 'Changsha',\n            'zh-Hans': '长沙',\n            'zh-Hant': '長沙',\n        },\n    },\n    {\n        id: 'chengdu',\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: 'chongqing',\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: 'dongguan',\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: 'edinburgh',\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: 'foshan',\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: 'glasgow',\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: 'guangzhou',\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: 'hangzhou',\n        country: 'CN',\n        name: {\n            en: 'Hangzhou',\n            zh: '杭州',\n        },\n    },\n    {\n        id: 'hongkong',\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: 'kansai',\n        country: 'JP',\n        name: {\n            en: 'Kansai Area',\n            ja: '近畿地方',\n            'zh-Hans': '近畿地方（关西地方）',\n            'zh-Hant': '近畿地方（關西地方）',\n        },\n    },\n    {\n        id: 'kaohsiung',\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: 'london',\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: 'macao',\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: 'madrid',\n        country: 'ES',\n        name: {\n            en: 'Madrid',\n            'zh-Hans': '马德里',\n            'zh-Hant': '馬德里',\n        },\n    },\n    {\n        id: 'nanjing',\n        country: 'CN',\n        name: {\n            en: 'Nanjing',\n            zh: '南京',\n        },\n    },\n    {\n        id: 'newtaipei',\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: 'osaka',\n        country: 'JP',\n        name: {\n            en: 'Osaka',\n            ja: '大阪',\n            zh: '大阪',\n        },\n    },\n    {\n        id: 'oslo',\n        country: 'NO',\n        name: {\n            en: 'Oslo',\n            'zh-Hans': '奥斯陆',\n            'zh-Hant': '奧斯陸',\n        },\n    },\n    {\n        id: 'paris',\n        country: 'FR',\n        name: {\n            en: 'Paris',\n            zh: '巴黎',\n        },\n    },\n    {\n        id: 'qingdao',\n        country: 'CN',\n        name: {\n            en: 'Qingdao',\n            'zh-Hans': '青岛',\n            'zh-Hant': '青島',\n        },\n    },\n    {\n        id: 'sanfrancisco',\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: 'seoul',\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: 'shanghai',\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: 'shenzhen',\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: 'singapore',\n        country: 'SG',\n        name: {\n            en: 'Singapore',\n            zh: '新加坡',\n        },\n    },\n    {\n        id: 'stockholm',\n        country: 'SE',\n        name: {\n            en: 'Stockholm',\n            'zh-Hans': '斯德哥尔摩',\n            'zh-Hant': '斯德哥爾摩',\n        },\n    },\n    {\n        id: 'taipei',\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            zh: '台北',\n        },\n    },\n    {\n        id: 'tianjin',\n        country: 'CN',\n        name: {\n            en: 'Tianjin',\n            zh: '天津',\n        },\n    },\n    {\n        id: 'tokyo',\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: 'toronto',\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: 'tyneandwear',\n        country: 'GBENG',\n        name: {\n            en: 'Tyne and Wear',\n            'zh-Hans': '泰恩-威尔',\n            'zh-HK': '泰威',\n            'zh-TW': '泰恩-威爾',\n        },\n    },\n    {\n        id: 'xian',\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: 'other',\n        country: 'UN',\n        name: {\n            en: 'Customise',\n            'zh-Hans': '自定义',\n            'zh-Hant': '自訂',\n        },\n    },\n];\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    List,\n    ListItem,\n    TextField,\n    MenuItem,\n    Button,\n    makeStyles,\n    createStyles,\n    Tooltip,\n    ListItemText,\n    Divider,\n    Select,\n} from '@material-ui/core';\nimport { getTransText2 } from '../../utils';\nimport { cityList } from './data';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 24,\n            width: 24,\n            minWidth: 0,\n            marginRight: 8,\n            // border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = (theme: Theme) => {\n    const [list, setList] = React.useState([] as LineEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `./colours/${theme[0]}`).then(\n              module => module.default as LineEntry[]\n          )\n        : Promise.resolve([] as LineEntry[]);\n\n    useEffect(\n        () => {\n            if (typeof theme[0] === 'undefined') {\n                return;\n            }\n            (async () => {\n                const data = await listPromise;\n                setList(theme[0] === 'other' ? [{ ...data[0], colour: theme[2], fg: theme[3] || '#fff' }] : data);\n            })();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [theme.toString()]\n    );\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport const PalettePanel = (props: ColourDialogProps) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const cityChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n        props.onUpdate('theme', [event.target.value, ...props.theme.slice(1)]);\n\n    // Hook for fetching line list of current city\n    const lineList = useLineList(props.theme);\n\n    // Hook for updating props.theme when lineList changed\n    useEffect(\n        () => {\n            if (lineList.length === 0) return; // initialising, ignore\n            if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n            let { id, colour, fg } = lineList[0];\n            let newTheme = [props.theme[0], id, colour, fg || '#fff'];\n            props.onUpdate('theme', newTheme);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [lineList]\n    );\n\n    const lineChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let line = event.target.value;\n        let { colour, fg } = lineList.filter(l => l.id === line)[0];\n        let newTheme = [props.theme[0], line, colour, fg || '#fff'];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <CitySelectItem value={props.theme[0]} onChange={cityChange} />\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.line')} />\n                <TextField\n                    select\n                    style={{ width: 166 }}\n                    onChange={lineChange}\n                    value={props.theme[1]}\n                    disabled={props.theme[0] === 'other'}\n                >\n                    {lineList.map(l => (\n                        <MenuItem key={l.id} value={l.id}>\n                            <span\n                                className={classes.menuItemSpan}\n                                style={{\n                                    backgroundColor: l.colour,\n                                    color: l.fg || '#fff',\n                                }}\n                            >\n                                {getTransText2(l.name, i18n.languages)}\n                            </span>\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </ListItem>\n        </List>\n    );\n};\n\nexport const CustomPanel = (props: ColourDialogProps) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [hexTemp, setHexTemp] = useState(props.theme[2]);\n\n    useEffect(\n        () => setHexTemp(props.theme[2]),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.theme[2]]\n    );\n\n    const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let rgb = event.target.value;\n        // setHexTemp(rgb);\n        props.onUpdate('theme', ['other', 'other', rgb, props.theme[3]]);\n    };\n\n    const hexChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let hex = event.target.value;\n        if (hex.match(/^#[0-9a-fA-F]{0,6}$/) === null) return;\n        setHexTemp(hex);\n\n        if (props.theme[0] !== 'other') {\n            if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = ['other', 'other', hex, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex not valid, modify theme city only\n                let newTheme = ['other', 'other', ...props.theme.slice(2)];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            }\n        } else {\n            if (hex.match(/^#[0-9a-fA-F]{6}$/) !== null) {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            } else {\n                // if hex not valid, do nothing\n            }\n        }\n    };\n\n    const fgChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let newTheme = ['other', 'other', props.theme[2], event.target.value];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <ListItem>\n                <ListItemText primary={t('colour.colour')} />\n                <div className={classes.buttonContainer}>\n                    <input\n                        type=\"color\"\n                        id=\"input-color\"\n                        value={props.theme[2]}\n                        onChange={colourChange}\n                        className={classes.inputColour}\n                        style={{ opacity: 0 }}\n                    />\n                    <label htmlFor=\"input-color\">\n                        <Tooltip title={t('colour.tooltip')} aria-label=\"colour picker\">\n                            <Button\n                                className={classes.button}\n                                style={{\n                                    backgroundColor: props.theme[2],\n                                    borderColor: props.theme[3] || '#fff',\n                                }}\n                                variant=\"contained\"\n                                component=\"span\"\n                            >\n                                {' '}\n                            </Button>\n                        </Tooltip>\n                    </label>\n                </div>\n                <TextField\n                    error={!hexTemp?.match(/^#[0-9a-fA-F]{6}$/g)}\n                    style={{ width: 85 }}\n                    onChange={hexChange}\n                    value={hexTemp?.toUpperCase()}\n                />\n            </ListItem>\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.fg')} />\n                <Select\n                    native\n                    style={{ width: 85 }}\n                    label={t('colour.fg')}\n                    onChange={fgChange}\n                    value={props.theme[3] || '#fff'}\n                >\n                    <option value=\"#fff\">{t('colour.fgWhite')}</option>\n                    <option value=\"#000\">{t('colour.fgBlack')}</option>\n                </Select>\n            </ListItem>\n        </List>\n    );\n};\n\nconst CitySelectItem = (props: { value: string; onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const items = useMemo(\n        () =>\n            cityList.map(c => (\n                <MenuItem key={c.id} value={c.id}>\n                    <span className={classes.cityItem}>\n                        <CountryFlag code={c.country} />\n                        <span>{getTransText2(c.name, i18n.languages)}</span>\n                    </span>\n                </MenuItem>\n            )),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    return (\n        <ListItem>\n            <ListItemText primary={t('colour.city')} />\n            <TextField select style={{ width: 166 }} value={props.value} onChange={props.onChange}>\n                {items}\n            </TextField>\n        </ListItem>\n    );\n};\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: { code: string }) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => ((char.codePointAt(0) || 0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4'].concat(\n            props.code\n                .toUpperCase()\n                .split('')\n                .map(char => ((char.codePointAt(0) || 0) + 917536).toString(16).toUpperCase()),\n            'E007F'\n        );\n    }\n\n    // special case for simplified Chinese\n    if (['zh-CN', 'zh-Hans'].includes(i18n.language) && props.code === 'TW') codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img\n            src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`}\n            className={classes.img}\n            alt={`Flag of ${props.code}`}\n        />\n    ) : (\n        // <img src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import React, { useState, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Paper,\n    ListItem,\n    List,\n    Icon,\n    InputBase,\n    makeStyles,\n    DialogActions,\n    Button,\n    createStyles,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n    ListItemText,\n} from '@material-ui/core';\nimport { PalettePanel, CustomPanel } from './theme-items';\nimport { ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        contentWrapper: {\n            display: 'flex',\n            overflow: 'hidden',\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        contentLeft: {\n            maxWidth: 280,\n        },\n        contentControl: {\n            flexGrow: 0,\n            flexShrink: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            width: 270,\n        },\n\n        paperRoot: {\n            maxWidth: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n\n        chipWrapper: {\n            overflowX: 'auto',\n            display: 'flex',\n        },\n        chipRoot: {\n            borderRadius: 4.5,\n            height: 32,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        chipLabel: {\n            padding: '0 6px',\n            '& > span': {\n                display: 'block',\n                textAlign: 'center',\n            },\n            '& > span:first-child': {\n                fontSize: '1rem',\n            },\n            '& > span:last-child': {\n                lineHeight: '0.8rem',\n            },\n        },\n    })\n);\n\ninterface Props {\n    open: boolean;\n    theme: [string, string, string, '#000' | '#fff'];\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst Dialog2 = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <Dialog open={props.open} onClose={props.onClose}>\n            <DialogTitle>{t('colour.title')}</DialogTitle>\n            <DialogContent className={classes.contentWrapper}>\n                <List component=\"div\" disablePadding className={classes.contentLeft}>\n                    <LineNameInput theme={props.theme} lineName={props.lineName} onUpdate={props.onUpdate} />\n                    <Divider />\n                    <RecentChipSet onUpdate={props.onUpdate} />\n                </List>\n                <div className={classes.contentControl}>\n                    <ColourControl theme={props.theme} onUpdate={props.onUpdate} />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\">\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Dialog2;\n\nconst LineNameInput = (props: { lineName: Name; theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const classes = useStyles();\n\n    const nameChange = (value: string, index: number) => {\n        let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n        props.onUpdate('name', newName);\n    };\n\n    return (\n        <ListItem style={{ justifyContent: 'center' }}>\n            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                <Icon className={classes.iconRoot}>edit</Icon>\n                <InputBase\n                    value={props.lineName[0]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputZH,\n                    }}\n                    style={{ color: props.theme[3] || '#fff' }}\n                    onChange={e => nameChange(e.target.value, 0)}\n                    autoFocus\n                />\n                <InputBase\n                    value={props.lineName[1]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputEN,\n                    }}\n                    style={{ color: props.theme[3] || '#fff' }}\n                    onChange={e => nameChange(e.target.value, 1)}\n                />\n            </Paper>\n        </ListItem>\n    );\n};\n\nconst RecentChipSet = (props: { onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { param } = useContext(ParamContext);\n\n    const allInfos = useMemo(\n        () =>\n            new Set(\n                Object.values(param.stn_list)\n                    .reduce(\n                        (acc, { transfer }) => {\n                            const { info } = transfer;\n                            return acc.concat(...info);\n                        },\n                        [[...param.theme, ...param.line_name] as InterchangeInfo]\n                    )\n                    .map(val => JSON.stringify(val))\n                    .reverse()\n            ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    const chips = useMemo(\n        () =>\n            [...allInfos].map((x, i) => {\n                const info: InterchangeInfo = JSON.parse(x);\n                const label = info.slice(4).map((txt, i) => (\n                    <span key={i} style={{ color: info[3] }}>\n                        {txt}\n                    </span>\n                ));\n\n                return (\n                    <Chip\n                        key={i}\n                        onClick={() => {\n                            props.onUpdate('theme', info.slice(0, 4));\n                            props.onUpdate('name', info.slice(4));\n                        }}\n                        style={{ backgroundColor: info[2] }}\n                        className={classes.chipRoot}\n                        classes={{ label: classes.chipLabel }}\n                        {...{ label }}\n                    />\n                );\n            }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ListItem>\n            <ListItemText\n                primary={t('colour.recent')}\n                secondary={chips}\n                secondaryTypographyProps={{ component: 'div' }}\n                classes={{ secondary: classes.chipWrapper }}\n            />\n        </ListItem>\n    );\n};\n\nconst ColourControl = (props: { theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const [tabIndex, setTabIndex] = useState(props.theme[0] === 'other' ? 1 : 0);\n\n    const tabNav = (\n        <Tabs\n            value={tabIndex}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(_, val) => setTabIndex(val)}\n            variant=\"fullWidth\"\n            scrollButtons=\"off\"\n        >\n            <Tab label={t('colour.palette')} style={{ minWidth: 'unset' }} />\n            <Tab label={t('colour.custom')} style={{ minWidth: 'unset' }} />\n        </Tabs>\n    );\n\n    const panel = (idx => {\n        switch (idx) {\n            case 0:\n                return <PalettePanel {...props} />;\n            case 1:\n                return <CustomPanel {...props} />;\n            default:\n                return <></>;\n        }\n    })(tabIndex);\n\n    return (\n        <>\n            {tabNav}\n            {panel}\n        </>\n    );\n};\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;"],"sourceRoot":""}