{"version":3,"sources":["../node_modules/@material-ui/core/esm/Collapse/Collapse.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","panels/layout/common.tsx","panels/layout/panel.tsx","panels/layout/index.ts"],"names":["Collapse","React","props","ref","children","classes","className","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","component","Component","inProp","in","onEnter","onEntered","onEntering","onExit","onExiting","style","_props$timeout","timeout","duration","standard","other","_objectWithoutProperties","theme","useTheme","timer","wrapperRef","autoTransitionDuration","concat","clearTimeout","current","Transition","_extends","node","isAppearing","height","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","transitions","getAutoHeightDuration","addEndListener","_","next","setTimeout","state","childProps","clsx","container","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","withStyles","overflow","transition","create","visibility","display","width","name","InputAdornment","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","muiFormControl","useFormControl","FormControlContext","Provider","value","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","useStyles","makeStyles","createStyles","nestedList","paddingLeft","spacing","textField","maxWidth","slider","memo","rmgStyle","useContext","CanvasContext","Divider","SizeLi","t","useTranslation","ParamContext","param","dispatch","canvasAvailable","useState","isOpen","setIsOpen","useMemo","ListItem","button","onClick","prevOpen","ListItemIcon","Icon","ListItemText","primary","unmountOnExit","List","disablePadding","map","canvas","Fragment","TextField","svgWidth","toString","onChange","e","isNaN","Number","target","type","targetId","InputProps","endAdornment","svg_height","JSON","stringify","YLi","Slider","y_pc","step","marks","label","valueLabelDisplay","BranchSpacingLi","branch_spacing","PaddingLi","padding","max","LayoutGZMTR","lazy","Grid","justify","item","xs","sm","md","lg","Paper","Suspense","fallback","LinearProgress","Panel"],"mappings":"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","file":"static/js/panelLayout.17945fcc.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  };\n\n  var handleEntered = function handleEntered(node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExiting = function handleExiting(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: ref\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { useState, useContext, useMemo, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    TextField,\n    Slider,\n    List,\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    makeStyles,\n    createStyles,\n    Collapse,\n    Divider,\n    InputAdornment,\n} from '@material-ui/core';\nimport { ParamContext, CanvasContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        nestedList: {\n            paddingLeft: theme.spacing(5),\n        },\n        textField: {\n            maxWidth: 168,\n        },\n        slider: {\n            width: 168,\n            marginLeft: 8,\n            marginRight: 8,\n        },\n    })\n);\n\nexport default memo(function LayoutCommon() {\n    const { rmgStyle } = useContext(CanvasContext);\n    return (\n        <>\n            <SizeLi />\n            <Divider />\n            {rmgStyle !== 'shmetro' && (\n                <>\n                    <YLi />\n                    <Divider />\n                </>\n            )}\n            <BranchSpacingLi />\n            <Divider />\n            <PaddingLi />\n        </>\n    );\n});\n\nconst SizeLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { param, dispatch } = useContext(ParamContext);\n    const { canvasAvailable } = useContext(CanvasContext);\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    return useMemo(\n        () => (\n            <>\n                <ListItem button onClick={() => setIsOpen(prevOpen => !prevOpen)}>\n                    <ListItemIcon>\n                        <Icon>panorama_horizontal</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('layout.size.title')} />\n                    {isOpen ? <Icon color=\"action\">expand_less</Icon> : <Icon color=\"action\">expand_more</Icon>}\n                </ListItem>\n                <Collapse in={isOpen} unmountOnExit>\n                    <List component=\"div\" disablePadding className={classes.nestedList}>\n                        {canvasAvailable.map(canvas => (\n                            <React.Fragment key={canvas}>\n                                <ListItem>\n                                    <ListItemText primary={t('layout.size.width.' + canvas)} />\n                                    <TextField\n                                        value={param.svgWidth[canvas].toString()}\n                                        onChange={e =>\n                                            !isNaN(Number(e.target.value)) &&\n                                            dispatch({\n                                                type: 'SET_WIDTH',\n                                                targetId: canvas,\n                                                value: Number(e.target.value),\n                                            })\n                                        }\n                                        className={classes.textField}\n                                        InputProps={{\n                                            endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n                                        }}\n                                    />\n                                </ListItem>\n                                <Divider variant=\"middle\" />\n                            </React.Fragment>\n                        ))}\n                        <ListItem>\n                            <ListItemText primary={t('layout.size.height')} />\n                            <TextField\n                                value={param.svg_height.toString()}\n                                onChange={e =>\n                                    !isNaN(Number(e.target.value)) &&\n                                    dispatch({ type: 'SET_HEIGHT', value: Number(e.target.value) })\n                                }\n                                className={classes.textField}\n                                InputProps={{\n                                    endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n                                }}\n                            />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [JSON.stringify(param.svgWidth), param.svg_height, isOpen, classes.nestedList]\n    );\n};\n\nconst YLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = useContext(ParamContext);\n\n    return useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>vertical_align_center</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.y')} />\n                <Slider\n                    className={classes.slider}\n                    value={param.y_pc}\n                    onChange={(_, value) => dispatch({ type: 'SET_Y', value: value as number })}\n                    step={0.01}\n                    marks={[\n                        { value: 0, label: '0%' },\n                        { value: 100, label: '100%' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.y_pc, classes.slider]\n    );\n};\n\nconst BranchSpacingLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = useContext(ParamContext);\n\n    return useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>format_line_spacing</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.branchSpacing')} />\n                <Slider\n                    className={classes.slider}\n                    value={param.branch_spacing}\n                    onChange={(_, value) => dispatch({ type: 'SET_BRANCH_SPACING', value: value as number })}\n                    step={0.01}\n                    marks={[\n                        { value: 0, label: '0px' },\n                        { value: 100, label: '100px' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.branch_spacing, classes.slider]\n    );\n};\n\nconst PaddingLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = useContext(ParamContext);\n\n    return useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>stay_current_landscape</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('layout.padding')} />\n                <Slider\n                    className={classes.slider}\n                    value={param.padding}\n                    onChange={(_, value) => dispatch({ type: 'SET_PADDING', value: value as number })}\n                    step={0.01}\n                    max={50}\n                    marks={[\n                        { value: 0, label: '0%' },\n                        { value: 50, label: '50%' },\n                    ]}\n                    valueLabelDisplay=\"auto\"\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.padding, classes.slider]\n    );\n};\n","import React, { useContext } from 'react';\n\nimport { Grid, Paper, List, LinearProgress } from '@material-ui/core';\n\nimport LayoutCommon from './common';\nimport { CanvasContext } from '../../context';\nconst LayoutGZMTR = React.lazy(() => import(/* webpackChunkName: \"panelLayoutGZMTR\" */ './gzmtr'));\n\nexport default React.memo(function LayoutPanel() {\n    const { rmgStyle } = useContext(CanvasContext);\n    return (\n        <Grid container spacing={3} justify=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} sm={10} md={7} lg={5}>\n                <Paper>\n                    <List component=\"div\" disablePadding>\n                        <LayoutCommon />\n                        {rmgStyle === 'gzmtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <LayoutGZMTR />\n                            </React.Suspense>\n                        )}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n});\n\n// export default LayoutPanel;\n","import Panel from './panel';\n\nexport default Panel;"],"sourceRoot":""}