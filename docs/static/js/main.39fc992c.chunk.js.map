{"version":3,"sources":["constants/constants.ts","../external \"React\"","../external \"MaterialUI\"","redux/param/action.ts","redux/app/action.ts","../external \"ReactRedux\"","../external \"ReactI18next\"","../external \"ReactRouterDOM\"","methods.ts","../external \"Redux\"","context.ts","utils.ts","../external \"i18next\"","constants/city-config.ts","../external \"ReactDOM\"","../external \"i18nextXHRBackend\"","../external \"i18nextBrowserLanguageDetector\"","../external \"ReduxThunk\"","i18n.ts","app-appbar.tsx","error-boundary.tsx","svgs/svg.tsx","svgs/index.ts","panels/panels.tsx","panels/index.tsx","App.tsx","serviceWorker.ts","util/storage/storageService.ts","util/storage/storageLocalStorage.ts","util/storage/index.ts","redux/app/reducer.ts","redux/param/reducer.ts","redux/index.ts","index.tsx","util/auto-save-scheduler.ts"],"names":["LoadingStatus","RmgStyle","CanvasType","Direction","ShortDirection","BranchStyle","MonoColour","Services","Facilities","PanelTypeGZMTR","PanelTypeShmetro","LanguageCode","AllCanvas","canvasConfig","MTR","Destination","RailMap","GZMTR","RunIn","SHMetro","module","exports","React","MaterialUI","SET_FULL_PARAM","SET_SVG_HEIGHT","SET_SVG_WIDTH","SET_Y_PERCENTAGE","SET_BRANCH_SPACING","SET_PADDING_PERCENTAGE","SET_DIRECTION_INDICATOR_X","SET_DIRECTION_INDICATOR_Y","SET_THEME","SET_LINE_NAME","SET_DIRECTION","SET_PLATFORM","SET_LINE_NUM","SET_PSD_NUM","SET_PANEL_TYPE","SET_NOTES","SET_NAME_POSITION","SET_CUSTOMISED_MTR_DESTINATION","setFullParam","fullParam","type","setSvgHeight","svgHeight","setSvgWidth","svgWidth","canvas","setYPercentage","yPercentage","setBranchSpacing","branchSpacing","setPaddingPercentage","paddingPercentage","setDirectionIndicatorX","directionIndicatorX","setDirectionIndicatorY","directionIndicatorY","setTheme","theme","setLineName","lineName","setDirection","direction","setPlatform","platform","setLineNum","lineNum","setPsdNum","psdNum","setPanelType","panelType","setNotes","notes","addNote","dispatch","getState","param","notesGZMTR","concat","updateNote","index","updatedNote","map","originalNote","idx","removeNote","filter","_","setNamePosition","namePosition","staggerStationNames","isStagger","namePosMTR","flipStationNames","isFlip","setCustomisedMtrDestination","customisedMtrDestination","toggleLineNameBeforeDestination","isShow","customiseMTRDest","isLegacy","customiseDestinationName","customisedName","terminal","SET_RMG_STYLE","SET_CANVAS_SCALE","SET_CANVAS_SCALE_STATUS","SET_CANVAS_TO_SHOW","SET_CANVAS_TO_SHOW_STATUS","setRmgStyle","rmgStyle","setCanvasScale","canvasScale","setCanvasScaleStatus","canvasScaleStatus","zoomIn","a","loading","newScale","Number","app","toFixed","window","rmgStorage","writeFile","toString","loaded","failed","zoomOut","setCanvasToShow","canvasToShow","setCanvasToShowStatus","canvasToShowStatus","selectCanvas","ReactRedux","ReactI18next","ReactRouterDOM","getYShareMTR","stnId","stnList","includes","parents","length","children","stnPred","indexOf","getBranches","console","log","stack","branches","branchCount","curId","shift","prevId","slice","reverse","push","branchNextId","branch","right","left","getRoutes","useTpo","useState","tpo","setTpo","useEffect","res","reduce","acc","cur","Redux","ParamContext","createContext","paramReducer","state","action","data","key","svg_height","value","targetId","y_pc","branch_spacing","padding","direction_gz_x","direction_gz_y","line_name","name","platform_num","checked","line_num","num","psd_num","info_panel_type","variant","i","note","current_stn_idx","stn_list","Object","keys","id","lineend","linestart","secondaryName","transfer","info","setIdx","nextInfo","infos","intIdx","int","j","k","undefined","osi_names","tick_direc","paid_area","isPaid","branchType","first","facility","services","Array","from","isChecked","Set","add","serviceId","s","updateParam","dest_legacy","fontZH","fontEN","weightZH","weightEN","entries","stnInfo","style","interchange","arr","forEach","intInfo","splice","change_type","split","usage","destination","svg_dest_width","runin","railmap","svg_width","char_form","show_outer","strip_pc","txt_bg_gap","txt_flip","join","getTransText2","obj","langs","l","English","formatStnName","replace","i18next","CityCode","cityList","Barcelona","country","en","Beijing","zh","Changsha","Chengdu","Chongqing","Dongguan","Edinburgh","ga","Foshan","Glasgow","Guangzhou","Hangzhou","HongKong","Kansai","ja","Kaohsiung","London","Macao","pt","Madrid","Nanjing","NewTaipei","Osaka","Oslo","Paris","Qingdao","SanFrancisco","Seoul","ko","Shanghai","Shenzhen","Singapore","Stockholm","Taipei","Tianjin","Tokyo","Toronto","TyneAndWear","Xian","Other","ReactDOM","i18nextXHRBackend","i18nextBrowserLanguageDetector","ReduxThunk","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","default","backend","loadPath","process","interpolation","escapeValue","then","t","document","title","documentElement","setAttribute","language","useStyles","makeStyles","createStyles","rootLight","backgroundColor","palette","primary","main","rootDark","background","paper","flexGrow","color","menuButton","AppAppBar","useTranslation","classes","prefersDarkMode","useMediaQuery","position","className","CanvasToggle","useDispatch","useSelector","store","canvasButtonEl","setCanvasButtonEl","handleClick","onClick","e","currentTarget","anchorEl","open","Boolean","onClose","c","margin","ZoomToggles","ErrorBoundary","props","hasError","error","errorInfo","this","Component","root","display","flexDirection","overflowX","content","flex","border","SVGs","svgWidths","sharedProps","useCallback","xmlns","xmlnsXlink","height","viewBox","colorInterpolationFilters","JSON","stringify","values","path","StyleSpecificSVGs","canvasAvailable","canvasList","svgProps","to","memo","getElementById","href","Suspense","fallback","fill","width","strokeWidth","stroke","RunInGZMTR","lazy","RailMapGZMTR","DestinationMTR","RailMapMTR","DestinationSHMetro","RunInSHMetro","RailMapSHMetro","PanelSave","PanelLayout","PanelDesign","PanelStations","PanelInfo","breakpoints","down","typography","tab","up","justifyContent","minWidth","minHeight","marginBottom","paddingLeft","tabs","overflow","scrollbarWidth","WebkitOverflowScrolling","tabpanel","spacing","paddingBottom","alignItems","PanelTab","useTheme","isMobile","setValue","tabNav","component","orientation","indicatorColor","textColor","onChange","val","scrollButtons","label","icon","role","panel","Panel","darkTheme","createMuiTheme","secondary","overrides","MuiDialog","lightTheme","light","App","basename","AppBody","useReducer","parse","localStorage","rmgParam","paramString","deps","o","useMemo","routes","Provider","overflowY","location","hostname","match","StorageLocalStorage","currentBusyFilename","warn","alert","Error","setItem","removeItem","filename","contents","getItem","indexedDB","Promise","resolve","request","onerror","err","onsuccess","initialState","white","gz1","rootReducer","combineReducers","createStore","applyMiddleware","thunk","navigator","serviceWorker","ready","registration","unregister","catch","message","head","append","tag","link","createElement","rel","getRmgStorage","readFile","updatedParam","canvasScaleString","rmgStore","setInterval"],"mappings":"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","file":"static/js/main.39fc992c.chunk.js","sourcesContent":["import { CityCode } from './city-config';\n\nexport enum LoadingStatus {\n    init = 'init',\n    loading = 'loading',\n    loaded = 'loaded',\n    failed = 'failed',\n}\n\nexport enum RmgStyle {\n    MTR = 'mtr',\n    GZMTR = 'gzmtr',\n    SHMetro = 'shmetro',\n}\n\nexport enum CanvasType {\n    Destination = 'destination',\n    RunIn = 'runin',\n    RailMap = 'railmap',\n}\n\nexport const AllCanvas = 'all';\n\nexport const canvasConfig: { [s in RmgStyle]: CanvasType[] } = {\n    [RmgStyle.MTR]: [CanvasType.Destination, CanvasType.RailMap],\n    [RmgStyle.GZMTR]: [CanvasType.RunIn, CanvasType.RailMap],\n    [RmgStyle.SHMetro]: [CanvasType.Destination, CanvasType.RunIn, CanvasType.RailMap],\n};\n\n/**\n * @property {string} 0 - Chinese characters\n * @property {string} 1 - Latin characters\n */\nexport type Name = [string, string];\n\nexport enum Direction {\n    left = 'left',\n    right = 'right',\n}\n\nexport enum ShortDirection {\n    left = 'l',\n    right = 'r',\n}\n\nexport enum BranchStyle {\n    through = 'through',\n    nonThrough = 'nonthrough',\n}\n\n/**\n * Information of branch on both side.\n * @property 0 - branch type\n * @property 1 - ID of the first station of the branch (should also be one of the station's parents/children) or empty\n */\nexport type BranchInfo = Record<Direction, [BranchStyle, string] | []>;\n\nexport enum MonoColour {\n    black = '#000',\n    white = '#fff',\n}\n\nexport type ColourHex = `#${string}`;\n\n/**\n * Colour theme of line, derived from `LineEntry`.\n * @property 0 - city id\n * @property 1 - line id\n * @property 2 - background colour\n * @property 3 - foreground colour\n */\nexport type Theme = [CityCode, string, ColourHex, MonoColour];\n\nexport type InterchangeInfo = [...Theme, ...Name];\n\nexport interface StationTransfer {\n    /**\n     * Direction of text/tick of interchanges.\n     */\n    tick_direc: ShortDirection;\n    /**\n     * Flag of paid area within out-of-station interchange.\n     */\n    paid_area: boolean;\n    /**\n     * Array of name (in two languages) of all out-of-station interchange stations.\n     */\n    osi_names: Name[];\n    /**\n     * Array of arrays of interchange info.\n     * @property 0 - array of within-station interchange info\n     * @property remaining - arrays of out-of-station interchange info (from the nearest to the furthest station)\n     */\n    info: InterchangeInfo[][];\n}\n\nexport enum Services {\n    local = 'local',\n    express = 'express',\n    direct = 'direct',\n}\n\nexport enum Facilities {\n    airport = 'airport',\n    disney = 'disney',\n    hsr = 'hsr',\n    none = '',\n}\n\nexport interface StationInfo {\n    /**\n     * Station name in two languages.\n     */\n    name: Name;\n    secondaryName: false | Name;\n    /**\n     * Station number. (GZMTR specific)\n     */\n    num: string;\n    /**\n     * Dictionary of the information of branch on the station's both side.\n     */\n    branch: BranchInfo;\n    /**\n     * Array of parents' IDs.\n     */\n    parents: string[];\n    /**\n     * Array of children's IDs.\n     */\n    children: string[];\n    /**\n     * Detail of interchanges.\n     */\n    transfer: StationTransfer;\n    /**\n     * Array of services at this station.\n     */\n    services: Services[];\n    /**\n     * Facility near the station\n     */\n    facility: Facilities;\n}\n\nexport type StationDict = Record<string, StationInfo>;\n\nexport enum PanelTypeGZMTR {\n    gz1 = 'gz1',\n    gz28 = 'gz28',\n    gz2otis = 'gz2otis',\n    gz3 = 'gz3',\n    gz4 = 'gz4',\n    gz5 = 'gz5',\n    gz1421 = 'gz1421',\n    gz6 = 'gz6',\n    gzgf = 'gzgf',\n}\n\nexport enum PanelTypeShmetro {\n    sh = 'sh',\n    sh2020 = 'sh2020',\n}\n\n/**\n * Dictionary of configuration parameters for RMG, stored in `localStorage` as string.\n */\nexport interface RMGParam {\n    svgWidth: Record<CanvasType, number>;\n    svg_height: number;\n    /**\n     * Vertical position (in percentage) of line.\n     */\n    y_pc: number;\n    /**\n     * Left and right margin of line (in percentage).\n     */\n    padding: number;\n    /**\n     * Branch spacing (in pixels) of line.\n     */\n    branch_spacing: number;\n    direction: ShortDirection;\n    platform_num: string | false;\n    theme: Theme;\n    line_name: Name;\n    current_stn_idx: keyof StationDict;\n    /**\n     * Key-value pairs of the information of each station.\n     */\n    stn_list: StationDict;\n    namePosMTR: {\n        /**\n         * Flag of whether station names staggered. If false, place name above line.\n         */\n        isStagger: boolean;\n        /**\n         * Flag of flipping station names.\n         * When `isStagger === false`, names are above line if `isFlip === false`.\n         */\n        isFlip: boolean;\n    };\n    /**\n     * Customise destination sign of MTR style.\n     */\n    customiseMTRDest: {\n        /**\n         * Flag of legacy style. (Show line name before 'to').\n         */\n        isLegacy: boolean;\n        /**\n         * Customise terminal stations.\n         */\n        terminal: false | Name;\n    };\n    line_num: string;\n    psd_num: string;\n    info_panel_type: PanelTypeGZMTR | PanelTypeShmetro;\n    notesGZMTR: Note[];\n    direction_gz_x: number;\n    direction_gz_y: number;\n}\n\n/**\n * Array of a single note entry for Guangzhou Metro style.\n * @property 0 - text in Chinese characters\n * @property 1 - text in Latin characters\n * @property 2 - percentage of horizontal position\n * @property 3 - percentage of vertical position\n * @property 4 - flag of showing border\n */\nexport type Note = [...Name, number, number, boolean];\n\nexport enum LanguageCode {\n    Catalan = 'ca',\n    English = 'en',\n    Spanish = 'es',\n    French = 'fr',\n    Gaelic = 'ga',\n    Japanese = 'ja',\n    Korean = 'ko',\n    Norwegian = 'no',\n    Portuguese = 'pt',\n    Swedish = 'sv',\n    Chinese = 'zh',\n    ChineseCN = 'zh-CN',\n    ChineseSimp = 'zh-Hans',\n    ChineseTrad = 'zh-Hant',\n    ChineseHK = 'zh-HK',\n    ChineseTW = 'zh-TW',\n}\n\nexport type Translation = { [l in LanguageCode]?: string };\n\nexport interface PaletteEntry {\n    /**\n     * ID of line.\n     */\n    id: string;\n    /**\n     * Key-value pairs of multi-lingual names of the line.\n     */\n    name: Translation;\n    /**\n     * Background colour (in #HEX).\n     */\n    colour: ColourHex;\n    /**\n     * Foreground colour. Mandatory field if foreground colour is black.\n     */\n    fg?: MonoColour;\n    /**\n     * Pantone colour. If defined, colour is converted with Pantone Color Finder (https://www.pantone.com/color-finder).\n     */\n    pantone?: string;\n}","module.exports = React;","module.exports = MaterialUI;","import {\n    CanvasType,\n    Name,\n    Note,\n    PanelTypeGZMTR,\n    PanelTypeShmetro,\n    RMGParam,\n    ShortDirection,\n    Theme,\n} from '../../constants/constants';\nimport { Dispatch } from 'redux';\nimport { RootState } from '../index';\n\nexport const SET_FULL_PARAM = 'SET_FULL_PARAM';\n\n// layout\nexport const SET_SVG_HEIGHT = 'SET_SVG_HEIGHT';\nexport const SET_SVG_WIDTH = 'SET_SVG_WIDTH';\nexport const SET_Y_PERCENTAGE = 'SET_Y_PERCENTAGE';\nexport const SET_BRANCH_SPACING = 'SET_BRANCH_SPACING';\nexport const SET_PADDING_PERCENTAGE = 'SET_PADDING_PERCENTAGE';\nexport const SET_DIRECTION_INDICATOR_X = 'SET_DIRECTION_INDICATOR_X';\nexport const SET_DIRECTION_INDICATOR_Y = 'SET_DIRECTION_INDICATOR_Y';\n\n// design\nexport const SET_THEME = 'SET_THEME';\nexport const SET_LINE_NAME = 'SET_LINE_NAME';\nexport const SET_DIRECTION = 'SET_DIRECTION';\nexport const SET_PLATFORM = 'SET_PLATFORM';\nexport const SET_LINE_NUM = 'SET_LINE_NUM';\nexport const SET_PSD_NUM = 'SET_PSD_NUM';\nexport const SET_PANEL_TYPE = 'SET_PANEL_TYPE';\nexport const SET_NOTES = 'SET_NOTES';\nexport const SET_NAME_POSITION = 'SET_NAME_POSITION';\nexport const SET_CUSTOMISED_MTR_DESTINATION = 'SET_CUSTOMISED_MTR_DESTINATION';\n\nexport interface setFullParamAction {\n    type: typeof SET_FULL_PARAM;\n    fullParam: RMGParam;\n}\n\nexport interface setSvgHeightAction {\n    type: typeof SET_SVG_HEIGHT;\n    svgHeight: number;\n}\n\nexport interface setSvgWidthAction {\n    type: typeof SET_SVG_WIDTH;\n    svgWidth: number;\n    canvas: CanvasType;\n}\n\nexport interface setYPercentageAction {\n    type: typeof SET_Y_PERCENTAGE;\n    yPercentage: number;\n}\n\nexport interface setBranchSpacingAction {\n    type: typeof SET_BRANCH_SPACING;\n    branchSpacing: number;\n}\n\nexport interface setPaddingPercentageAction {\n    type: typeof SET_PADDING_PERCENTAGE;\n    paddingPercentage: number;\n}\n\nexport interface setDirectionIndicatorXAction {\n    type: typeof SET_DIRECTION_INDICATOR_X;\n    directionIndicatorX: number;\n}\n\nexport interface setDirectionIndicatorYAction {\n    type: typeof SET_DIRECTION_INDICATOR_Y;\n    directionIndicatorY: number;\n}\n\nexport interface setThemeAction {\n    type: typeof SET_THEME;\n    theme: Theme;\n}\n\nexport interface setLineNameAction {\n    type: typeof SET_LINE_NAME;\n    lineName: Name;\n}\n\nexport interface setDirectionAction {\n    type: typeof SET_DIRECTION;\n    direction: ShortDirection;\n}\n\nexport interface setPlatformAction {\n    type: typeof SET_PLATFORM;\n    platform: string | false;\n}\n\nexport interface setLineNumAction {\n    type: typeof SET_LINE_NUM;\n    lineNum: string;\n}\n\nexport interface setPsdNumAction {\n    type: typeof SET_PSD_NUM;\n    psdNum: string;\n}\n\nexport interface setPanelTypeAction {\n    type: typeof SET_PANEL_TYPE;\n    panelType: PanelTypeGZMTR | PanelTypeShmetro;\n}\n\nexport interface setNotesAction {\n    type: typeof SET_NOTES;\n    notes: Note[];\n}\n\nexport interface setNamePositionAction {\n    type: typeof SET_NAME_POSITION;\n    namePosition: RMGParam['namePosMTR'];\n}\n\nexport interface setCustomisedMtrDestinationAction {\n    type: typeof SET_CUSTOMISED_MTR_DESTINATION;\n    customisedMtrDestination: RMGParam['customiseMTRDest'];\n}\n\nexport const setFullParam = (fullParam: RMGParam): setFullParamAction => {\n    return { type: SET_FULL_PARAM, fullParam };\n};\n\nexport const setSvgHeight = (svgHeight: number): setSvgHeightAction => {\n    return { type: SET_SVG_HEIGHT, svgHeight };\n};\n\nexport const setSvgWidth = (svgWidth: number, canvas: CanvasType): setSvgWidthAction => {\n    return { type: SET_SVG_WIDTH, svgWidth, canvas };\n};\n\nexport const setYPercentage = (yPercentage: number): setYPercentageAction => {\n    return { type: SET_Y_PERCENTAGE, yPercentage };\n};\n\nexport const setBranchSpacing = (branchSpacing: number): setBranchSpacingAction => {\n    return { type: SET_BRANCH_SPACING, branchSpacing };\n};\n\nexport const setPaddingPercentage = (paddingPercentage: number): setPaddingPercentageAction => {\n    return { type: SET_PADDING_PERCENTAGE, paddingPercentage };\n};\n\nexport const setDirectionIndicatorX = (directionIndicatorX: number): setDirectionIndicatorXAction => {\n    return { type: SET_DIRECTION_INDICATOR_X, directionIndicatorX };\n};\n\nexport const setDirectionIndicatorY = (directionIndicatorY: number): setDirectionIndicatorYAction => {\n    return { type: SET_DIRECTION_INDICATOR_Y, directionIndicatorY };\n};\n\nexport const setTheme = (theme: Theme): setThemeAction => {\n    return { type: SET_THEME, theme };\n};\n\nexport const setLineName = (lineName: Name): setLineNameAction => {\n    return { type: SET_LINE_NAME, lineName };\n};\n\nexport const setDirection = (direction: ShortDirection): setDirectionAction => {\n    return { type: SET_DIRECTION, direction };\n};\n\nexport const setPlatform = (platform: string | false): setPlatformAction => {\n    return { type: SET_PLATFORM, platform };\n};\n\nexport const setLineNum = (lineNum: string): setLineNumAction => {\n    return { type: SET_LINE_NUM, lineNum };\n};\n\nexport const setPsdNum = (psdNum: string): setPsdNumAction => {\n    return { type: SET_PSD_NUM, psdNum };\n};\n\nexport const setPanelType = (panelType: PanelTypeShmetro | PanelTypeGZMTR): setPanelTypeAction => {\n    return { type: SET_PANEL_TYPE, panelType };\n};\n\nconst setNotes = (notes: Note[]): setNotesAction => {\n    return { type: SET_NOTES, notes };\n};\n\nexport const addNote = () => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const notes = getState().param.notesGZMTR;\n        dispatch(setNotes(notes.concat([['', '', 0, 0, false]])));\n    };\n};\n\nexport const updateNote = (index: number, updatedNote: Note) => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const notes = getState().param.notesGZMTR;\n        dispatch(setNotes(notes.map((originalNote, idx) => (idx === index ? updatedNote : originalNote))));\n    };\n};\n\nexport const removeNote = (index: number) => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const notes = getState().param.notesGZMTR;\n        dispatch(setNotes(notes.filter((_, idx) => idx !== index)));\n    };\n};\n\nconst setNamePosition = (namePosition: RMGParam['namePosMTR']): setNamePositionAction => {\n    return { type: SET_NAME_POSITION, namePosition };\n};\n\nexport const staggerStationNames = (isStagger: boolean) => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const namePosition = getState().param.namePosMTR;\n        dispatch(setNamePosition({ ...namePosition, isStagger }));\n    };\n};\n\nexport const flipStationNames = () => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const namePosition = getState().param.namePosMTR;\n        dispatch(setNamePosition({ ...namePosition, isFlip: !namePosition.isFlip }));\n    };\n};\n\nconst setCustomisedMtrDestination = (\n    customisedMtrDestination: RMGParam['customiseMTRDest']\n): setCustomisedMtrDestinationAction => {\n    return { type: SET_CUSTOMISED_MTR_DESTINATION, customisedMtrDestination };\n};\n\nexport const toggleLineNameBeforeDestination = (isShow: boolean) => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const customisedMtrDestination = getState().param.customiseMTRDest;\n        dispatch(setCustomisedMtrDestination({ ...customisedMtrDestination, isLegacy: isShow }));\n    };\n};\n\nexport const customiseDestinationName = (customisedName: Name | false) => {\n    return (dispatch: Dispatch, getState: () => RootState) => {\n        const customisedMtrDestination = getState().param.customiseMTRDest;\n        dispatch(setCustomisedMtrDestination({ ...customisedMtrDestination, terminal: customisedName }));\n    };\n};\n","import { AllCanvas, CanvasType, LoadingStatus, RmgStyle } from \"../../constants/constants\";\nimport { Dispatch } from 'redux';\nimport { RootState } from '../index';\n\nexport const SET_RMG_STYLE = 'SET_RMG_STYLE';\nexport const SET_CANVAS_SCALE = 'SET_CANVAS_SCALE';\nexport const SET_CANVAS_SCALE_STATUS = 'SET_CANVAS_SCALE_STATUS';\nexport const SET_CANVAS_TO_SHOW = 'SET_CANVAS_TO_SHOW';\nexport const SET_CANVAS_TO_SHOW_STATUS = 'SET_CANVAS_TO_SHOW_STATUS';\n\nexport interface setRmgStyleAction {\n    type: typeof SET_RMG_STYLE;\n    rmgStyle: RmgStyle;\n}\n\nexport interface setCanvasScaleAction {\n    type: typeof SET_CANVAS_SCALE;\n    canvasScale: number;\n}\n\nexport interface setCanvasScaleStatusAction {\n    type: typeof SET_CANVAS_SCALE_STATUS;\n    canvasScaleStatus: LoadingStatus;\n}\n\nexport interface setCanvasToShowAction {\n    type: typeof SET_CANVAS_TO_SHOW;\n    canvasToShow: CanvasType | typeof AllCanvas;\n}\n\nexport interface setCanvasToShowStatusAction {\n    type: typeof SET_CANVAS_TO_SHOW_STATUS;\n    canvasToShowStatus: LoadingStatus;\n}\n\nexport const setRmgStyle = (rmgStyle: RmgStyle) => {\n    return { type: SET_RMG_STYLE, rmgStyle } as setRmgStyleAction;\n};\n\nexport const setCanvasScale = (canvasScale: number) => {\n    return { type: SET_CANVAS_SCALE, canvasScale } as setCanvasScaleAction;\n};\n\nconst setCanvasScaleStatus = (canvasScaleStatus: LoadingStatus) => {\n    return { type: SET_CANVAS_SCALE_STATUS, canvasScaleStatus } as setCanvasScaleStatusAction;\n};\n\nexport const zoomIn = () => {\n    return async (dispatch: Dispatch, getState: () => RootState) => {\n        dispatch(setCanvasScaleStatus(LoadingStatus.loading));\n        try {\n            const newScale = Number((getState().app.canvasScale + 0.1).toFixed(1));\n            dispatch(setCanvasScale(newScale));\n            await window.rmgStorage.writeFile('rmgScale', newScale.toString());\n            dispatch(setCanvasScaleStatus(LoadingStatus.loaded));\n        } catch (err) {\n            dispatch(setCanvasScaleStatus(LoadingStatus.failed));\n        }\n    };\n};\n\nexport const zoomOut = () => {\n    return async (dispatch: Dispatch, getState: () => RootState) => {\n        dispatch(setCanvasScaleStatus(LoadingStatus.loading));\n        try {\n            const { canvasScale } = getState().app;\n            const newScale =\n                Number(canvasScale.toFixed(1)) <= 0.1\n                    ? Number(canvasScale.toFixed(1))\n                    : Number((canvasScale - 0.1).toFixed(1));\n            dispatch(setCanvasScale(newScale));\n            await window.rmgStorage.writeFile('rmgScale', newScale.toString());\n            dispatch(setCanvasScaleStatus(LoadingStatus.loaded));\n        } catch (err) {\n            dispatch(setCanvasScaleStatus(LoadingStatus.failed));\n        }\n    };\n};\n\nexport const setCanvasToShow = (canvasToShow: CanvasType | typeof AllCanvas) => {\n    return { type: SET_CANVAS_TO_SHOW, canvasToShow } as setCanvasToShowAction;\n};\n\n\nconst setCanvasToShowStatus = (canvasToShowStatus: LoadingStatus) => {\n    return { type: SET_CANVAS_TO_SHOW_STATUS, canvasToShowStatus } as setCanvasToShowStatusAction;\n};\n\nexport const selectCanvas = (canvas: CanvasType | typeof AllCanvas) => {\n    return async (dispatch: Dispatch) => {\n        dispatch(setCanvasToShowStatus(LoadingStatus.loading));\n        try {\n            dispatch(setCanvasToShow(canvas));\n            await window.rmgStorage.writeFile('rmgCanvas', canvas);\n            dispatch(setCanvasToShowStatus(LoadingStatus.loaded));\n        } catch (err) {\n            dispatch(setCanvasToShowStatus(LoadingStatus.failed));\n        }\n    }\n}","module.exports = ReactRedux;","module.exports = ReactI18next;","module.exports = ReactRouterDOM;","import React from 'react';\nimport { StationDict } from './constants/constants';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length === 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) === 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n\n/**\n * Getter of all branches (支線段) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui]\n * [2]: [University, Racecourse, Sha Tin]\n * /\n */\nexport const getBranches = (stnList: StationDict) => {\n    console.log('computing branches');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    let branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push([curId]);\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                            // all branching out nodes are added to stack in the first loop\n                        }\n                    }\n                    curId = children.filter(stnId => stnId !== branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1]) {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Getter of all routes (行車交路) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, Sheung Shui, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui, ..., Hung Hom, LineEnd]\n * [2]: [LineStart, Lo Wu, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * [3]: [LineStart, Lok Ma Chau, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * /\n */\nexport const getRoutes = (stnList: StationDict) => {\n    console.log('computing routes');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    let branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push(branches[branchCount].slice());\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                        }\n                        // branches.push([prevId]);\n                    }\n                    // stack.push(branchNextId);\n                    // }\n                    curId = children.filter(stnId => stnId !== branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1] && stnList[curId].branch.left[0] === 'nonthrough') {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Memo of topological ordering for all stations by stacking all branches into an one-dimensional array.\n * @param branches Branches from `useBranches` memo\n */\nexport const useTpo = (branches: string[][]) => {\n    const [tpo, setTpo] = React.useState([] as string[]);\n\n    React.useEffect(\n        () => {\n            console.log('computing tpo');\n            if (branches.length === 1) {\n                setTpo(branches[0].slice(1, -1));\n                return;\n            } else {\n                let res = branches\n                    .reduce(\n                        (acc, cur) => {\n                            let idx = acc.indexOf(cur.slice(-1)[0]);\n                            return acc.slice(0, idx).concat(cur.slice(1), acc.slice(idx + 1));\n                        },\n                        ['lineend']\n                    )\n                    .slice(0, -1);\n                setTpo(res);\n                return;\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [branches.toString()]\n    );\n\n    return tpo;\n};\n","module.exports = Redux;","import React, { createContext } from 'react';\nimport {\n    CanvasType,\n    RMGParam,\n    ShortDirection,\n    Theme,\n    PanelTypeShmetro,\n    PanelTypeGZMTR,\n    StationDict,\n    InterchangeInfo,\n    Facilities,\n    Services,\n    Note,\n    Name,\n    MonoColour,\n} from './constants/constants';\n\ninterface IParamContext {\n    param: RMGParam;\n    dispatch: React.Dispatch<ReducerAction>;\n    branches: string[][];\n    routes: string[][];\n    deps: string;\n    tpo: string[];\n}\n\nexport const ParamContext = createContext<IParamContext>({} as IParamContext);\n\ntype ReducerAction =\n    | { type: 'GLOBAL'; data: RMGParam }\n    | {\n          type: 'ANY';\n          key: string;\n          data: any;\n      }\n    | {\n          type: 'SET_HEIGHT';\n          value: number;\n      }\n    | {\n          type: 'SET_WIDTH';\n          targetId: CanvasType;\n          value: number;\n      }\n    | {\n          type: 'SET_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_BRANCH_SPACING';\n          value: number;\n      }\n    | {\n          type: 'SET_PADDING';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_X';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_LINE_NAME';\n          name: Name;\n      }\n    | {\n          type: 'SET_THEME';\n          theme: [string, string, string, MonoColour];\n      }\n    | {\n          type: 'SET_DIRECTION';\n      }\n    | {\n          type: 'SET_PLATFORM';\n          platform: string | false;\n      }\n    | {\n          type: 'SET_TEXT_STAGGER';\n          checked: boolean;\n      }\n    | {\n          type: 'SET_TEXT_FLIP';\n      }\n    | {\n          type: 'SET_DEST_LEGACY';\n          isLegacy: boolean;\n      }\n    | {\n          type: 'SET_TERMINAL_OVERRIDE';\n          terminal: Name | false;\n      }\n    | {\n          type: 'SET_LINE_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PSD_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PANEL_TYPE';\n          variant: PanelTypeGZMTR | PanelTypeShmetro;\n      }\n    | {\n          type: 'ADD_NOTE_GZMTR';\n      }\n    | {\n          type: 'REMOVE_NOTE_GZMTR';\n          idx: number;\n      }\n    | {\n          type: 'UPDATE_NOTE_GZMTR';\n          idx: number;\n          note: Note;\n      }\n    | {\n          type: 'SET_CURRENT_STATION';\n          stnId: string;\n      }\n    | {\n          type: 'REVERSE_STATIONS';\n      }\n    | {\n          type: 'UPDATE_STATION_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_SECONDARY_NAME';\n          stnId: string;\n          name: false | Name;\n      }\n    | {\n          type: 'UPDATE_STATION_NUM';\n          stnId: string;\n          num: string;\n      }\n    | {\n          type: 'ADD_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          info: InterchangeInfo;\n      }\n    | {\n          type: 'REMOVE_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          intIdx: number;\n      }\n    | {\n          type: 'UPDATE_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          intIdx: number;\n          info: InterchangeInfo;\n      }\n    | {\n          type: 'UPDATE_STATION_OSI_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_TICK_DIREC';\n          stnId: string;\n          direction: 'l' | 'r';\n      }\n    | {\n          type: 'UPDATE_STATION_PAID_AREA';\n          stnId: string;\n          isPaid: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_TYPE';\n          stnId: string;\n          direction: 'left' | 'right';\n          branchType: 'through' | 'nonthrough';\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_FIRST';\n          branches: [\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              },\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              }\n          ];\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_POS';\n          left: string;\n          right: string;\n      }\n    | {\n          type: 'UPDATE_STATION_FACILITY';\n          stnId: string;\n          facility: '' | 'airport' | 'hsr' | 'disney';\n      }\n    | {\n          type: 'UPDATE_STATION_SERVICES';\n          stnId: string;\n          serviceId: Services;\n          isChecked: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_LIST';\n          stnList: StationDict;\n      };\n\nexport const paramReducer = (state: RMGParam, action: ReducerAction): RMGParam => {\n    switch (action.type) {\n        case 'GLOBAL':\n            return action.data;\n        case 'ANY':\n            return {\n                ...state,\n                [action.key]: action.data,\n            };\n        case 'SET_HEIGHT':\n            return {\n                ...state,\n                svg_height: action.value,\n            };\n        case 'SET_WIDTH':\n            return {\n                ...state,\n                svgWidth: {\n                    ...state.svgWidth,\n                    [action.targetId]: action.value,\n                },\n            };\n        case 'SET_Y':\n            return {\n                ...state,\n                y_pc: action.value,\n            };\n        case 'SET_BRANCH_SPACING':\n            return {\n                ...state,\n                branch_spacing: action.value,\n            };\n        case 'SET_PADDING':\n            return {\n                ...state,\n                padding: action.value,\n            };\n        case 'SET_DIRECTION_GZ_X':\n            return {\n                ...state,\n                direction_gz_x: action.value,\n            };\n        case 'SET_DIRECTION_GZ_Y':\n            return {\n                ...state,\n                direction_gz_y: action.value,\n            };\n        case 'SET_LINE_NAME':\n            return {\n                ...state,\n                line_name: action.name,\n            };\n        case 'SET_THEME':\n            return {\n                ...state,\n                theme: action.theme as Theme,\n            };\n        case 'SET_DIRECTION':\n            return {\n                ...state,\n                direction: state.direction === ShortDirection.left ? ShortDirection.right : ShortDirection.left,\n            };\n        case 'SET_PLATFORM':\n            return {\n                ...state,\n                platform_num: action.platform,\n            };\n        case 'SET_TEXT_STAGGER':\n            return {\n                ...state,\n                namePosMTR: {\n                    ...state.namePosMTR,\n                    isStagger: action.checked,\n                },\n            };\n        case 'SET_TEXT_FLIP':\n            return {\n                ...state,\n                namePosMTR: {\n                    ...state.namePosMTR,\n                    isFlip: !state.namePosMTR.isFlip,\n                },\n            };\n        case 'SET_DEST_LEGACY':\n            return {\n                ...state,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    isLegacy: action.isLegacy,\n                },\n            };\n        case 'SET_TERMINAL_OVERRIDE':\n            return {\n                ...state,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    terminal: action.terminal,\n                },\n            };\n        case 'SET_LINE_NUM':\n            return {\n                ...state,\n                line_num: action.num,\n            };\n        case 'SET_PSD_NUM':\n            return {\n                ...state,\n                psd_num: action.num,\n            };\n        case 'SET_PANEL_TYPE':\n            return {\n                ...state,\n                info_panel_type: action.variant as  PanelTypeGZMTR | PanelTypeShmetro,\n            };\n        case 'ADD_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.concat([['', '', 0, 0, false]]),\n            };\n        case 'REMOVE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.filter((_, i) => i !== action.idx),\n            };\n        case 'UPDATE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.map((note, i) => (i === action.idx ? action.note : note)),\n            };\n        case 'SET_CURRENT_STATION':\n            return {\n                ...state,\n                current_stn_idx: action.stnId,\n            };\n        case 'REVERSE_STATIONS':\n            return {\n                ...state,\n                stn_list: Object.keys(state.stn_list).reduce(\n                    (acc, stnId) => ({\n                        ...acc,\n                        [stnId]: (id => {\n                            switch (id) {\n                                case 'linestart':\n                                    return {\n                                        ...state.stn_list.lineend,\n                                        parents: [],\n                                        children: state.stn_list.lineend.parents.slice().reverse(),\n                                        branch: { left: [] as [], right: state.stn_list.lineend.branch.left },\n                                    };\n                                case 'lineend':\n                                    return {\n                                        ...state.stn_list.linestart,\n                                        parents: state.stn_list.linestart.children.slice().reverse(),\n                                        children: [],\n                                        branch: { left: state.stn_list.linestart.branch.right, right: [] as [] },\n                                    };\n                                default:\n                                    return {\n                                        ...state.stn_list[id],\n                                        parents: state.stn_list[id].children\n                                            .map(id =>\n                                                id === 'linestart' ? 'lineend' : id === 'lineend' ? 'linestart' : id\n                                            )\n                                            .reverse(),\n                                        children: state.stn_list[id].parents\n                                            .map(id =>\n                                                id === 'linestart' ? 'lineend' : id === 'lineend' ? 'linestart' : id\n                                            )\n                                            .reverse(),\n                                        branch: {\n                                            left: state.stn_list[id].branch.right,\n                                            right: state.stn_list[id].branch.left,\n                                        },\n                                    };\n                            }\n                        })(stnId),\n                    }),\n                    {} as StationDict\n                ),\n            };\n        case 'UPDATE_STATION_NAME':\n            // window.myLine.updateStnName(action.stnId, action.name);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        name: action.name,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_SECONDARY_NAME':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        secondaryName: action.name,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_NUM':\n            // (window.myLine as RMGLineGZ).updateStnNum(action.stnId, action.num);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        num: action.num,\n                    },\n                },\n            };\n        case 'ADD_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: (({ setIdx, info }) => {\n                                let nextInfo = state.stn_list[action.stnId].transfer.info.slice();\n                                nextInfo[setIdx] = (nextInfo[setIdx] || ([] as InterchangeInfo[])).concat([info]);\n                                return nextInfo;\n                            })(action),\n                        },\n                    },\n                },\n            };\n        case 'REMOVE_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: state.stn_list[action.stnId].transfer.info.map((infos, i) =>\n                                i === action.setIdx\n                                    ? infos.slice(0, action.intIdx).concat(infos.slice(action.intIdx + 1))\n                                    : infos\n                            ),\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: state.stn_list[action.stnId].transfer?.info.map((infos, i) =>\n                                i === action.setIdx\n                                    ? infos.map((int, j) =>\n                                          j === action.intIdx\n                                              ? ([0, 1, 2, 3, 4, 5].map(k =>\n                                                    action.info[k] === undefined ? int[k] : action.info[k]\n                                                ) as unknown as InterchangeInfo)\n                                              : int\n                                      )\n                                    : infos\n                            ),\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_OSI_NAME':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            osi_names: [action.name],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_TICK_DIREC':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            tick_direc: action.direction as ShortDirection,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_PAID_AREA':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            paid_area: action.isPaid,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_TYPE':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        branch: {\n                            ...state.stn_list[action.stnId].branch,\n                            [action.direction]: [\n                                action.branchType,\n                                state.stn_list[action.stnId].branch[action.direction][1],\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_FIRST':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.branches[0].stnId]: {\n                        ...state.stn_list[action.branches[0].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[0].stnId].branch,\n                            [action.branches[0].direction]: [\n                                state.stn_list[action.branches[0].stnId].branch[action.branches[0].direction][0],\n                                action.branches[0].first,\n                            ],\n                        },\n                    },\n                    [action.branches[1].stnId]: {\n                        ...state.stn_list[action.branches[1].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[1].stnId].branch,\n                            [action.branches[1].direction]: [\n                                state.stn_list[action.branches[1].stnId].branch[action.branches[1].direction][0],\n                                action.branches[1].first,\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_POS':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.left]: {\n                        ...state.stn_list[action.left],\n                        parents: state.stn_list[action.left].parents.slice().reverse(),\n                    },\n                    [action.right]: {\n                        ...state.stn_list[action.right],\n                        children: state.stn_list[action.right].children.slice().reverse(),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_FACILITY':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        facility: action.facility as Facilities,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_SERVICES':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        services: Array.from(\n                            action.isChecked\n                                ? new Set(state.stn_list[action.stnId].services).add(action.serviceId as Services)\n                                : state.stn_list[action.stnId].services.filter(s => s !== action.serviceId)\n                        ),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_LIST':\n            return {\n                ...state,\n                stn_list: action.stnList,\n            };\n        default:\n            return state;\n    }\n};\n","import { LanguageCode, Note, RmgStyle, StationInfo, Translation } from \"./constants/constants\";\n\nexport const updateParam = (param: { [x: string]: any }) => {\n    // Version 0.10\n    if (!('line_name' in param)) {\n        param.line_name = ['路線名', 'Name of Line'];\n    }\n    if (!('dest_legacy' in param)) {\n        param.dest_legacy = false;\n    }\n\n    // Version 0.11\n    delete param.fontZH;\n    delete param.fontEN;\n    delete param.weightZH;\n    delete param.weightEN;\n\n    // Version 0.12\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('branch' in stnInfo)) {\n            param.stn_list[stnId].branch = { left: [], right: [] };\n            if (stnInfo.children.length === 2) {\n                param.stn_list[stnId].branch.right = ['through', stnInfo.children[1]];\n            } else {\n                param.stn_list[stnId].branch.right = [];\n            }\n            if (stnInfo.parents.length === 2) {\n                param.stn_list[stnId].branch.left = ['through', stnInfo.parents[1]];\n            } else {\n                param.stn_list[stnId].branch.left = [];\n            }\n        }\n    }\n\n    // Version 1.2\n    if (!('psd_num' in param)) {\n        param.psd_num = '1';\n    } else {\n        param.psd_num = param.psd_num.toString();\n    }\n\n    if (!('line_num' in param)) {\n        param.line_num = '1';\n    }\n    delete param.style;\n    if (param.theme.length === 3) {\n        param.theme.push('#fff');\n    }\n\n    // Version 1.3\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('num' in stnInfo)) {\n            param.stn_list[stnId].num = '00';\n        }\n        if ('interchange' in stnInfo) {\n            stnInfo.interchange.map((arr: any) => {\n                return arr.forEach((intInfo: any) => {\n                    if (intInfo.length === 5) {\n                        intInfo.splice(3, 0, '#fff');\n                    }\n                });\n            });\n        }\n    }\n\n    // Version 1.5\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (stnInfo.change_type === 'osi22_end_p') {\n            param.stn_list[stnId].change_type = 'osi22_pr';\n        }\n        if (stnInfo.change_type === 'osi22_end_u') {\n            param.stn_list[stnId].change_type = 'osi22_ur';\n        }\n    }\n\n    // Version 2.1\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('interchange' in stnInfo)) {\n            param.stn_list[stnId].interchange = [[]];\n        }\n    }\n\n    // Version 1.4\n    // Version 2.2\n    // Version 2.3\n    if (!('info_panel_type' in param)) {\n        param.info_panel_type = 'gz28';\n    } else {\n        param.info_panel_type = (type => {\n            switch (type) {\n                case 'gz_1':\n                case 'panasonic':\n                    return 'gz28';\n                case 'gz_2':\n                    return 'gz6';\n                case 'gz_3':\n                    return 'gz3';\n                default:\n                    return type;\n            }\n        })(param.info_panel_type);\n    }\n\n    if (!('direction_gz_x' in param)) {\n        param.direction_gz_x = 50;\n    }\n    if (!('direction_gz_y' in param)) {\n        param.direction_gz_y = 70;\n    }\n\n    // Version 2.6\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('transfer' in stnInfo)) {\n            param.stn_list[stnId].transfer = {\n                // type: stnInfo.change_type?.split('_')[0] as 'none' | 'int2' | 'int3' | 'osi11' | 'osi12' | 'osi22',\n                tick_direc:\n                    stnInfo.change_type === 'none' || stnInfo.change_type === 'int2'\n                        ? 'r'\n                        : (stnInfo.change_type?.split('_')[1].split('').slice().reverse()[0] as 'l' | 'r'),\n                paid_area:\n                    stnInfo.change_type?.indexOf('osi') !== -1 ? stnInfo.change_type?.split('_')[1][0] === 'p' : true,\n                osi_names: stnInfo.change_type?.indexOf('osi') !== -1 ? [stnInfo.interchange[1][0]] : [],\n                info:\n                    stnInfo.interchange.length === 2\n                        ? [stnInfo.interchange[0], stnInfo.interchange[1].slice(1)]\n                        : stnInfo.interchange,\n            };\n        }\n        delete param.stn_list[stnId].change_type;\n        delete param.stn_list[stnId].interchange;\n    }\n\n    // Version 2.8\n    // Version 3.0\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('services' in stnInfo)) {\n            param.stn_list[stnId].services = ['local'];\n        }\n        if (!('facility' in stnInfo)) {\n            if ('usage' in stnInfo) {\n                param.stn_list[stnId].facility = stnInfo.usage;\n            } else {\n                param.stn_list[stnId].facility = '';\n            }\n        }\n        delete param.stn_list[stnId].usage;\n    }\n\n    // Version 3.4\n    if (!('customiseMTRDest' in param)) {\n        param.customiseMTRDest = { isLegacy: param.dest_legacy || false, terminal: false };\n    }\n    delete param.dest_legacy;\n\n    // Version 3.4\n    if (!('svgWidth' in param)) {\n        param.svgWidth = {\n            destination: param.svg_dest_width,\n            runin: param.svg_dest_width,\n            railmap: param.svg_width,\n        };\n    }\n    delete param.svg_width;\n    delete param.svg_dest_width;\n\n    if (!('notesGZMTR' in param)) {\n        param.notesGZMTR = [];\n    }\n\n    param.notesGZMTR = param.notesGZMTR?.map((note: any[]) =>\n        note.length === 4 ? note.concat([false]) : note\n    ) as Note[];\n\n    // Version 3.5.3\n    delete param.char_form;\n    delete param.show_outer;\n    delete param.strip_pc;\n    delete param.txt_bg_gap;\n\n    // Version 3.5.4\n    if (!('namePosMTR' in param)) {\n        param.namePosMTR = {\n            isStagger: true,\n            isFlip: param.txt_flip,\n        };\n    }\n    delete param.txt_flip;\n\n    // Version 3.5.6\n    // Version 3.6.2\n    Object.keys(param.stn_list).forEach(stnId => {\n        if (!('secondaryName' in param.stn_list[stnId])) {\n            param.stn_list[stnId].secondaryName = false;\n        } else {\n            if (param.stn_list[stnId].secondaryName !== false && param.stn_list[stnId].secondaryName.join() === ',') {\n                param.stn_list[stnId].secondaryName = false;\n            }\n        }\n\n        if ('type' in param.stn_list[stnId].transfer) {\n            delete param.stn_list[stnId].transfer.type;\n        }\n    });\n\n    return param;\n};\n\nexport const getTransText2 = (obj: Translation, langs: LanguageCode[]) => {\n    for (let l of langs) {\n        if (obj[l]) return obj[l];\n    }\n    return obj[LanguageCode.English];\n};\n\n/**\n * Format display style of station name as `[num: ]nameZH,nameEN`.\n */\nexport const formatStnName = (stnInfo: StationInfo, style: RmgStyle) =>\n    (style === RmgStyle.GZMTR ? (stnInfo?.num || '-') + ': ' : '') + stnInfo?.name.join().replace('\\\\', ' ');\n","module.exports = i18next;","import { Translation } from \"./constants\";\n\nexport enum CityCode {\n    Barcelona = 'barcelona',\n    Beijing = 'beijing',\n    Changsha = 'changsha',\n    Chengdu = 'chengdu',\n    Chongqing = 'chongqing',\n    Dongguan = 'dongguan',\n    Edinburgh = 'edinburgh',\n    Foshan = 'foshan',\n    Glasgow = 'glasgow',\n    Guangzhou = 'guangzhou',\n    Hangzhou = 'hangzhou',\n    HongKong = 'hongkong',\n    Kansai = 'kansai',\n    Kaohsiung = 'kaohsiung',\n    London = 'london',\n    Macao = 'macao',\n    Madrid = 'madrid',\n    Nanjing = 'nanjing',\n    NewTaipei = 'newtaipei',\n    Osaka = 'osaka',\n    Oslo = 'oslo',\n    Paris = 'paris',\n    Qingdao = 'qingdao',\n    SanFrancisco = 'sanfrancisco',\n    Seoul = 'seoul',\n    Shanghai = 'shanghai',\n    Shenzhen = 'shenzhen',\n    Singapore = 'singapore',\n    Stockholm = 'stockholm',\n    Taipei = 'taipei',\n    Tianjin = 'tianjin',\n    Tokyo = 'tokyo',\n    Toronto = 'toronto',\n    TyneAndWear = 'tyneandwear',\n    Xian = 'xian',\n    Other = 'other',\n}\n\ninterface CityEntry {\n    id: CityCode;\n    /**\n     * ISO 3166-1 alpha-2 country code. (For cities in Britain, append BS 6879 subdivision code. )\n     */\n    country: string;\n    /**\n     * Key-value pairs of multi-lingual names of the city.\n     */\n    name: Translation;\n}\n\nexport const cityList: CityEntry[] = [\n    {\n        id: CityCode.Barcelona,\n        country: 'ES',\n        name: {\n            en: 'Barcelona',\n            'zh-Hans': '巴塞罗那',\n            'zh-HK': '巴塞隆拿',\n            'zh-TW': '巴塞隆納',\n        },\n    },\n    {\n        id: CityCode.Beijing,\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: CityCode.Changsha,\n        country: 'CN',\n        name: {\n            en: 'Changsha',\n            'zh-Hans': '长沙',\n            'zh-Hant': '長沙',\n        },\n    },\n    {\n        id: CityCode.Chengdu,\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: CityCode.Chongqing,\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: CityCode.Dongguan,\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: CityCode.Edinburgh,\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: CityCode.Foshan,\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: CityCode.Glasgow,\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: CityCode.Guangzhou,\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: CityCode.Hangzhou,\n        country: 'CN',\n        name: {\n            en: 'Hangzhou',\n            zh: '杭州',\n        },\n    },\n    {\n        id: CityCode.HongKong,\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: CityCode.Kansai,\n        country: 'JP',\n        name: {\n            en: 'Kansai Area',\n            ja: '近畿地方',\n            'zh-Hans': '近畿地方（关西地方）',\n            'zh-Hant': '近畿地方（關西地方）',\n        },\n    },\n    {\n        id: CityCode.Kaohsiung,\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: CityCode.London,\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: CityCode.Macao,\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: CityCode.Madrid,\n        country: 'ES',\n        name: {\n            en: 'Madrid',\n            'zh-Hans': '马德里',\n            'zh-Hant': '馬德里',\n        },\n    },\n    {\n        id: CityCode.Nanjing,\n        country: 'CN',\n        name: {\n            en: 'Nanjing',\n            zh: '南京',\n        },\n    },\n    {\n        id: CityCode.NewTaipei,\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: CityCode.Osaka,\n        country: 'JP',\n        name: {\n            en: 'Osaka',\n            ja: '大阪',\n            zh: '大阪',\n        },\n    },\n    {\n        id: CityCode.Oslo,\n        country: 'NO',\n        name: {\n            en: 'Oslo',\n            'zh-Hans': '奥斯陆',\n            'zh-Hant': '奧斯陸',\n        },\n    },\n    {\n        id: CityCode.Paris,\n        country: 'FR',\n        name: {\n            en: 'Paris',\n            zh: '巴黎',\n        },\n    },\n    {\n        id: CityCode.Qingdao,\n        country: 'CN',\n        name: {\n            en: 'Qingdao',\n            'zh-Hans': '青岛',\n            'zh-Hant': '青島',\n        },\n    },\n    {\n        id: CityCode.SanFrancisco,\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: CityCode.Seoul,\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: CityCode.Shanghai,\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: CityCode.Shenzhen,\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: CityCode.Singapore,\n        country: 'SG',\n        name: {\n            en: 'Singapore',\n            zh: '新加坡',\n        },\n    },\n    {\n        id: CityCode.Stockholm,\n        country: 'SE',\n        name: {\n            en: 'Stockholm',\n            'zh-Hans': '斯德哥尔摩',\n            'zh-Hant': '斯德哥爾摩',\n        },\n    },\n    {\n        id: CityCode.Taipei,\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            zh: '台北',\n        },\n    },\n    {\n        id: CityCode.Tianjin,\n        country: 'CN',\n        name: {\n            en: 'Tianjin',\n            zh: '天津',\n        },\n    },\n    {\n        id: CityCode.Tokyo,\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: CityCode.Toronto,\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: CityCode.TyneAndWear,\n        country: 'GBENG',\n        name: {\n            en: 'Tyne and Wear',\n            'zh-Hans': '泰恩-威尔',\n            'zh-HK': '泰威',\n            'zh-TW': '泰恩-威爾',\n        },\n    },\n    {\n        id: CityCode.Xian,\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: CityCode.Other,\n        country: 'UN',\n        name: {\n            en: 'Customise',\n            'zh-Hans': '自定义',\n            'zh-Hant': '自訂',\n        },\n    },\n];\n","module.exports = ReactDOM;","module.exports = i18nextXHRBackend;","module.exports = i18nextBrowserLanguageDetector;","module.exports = ReduxThunk;","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: {\n            'zh-CN': ['zh-Hans', 'en'],\n            'zh-Hant': ['zh-HK', 'en'],\n            'zh-HK': ['zh-Hant', 'en'],\n            'zh-TW': ['zh-HK', 'zh-Hant'],\n            default: ['en'],\n        },\n        // debug: true,\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: process.env.PUBLIC_URL + '/locale/{{lng}}.json',\n        },\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    })\n    .then(t => {\n        document.title = t('title');\n        document.documentElement.setAttribute('lang', i18n.language);\n    });\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    AppBar,\n    Toolbar,\n    Tooltip,\n    IconButton,\n    Typography,\n    Icon,\n    makeStyles,\n    createStyles,\n    Menu,\n    MenuItem,\n    Divider,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { AllCanvas, canvasConfig, CanvasType } from \"./constants/constants\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from './redux';\nimport { selectCanvas, zoomIn, zoomOut } from \"./redux/app/action\";\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        rootLight: {\n            backgroundColor: theme.palette.primary.main,\n        },\n        rootDark: {\n            backgroundColor: theme.palette.background.paper,\n        },\n        title: {\n            flexGrow: 1,\n            color: '#fff',\n        },\n        menuButton: {\n            color: '#fff',\n        },\n    })\n);\n\nconst AppAppBar = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    return React.useMemo(\n        () => (\n            <AppBar position=\"sticky\" className={prefersDarkMode ? classes.rootDark : classes.rootLight}>\n                <Toolbar variant=\"dense\">\n                    <Typography variant=\"h6\" className={classes.title} color=\"textPrimary\">\n                        {process.env.PUBLIC_URL.includes('uat') ? t('titleUAT') : t('title')}\n                    </Typography>\n\n                    <CanvasToggle />\n                    <ZoomToggles />\n                </Toolbar>\n            </AppBar>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [prefersDarkMode, i18n.language]\n    );\n};\n\nexport default AppAppBar;\n\nconst CanvasToggle = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const rmgStyle = useSelector((store: RootState) => store.app.rmgStyle);\n\n    const [canvasButtonEl, setCanvasButtonEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (action: CanvasType | typeof AllCanvas) => () => {\n        dispatch(selectCanvas(action));\n        setCanvasButtonEl(null);\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('toggle.tooltip')}>\n                    <IconButton onClick={e => setCanvasButtonEl(e.currentTarget)} className={classes.menuButton}>\n                        <Icon>photo_library</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Menu anchorEl={canvasButtonEl} open={Boolean(canvasButtonEl)} onClose={() => setCanvasButtonEl(null)}>\n                    {canvasConfig[rmgStyle].map(c => (\n                        <MenuItem key={c} onClick={handleClick(c)}>\n                            {t('toggle.' + c)}\n                        </MenuItem>\n                    ))}\n                    <Divider style={{ margin: '6px 0' }} />\n                    <MenuItem onClick={handleClick(AllCanvas)}>{t('toggle.all')}</MenuItem>\n                </Menu>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [rmgStyle, canvasButtonEl, classes.menuButton]\n    );\n};\n\nconst ZoomToggles = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('zoom.out')}>\n                    <IconButton\n                        onClick={() => dispatch(zoomOut())}\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_out</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={t('zoom.in')}>\n                    <IconButton\n                        onClick={() => dispatch(zoomIn())}\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_in</Icon>\n                    </IconButton>\n                </Tooltip>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [classes.menuButton]\n    );\n};\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component<{ children: React.ReactNode }, { hasError: boolean }> {\n    constructor(props: { children: React.ReactNode }) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error: any) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: any, errorInfo: any) {\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n","import React, { lazy, memo, useEffect } from 'react';\nimport { CircularProgress, createStyles, makeStyles } from '@material-ui/core';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport ErrorBoundary from '../error-boundary';\n\nimport { AllCanvas, canvasConfig, CanvasType, RmgStyle } from '../constants/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCanvas, setRmgStyle } from '../redux/app/action';\nimport { RootState } from '../redux';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexDirection: 'row',\n            overflowX: 'scroll',\n            '&::before, &::after': {\n                content: '\"\"',\n                margin: 'auto',\n            },\n            '& > svg': {\n                flex: '0 0 auto',\n                border: '1px solid black',\n            },\n        },\n    })\n);\n\nconst SVGs = () => {\n    const classes = useStyles();\n\n    const canvasScale = useSelector((store: RootState) => store.app.canvasScale);\n    const svgHeight = useSelector((store: RootState) => store.param.svg_height);\n    const svgWidths = useSelector((store: RootState) => store.param.svgWidth);\n    const theme = useSelector((store: RootState) => store.param.theme);\n\n    const sharedProps = React.useCallback(\n        (canvas: CanvasType): React.SVGProps<SVGSVGElement> => ({\n            id: canvas,\n            xmlns: 'http://www.w3.org/2000/svg',\n            xmlnsXlink: 'http://www.w3.org/1999/xlink',\n            height: svgHeight * canvasScale,\n            viewBox: `0 0 ${svgWidths[canvas]} ${svgHeight}`,\n            colorInterpolationFilters: 'sRGB',\n            style: {\n                ['--rmg-svg-width' as any]: svgWidths[canvas] + 'px',\n                ['--rmg-svg-height' as any]: svgHeight + 'px',\n                ['--rmg-theme-colour' as any]: theme[2],\n                ['--rmg-theme-fg' as any]: theme[3],\n            },\n        }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [svgHeight, JSON.stringify(svgWidths), theme, canvasScale]\n    );\n\n    return (\n        <div className={classes.root}>\n            <Switch>\n                {Object.values(RmgStyle).map(s => (\n                    <Route path={`/${s}`} key={s}>\n                        <StyleSpecificSVGs style={s} canvasAvailable={canvasList[s]} svgProps={sharedProps} />\n                    </Route>\n                ))}\n                <Redirect to={'/' + RmgStyle.MTR} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default SVGs;\n\nconst StyleSpecificSVGs = memo(\n    (props: {\n        style: RmgStyle;\n        canvasAvailable: { [canvas in CanvasType]?: JSX.Element };\n        svgProps: (canvas: CanvasType) => React.SVGProps<SVGSVGElement>;\n    }) => {\n        const dispatch = useDispatch();\n\n        const canvasToShow = useSelector((store: RootState) => store.app.canvasToShow);\n\n        dispatch(setRmgStyle(props.style));\n\n        useEffect(\n            () => {\n                ['share', ...Object.values(CanvasType)].forEach(canvas => {\n                    if (canvas in props.canvasAvailable || canvas === 'share') {\n                        (document.getElementById('css_' + canvas) as HTMLLinkElement).href =\n                            process.env.PUBLIC_URL + `/styles/${canvas}_${props.style}.css`;\n                    } else {\n                        (document.getElementById('css_' + canvas) as HTMLLinkElement).href = '';\n                    }\n                });\n                \n                ![...canvasConfig[props.style], AllCanvas].includes(canvasToShow) && dispatch(selectCanvas(AllCanvas));\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            []\n        );\n\n        return (\n            <>\n                {(Object.keys(props.canvasAvailable) as (keyof typeof props.canvasAvailable)[]).map(\n                    canvas =>\n                        [AllCanvas, canvas].includes(canvasToShow) && (\n                            <React.Suspense key={canvas} fallback={<CircularProgress />}>\n                                <ErrorBoundary>\n                                    <svg {...props.svgProps(canvas)}>\n                                        <rect\n                                            id=\"canvas-bg\"\n                                            fill=\"white\"\n                                            style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n                                        />\n                                        {props.canvasAvailable[canvas]}\n                                        <rect\n                                            id=\"canvas-border\"\n                                            fill=\"none\"\n                                            strokeWidth={3}\n                                            stroke=\"none\"\n                                            style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n                                        />\n                                    </svg>\n                                </ErrorBoundary>\n                            </React.Suspense>\n                        )\n                )}\n            </>\n        );\n    }\n);\n\n// Canvas available\n\nconst RunInGZMTR = lazy(() => import(/* webpackChunkName: \"runinGZMTR\" */ './runin/runin-gzmtr'));\nconst RailMapGZMTR = lazy(() => import(/* webpackChunkName: \"railmapGZMTR\" */ './railmap/railmap-gzmtr'));\n\nconst DestinationMTR = lazy(() => import(/* webpackChunkName: \"destinationMTR\" */ './destination/destination-mtr'));\nconst RailMapMTR = lazy(() => import(/* webpackChunkName: \"railmapMTR\" */ './railmap/railmap-mtr'));\n\nconst DestinationSHMetro = lazy(() =>\n    import(/* webpackChunkName: \"destinationSHMetro\" */ './destination/destination-shmetro')\n);\nconst RunInSHMetro = lazy(() => import(/* webpackChunkName: \"runinSHMetro\" */ './runin/runin-shmetro'));\nconst RailMapSHMetro = lazy(() => import(/* webpackChunkName: \"railmapSHMetro\" */ './railmap/railmap-shmetro'));\n\n/**\n * Each value of this object is an object of ORDERED key-value pairs\n */\nconst canvasList: { [s in RmgStyle]: { [c in CanvasType]?: JSX.Element } } = {\n    [RmgStyle.GZMTR]: {\n        [CanvasType.RunIn]: <RunInGZMTR />,\n        [CanvasType.RailMap]: <RailMapGZMTR />,\n    },\n    [RmgStyle.MTR]: {\n        [CanvasType.Destination]: <DestinationMTR />,\n        [CanvasType.RailMap]: <RailMapMTR />,\n    },\n    [RmgStyle.SHMetro]: {\n        [CanvasType.Destination]: <DestinationSHMetro />,\n        [CanvasType.RunIn]: <RunInSHMetro />,\n        [CanvasType.RailMap]: <RailMapSHMetro />,\n    },\n};\n","import SVGs from './svg';\n\nexport default SVGs;","import * as React from 'react';\n\nimport {\n    Typography,\n    CircularProgress,\n    Tabs,\n    Tab,\n    Icon,\n    makeStyles,\n    createStyles,\n    useTheme,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nconst PanelSave = React.lazy(() => import(/* webpackChunkName: \"panelSave\" */ './save'));\nconst PanelLayout = React.lazy(() => import(/* webpackChunkName: \"panelLayout\" */ './layout'));\nconst PanelDesign = React.lazy(() => import(/* webpackChunkName: \"panelDesign\" */ './design'));\nconst PanelStations = React.lazy(() => import(/* webpackChunkName: \"panelStations\" */ './stations'));\nconst PanelInfo = React.lazy(() => import(/* webpackChunkName: \"panelInfo\" */ './panel-info'));\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexDirection: 'row',\n            height: '100%',\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        typography: {\n            background: theme.palette.background.default,\n        },\n        tab: {\n            padding: '6px 24px',\n            height: 48,\n            '& .MuiTab-wrapper': {\n                flexDirection: 'row',\n            },\n            [theme.breakpoints.up('sm')]: {\n                '& .MuiTab-wrapper': {\n                    justifyContent: 'flex-start',\n                },\n            },\n            [theme.breakpoints.down('xs')]: {\n                minWidth: 'calc(100% / 5)',\n            },\n            '&.MuiTab-labelIcon': {\n                minHeight: 'unset',\n                '& .MuiTab-wrapper': {\n                    '& > *:first-child': {\n                        marginBottom: 0,\n                    },\n                    '& > *:not(first-child)': {\n                        paddingLeft: 8,\n                    },\n                },\n            },\n        },\n        tabs: {\n            overflow: 'auto',\n            '&::-webkit-scrollbar': {\n                width: 0,\n            },\n            scrollbarWidth: 'none',\n            WebkitOverflowScrolling: 'touch',\n        },\n        tabpanel: {\n            overflow: 'auto',\n            flex: 1,\n            padding: theme.spacing(3),\n            paddingBottom: 0,\n            height: `calc(100% - ${theme.spacing(3)}px)`,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n        },\n    })\n);\n\nexport default function PanelTab() {\n    const { t, i18n } = useTranslation();\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const [value, setValue] = React.useState(0);\n\n    const panel = (index: number) => {\n        switch (index) {\n            case 0:\n                return <PanelSave />;\n            case 1:\n                return <PanelLayout />;\n            case 2:\n                return <PanelDesign />;\n            case 3:\n                return <PanelStations />;\n            case 4:\n                return <PanelInfo />;\n            default:\n                return <PanelSave />;\n        }\n    };\n\n    const tabNav = React.useMemo(\n        () => (\n            <Typography className={`${classes.typography} ${classes.tabs}`} component=\"div\">\n                <Tabs\n                    value={value}\n                    orientation={isMobile ? 'horizontal' : 'vertical'}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(_, val) => setValue(val)}\n                    variant=\"scrollable\"\n                    scrollButtons=\"off\"\n                >\n                    {[\n                        ['file', 'insert_drive_file'],\n                        ['layout', 'panorama'],\n                        ['design', 'brush'],\n                        ['stations', 'directions_transit'],\n                        ['info', 'info'],\n                    ].map((val, i) => (\n                        <Tab\n                            label={<span>{t('tab.' + val[0])}</span>}\n                            icon={<Icon>{val[1]}</Icon>}\n                            key={i}\n                            className={classes.tab}\n                        />\n                    ))}\n                </Tabs>\n            </Typography>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [value, i18n.language, classes.tab, isMobile]\n    );\n\n    return (\n        <div className={classes.root}>\n            {tabNav}\n            <Typography className={`${classes.typography} ${classes.tabpanel}`} component=\"div\" role=\"tabpanel\">\n                <React.Suspense fallback={<CircularProgress />}>{panel(value)}</React.Suspense>\n            </Typography>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport PanelTabs from './panels';\n\nexport default function Panel() {\n    return (\n        <React.Suspense fallback={<CircularProgress />}>\n            <PanelTabs />\n        </React.Suspense>\n    );\n}\n","import React, { useMemo, useEffect, useReducer } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppAppBar from './app-appbar';\nimport SVGs from './svgs';\nimport Panels from './panels';\nimport { getBranches, useTpo, getRoutes } from './methods';\nimport { ParamContext, paramReducer } from './context';\nimport { createMuiTheme, ThemeProvider, useMediaQuery, LinearProgress } from '@material-ui/core';\nimport { RMGParam, StationInfo } from \"./constants/constants\";\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#bb86fc',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#cf6679',\n        },\n    },\n    // palette: {\n    //     type: 'dark',\n    //     primary: {\n    //         main: '#8ab4f8',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#bb86fc',\n            main: '#6200ee',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#b00020',\n        },\n    },\n    // palette: {\n    //     primary: {\n    //         main: '#1a73e8',\n    //     },\n    //     text: {\n    //         primary: '#202124',\n    //         secondary: '#5f6368',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nexport default function App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = prefersDarkMode ? darkTheme : lightTheme;\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <ThemeProvider theme={theme}>\n                <React.Suspense fallback={<LinearProgress />}>\n                    <AppAppBar />\n                </React.Suspense>\n                <AppBody />\n            </ThemeProvider>\n        </BrowserRouter>\n    );\n}\n\nconst AppBody = () => {\n    const [param, dispatch] = useReducer(paramReducer, JSON.parse(localStorage.rmgParam) as RMGParam);\n    const paramString = JSON.stringify(param);\n    useEffect(() => {\n        window.rmgStorage.writeFile('rmgParam', paramString).then()\n    }, [paramString]);\n\n    const deps = Object.keys(param.stn_list).reduce(\n        (acc, cur) =>\n            acc +\n            cur +\n            ((...k: (keyof StationInfo)[]) => (o: StationInfo) => k.reduce((a, c) => a + JSON.stringify(o[c]), ''))(\n                'parents',\n                'children',\n                'branch'\n            )(param.stn_list[cur]),\n        ''\n    );\n\n    const branches = useMemo(\n        () => getBranches(param.stn_list),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [deps]\n    );\n    const routes = useMemo(\n        () => getRoutes(param.stn_list),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [deps]\n    );\n    const tpo = useTpo(branches);\n\n    return (\n        <>\n            <ParamContext.Provider\n                value={{\n                    param,\n                    dispatch,\n                    branches,\n                    routes,\n                    deps,\n                    tpo,\n                }}\n            >\n                <div style={{ overflowY: 'auto' }}>\n                    <SVGs />\n                </div>\n                <div style={{ flex: 1, overflow: 'hidden' }}>\n                    <Panels />\n                </div>\n            </ParamContext.Provider>\n            <canvas style={{ display: 'none' }} />\n        </>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const FILE_NOT_FOUND = 'FILE_NOT_FOUND';\n\nexport default interface StorageService {\n    init: () => Promise<void>;\n\n    writeFile: (filename: string, contents: string) => Promise<void>;\n\n    readFile: (filename: string) => Promise<string>;\n\n    deleteFile: (filename: string) => Promise<void>;\n}\n","import { FILE_NOT_FOUND } from './storageService';\n\nexport default class StorageLocalStorage<StorageService> {\n    private currentBusyFilename: false | string;\n\n    constructor() {\n        this.currentBusyFilename = false;\n    }\n\n    async init() {\n        console.warn('Using localStorage, please update your browser');\n\n        if (!window.localStorage) {\n            alert('Local storage is not available! Please upgrade to a newer browser!');\n            throw new Error('LocalStorage unavailable');\n        }\n\n        try {\n            window.localStorage.setItem('storage_test', '1');\n            window.localStorage.removeItem('storage_test');\n        } catch (e) {\n            alert(\n                \"Local storage is not accessible! Please modify your browser's settings or try with another browser!\"\n            );\n            throw new Error('LocalStorage no write permission');\n        }\n    }\n\n    async writeFile(filename: string, contents: string) {\n        if (this.currentBusyFilename === filename) {\n            console.warn('Attempt to write', filename, 'while write process is not finished!');\n        }\n\n        this.currentBusyFilename = filename;\n        window.localStorage.setItem(filename, contents);\n        this.currentBusyFilename = false;\n    }\n\n    async readFile(filename: string) {\n        if (this.currentBusyFilename === filename) {\n            console.warn('Attempt to read', filename, 'while write process is not finished!');\n        }\n\n        const contents = window.localStorage.getItem(filename);\n        if (!contents) {\n            throw new Error(FILE_NOT_FOUND);\n        }\n        return contents;\n    }\n\n    async deleteFile(filename: string) {\n        if (this.currentBusyFilename === filename) {\n            console.warn('Attempt to delete', filename, 'while write process is not finished!');\n        }\n\n        this.currentBusyFilename = filename;\n        window.localStorage.removeItem(filename);\n        this.currentBusyFilename = false;\n    }\n}\n","import StorageLocalStorage from './storageLocalStorage';\nimport StorageService from './storageService';\nimport StorageIndexedDB from './storageIndexedDB';\n\nexport default async function getRmgStorage(): Promise<StorageService> {\n    if (!window.indexedDB) {\n        console.log('IndexedDB not supported');\n        return new StorageLocalStorage();\n    }\n\n    return await new Promise<StorageService>(resolve => {\n        try {\n            const request = window.indexedDB.open('indexeddb_feature_detection', 1);\n\n            request.onerror = err => {\n                console.log('IndexedDB can NOT be accessed:', err);\n                console.log('Fallback to LocalStorage');\n                resolve(new StorageLocalStorage());\n            };\n\n            request.onsuccess = () => {\n                console.log('IndexedDB can be accessed');\n                // TODO: toggle on indexedDB\n                // resolve(new StorageIndexedDB());\n                resolve(new StorageLocalStorage());\n            };\n        } catch (error) {\n            console.warn('Error while opening IndexedDB:', error);\n            resolve(new StorageLocalStorage());\n        }\n    });\n}\n","import { AllCanvas, CanvasType, LoadingStatus, RmgStyle } from '../../constants/constants';\nimport {\n    SET_CANVAS_SCALE,\n    SET_CANVAS_SCALE_STATUS,\n    SET_CANVAS_TO_SHOW,\n    SET_CANVAS_TO_SHOW_STATUS,\n    SET_RMG_STYLE,\n    setCanvasScaleAction,\n    setCanvasScaleStatusAction,\n    setCanvasToShowAction, setCanvasToShowStatusAction,\n    setRmgStyleAction\n} from \"./action\";\n\ninterface AppState {\n    rmgStyle: RmgStyle;\n    canvasScale: number;\n    canvasScaleStatus: LoadingStatus;\n    canvasToShow: CanvasType | typeof AllCanvas;\n    canvasToShowStatus: LoadingStatus;\n}\n\nconst initialState: AppState = {\n    rmgStyle: RmgStyle.MTR,\n    canvasScale: 1,\n    canvasScaleStatus: LoadingStatus.init,\n    canvasToShow: AllCanvas,\n    canvasToShowStatus: LoadingStatus.init,\n};\n\nexport default function AppReducer(\n    state = initialState,\n    action: setRmgStyleAction | setCanvasScaleAction | setCanvasScaleStatusAction | setCanvasToShowAction | setCanvasToShowStatusAction\n): AppState {\n    switch (action.type) {\n        case SET_RMG_STYLE:\n            state.rmgStyle = action.rmgStyle;\n            break;\n        case SET_CANVAS_SCALE:\n            state.canvasScale = action.canvasScale;\n            break;\n        case SET_CANVAS_SCALE_STATUS:\n            state.canvasScaleStatus = action.canvasScaleStatus;\n            break;\n        case SET_CANVAS_TO_SHOW:\n            state.canvasToShow = action.canvasToShow;\n            break;\n        case SET_CANVAS_TO_SHOW_STATUS:\n            state.canvasToShowStatus = action.canvasToShowStatus;\n            break;\n        default:\n            break;\n    }\n\n    return { ...state };\n}\n","import { CityCode } from '../../constants/city-config';\nimport { MonoColour, PanelTypeGZMTR, RMGParam, ShortDirection } from '../../constants/constants';\nimport {\n    SET_BRANCH_SPACING,\n    SET_CUSTOMISED_MTR_DESTINATION,\n    SET_DIRECTION,\n    SET_DIRECTION_INDICATOR_X,\n    SET_DIRECTION_INDICATOR_Y,\n    SET_FULL_PARAM,\n    SET_LINE_NAME,\n    SET_LINE_NUM,\n    SET_NAME_POSITION,\n    SET_NOTES,\n    SET_PADDING_PERCENTAGE,\n    SET_PANEL_TYPE,\n    SET_PLATFORM,\n    SET_PSD_NUM,\n    SET_SVG_HEIGHT,\n    SET_SVG_WIDTH,\n    SET_THEME,\n    SET_Y_PERCENTAGE,\n    setBranchSpacingAction,\n    setCustomisedMtrDestinationAction,\n    setDirectionAction,\n    setDirectionIndicatorXAction,\n    setDirectionIndicatorYAction,\n    setFullParamAction,\n    setLineNameAction,\n    setLineNumAction,\n    setNamePositionAction,\n    setNotesAction,\n    setPaddingPercentageAction,\n    setPanelTypeAction,\n    setPlatformAction,\n    setPsdNumAction,\n    setSvgHeightAction,\n    setSvgWidthAction,\n    setThemeAction,\n    setYPercentageAction,\n} from './action';\n\nconst initialState: RMGParam = {\n    svgWidth: {\n        destination: 100,\n        runin: 100,\n        railmap: 100,\n    },\n    svg_height: 100,\n    y_pc: 50,\n    padding: 10,\n    branch_spacing: 10,\n    direction: ShortDirection.left,\n    platform_num: '1',\n    theme: [CityCode.HongKong, 'twl', '#E2231A', MonoColour.white],\n    line_name: ['線', 'line'],\n    current_stn_idx: '',\n    stn_list: {},\n    namePosMTR: {\n        isStagger: true,\n        isFlip: true,\n    },\n    customiseMTRDest: {\n        isLegacy: false,\n        terminal: false,\n    },\n    line_num: '1',\n    psd_num: '1',\n    info_panel_type: PanelTypeGZMTR.gz1,\n    notesGZMTR: [],\n    direction_gz_x: 0,\n    direction_gz_y: 0,\n};\n\nexport default function ParamReducer(\n    state = initialState,\n    action:\n        | setFullParamAction\n        | setSvgHeightAction\n        | setSvgWidthAction\n        | setYPercentageAction\n        | setBranchSpacingAction\n        | setPaddingPercentageAction\n        | setDirectionIndicatorXAction\n        | setDirectionIndicatorYAction\n        | setThemeAction\n        | setLineNameAction\n        | setDirectionAction\n        | setPlatformAction\n        | setLineNumAction\n        | setPsdNumAction\n        | setPanelTypeAction\n        | setNotesAction\n        | setNamePositionAction\n        | setCustomisedMtrDestinationAction\n) {\n    switch (action.type) {\n        case SET_FULL_PARAM:\n            return action.fullParam;\n        case SET_SVG_HEIGHT:\n            state.svg_height = action.svgHeight;\n            break;\n        case SET_SVG_WIDTH:\n            state.svgWidth[action.canvas] = action.svgWidth;\n            break;\n        case SET_Y_PERCENTAGE:\n            state.y_pc = action.yPercentage;\n            break;\n        case SET_BRANCH_SPACING:\n            state.branch_spacing = action.branchSpacing;\n            break;\n        case SET_PADDING_PERCENTAGE:\n            state.padding = action.paddingPercentage;\n            break;\n        case SET_DIRECTION_INDICATOR_X:\n            state.direction_gz_x = action.directionIndicatorX;\n            break;\n        case SET_DIRECTION_INDICATOR_Y:\n            state.direction_gz_y = action.directionIndicatorY;\n            break;\n        case SET_THEME:\n            state.theme = action.theme;\n            break;\n        case SET_LINE_NAME:\n            state.line_name = action.lineName;\n            break;\n        case SET_DIRECTION:\n            state.direction = action.direction;\n            break;\n        case SET_PLATFORM:\n            state.platform_num = action.platform;\n            break;\n        case SET_LINE_NUM:\n            state.line_num = action.lineNum;\n            break;\n        case SET_PSD_NUM:\n            state.psd_num = action.psdNum;\n            break;\n        case SET_PANEL_TYPE:\n            state.info_panel_type = action.panelType;\n            break;\n        case SET_NOTES:\n            state.notesGZMTR = action.notes;\n            break;\n        case SET_NAME_POSITION:\n            state.namePosMTR = action.namePosition;\n            break;\n        case SET_CUSTOMISED_MTR_DESTINATION:\n            state.customiseMTRDest = action.customisedMtrDestination;\n            break;\n        default:\n            break;\n    }\n    return { ...state };\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunk, { ThunkMiddleware } from 'redux-thunk';\nimport AppReducer from './app/reducer';\nimport ParamReducer from './param/reducer';\n\nconst rootReducer = combineReducers({\n    app: AppReducer,\n    param: ParamReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default createStore(rootReducer, applyMiddleware(thunk as ThunkMiddleware<RootState>));\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport { updateParam } from './utils';\nimport * as serviceWorker from './serviceWorker';\n\nimport { AllCanvas, CanvasType } from './constants/constants';\nimport StorageService from './util/storage/storageService';\nimport getRmgStorage from './util/storage';\nimport store from './redux';\nimport { Provider } from 'react-redux';\nimport { setCanvasScale, setCanvasToShow } from './redux/app/action';\nimport { setFullParam } from './redux/param/action';\nimport autoSaveScheduler from './util/auto-save-scheduler';\n\ndeclare global {\n    interface Window {\n        gtag: any;\n        rmgStorage: StorageService;\n        rmgStore: any;\n    }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// load empty stylesheet elements\ndocument.head.append(\n    ...['share', ...Object.values(CanvasType)].map(tag => {\n        let link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.id = 'css_' + tag;\n        return link;\n    })\n);\n\nconst renderApp = () => {\n    ReactDOM.render(\n        // <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        // </React.StrictMode>,\n        document.getElementById('root')\n    );\n};\n\ngetRmgStorage()\n    .then(async rmgStorage => {\n        // setup storage and param\n        await rmgStorage.init();\n        try {\n            const contents = await rmgStorage.readFile('rmgParam');\n\n            const updatedParam = updateParam(JSON.parse(contents));\n            await rmgStorage.writeFile('rmgParam', JSON.stringify(updatedParam));\n        } catch (err) {\n            console.warn('Error in reading rmgParam', err);\n            const module = await import('./constants/templates/basic/blank');\n            const updatedParam = updateParam(module.default);\n            await rmgStorage.writeFile('rmgParam', JSON.stringify(updatedParam));\n        } finally {\n            window.rmgStorage = rmgStorage;\n        }\n    })\n    .then(async () => {\n        // init param store with localStorage\n        const contents = await window.rmgStorage.readFile('rmgParam');\n        store.dispatch(setFullParam(JSON.parse(contents)));\n    })\n    .then(async () => {\n        // style being setup in SVG's router\n\n        // setup canvas scale\n        try {\n            const canvasScaleString = await window.rmgStorage.readFile('rmgScale');\n            const canvasScale = Number(canvasScaleString);\n            canvasScale >= 0.1 && store.dispatch(setCanvasScale(canvasScale));\n        } catch (err) {\n            console.warn('Error in reading rmgScale file', err);\n            console.log('Initiating rmgScale as 1');\n            await window.rmgStorage.writeFile('rmgScale', '1');\n            store.dispatch(setCanvasScale(1));\n        }\n\n        // setup canvas to show\n        try {\n            const canvasToShow = (await window.rmgStorage.readFile('rmgCanvas')) as CanvasType | typeof AllCanvas;\n            store.dispatch(setCanvasToShow(canvasToShow));\n        } catch (err) {\n            console.warn('Error in reading rmgCanvas file', err);\n            console.log('Initiating rmgCanvas as \"all\"');\n            await window.rmgStorage.writeFile('rmgCanvas', AllCanvas);\n            store.dispatch(setCanvasToShow(AllCanvas));\n        }\n\n        window.rmgStore = store;\n    })\n    .then(() => {\n        renderApp();\n    })\n    .then(() => {\n        autoSaveScheduler();\n    });\n","export default function autoSaveScheduler() {\n    setInterval(async () => {\n        await window.rmgStorage.writeFile('rmgParamRedux', JSON.stringify(window.rmgStore.getState().param));\n        console.log('Parameter auto saved!');\n    }, 60 * 1000);\n}\n"],"sourceRoot":""}