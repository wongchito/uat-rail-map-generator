{"version":3,"file":"static/js/panelStationsInterchange.6cf48ba6.chunk.js","mappings":"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EAAAA,EAAAA,IAA2BpD,EAAOkD,KAkBnC,SACKhF,OAAOC,OAAOgF,EAAAA,IAAgBtM,KAAI,SAAAwM,GAAC,OAChC,mBAAgBvN,MAAOuN,EAAvB,SACKvP,EAAE,uCAAyCuP,IADnCA,cAO7B,UAAChN,EAAA,EAAD,YACI,SAACyJ,EAAA,EAAD,WACI,SAAC1C,EAAA,EAAD,8BAEJ,SAAC9G,EAAA,EAAD,CAAcC,QAASzC,EAAE,yCACzB,SAACiN,EAAA,EAAD,WACI,SAACuC,EAAA,EAAD,CACIrM,MAAM,UACNsM,KAAK,MACLxN,SAAU,SAAC0J,EAAG+D,GACVvD,GAASwD,EAAAA,EAAAA,IAAsBzD,EAAOwD,KAE1CA,QAASjF,EAASmF,sBAMvC,CAAC1D,EAAOlM,EAAGmM,EAAU1B,EAASmF,UAAWnF,EAAS0E,e,qBC7XzD,IAAIpM,EAAM,CACT,cAAe,CACd,KACA,EACA,MAED,SAAU,CACT,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,eAAgB,CACf,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,eAAgB,CACf,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,KAED,gBAAiB,CAChB,KACA,EACA,KAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,KAED,eAAgB,CACf,KACA,EACA,KAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,KAED,gBAAiB,CAChB,KACA,EACA,KAED,aAAc,CACb,KACA,EACA,IAED,gBAAiB,CAChB,KACA,EACA,IAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,mBAAoB,CACnB,KACA,EACA,MAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,eAAgB,CACf,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,SAAU,CACT,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,UAAW,CACV,IACA,EACA,MAED,aAAc,CACb,IACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,eAAgB,CACf,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,oBAAqB,CACpB,KACA,EACA,MAED,mBAAoB,CACnB,KACA,EACA,MAED,sBAAuB,CACtB,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,KAED,aAAc,CACb,KACA,EACA,KAED,aAAc,CACb,IACA,EACA,MAED,gBAAiB,CAChB,IACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,iBAAkB,CACjB,KACA,EACA,MAED,cAAe,CACd,EACA,EACA,MAED,iBAAkB,CACjB,EACA,EACA,MAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,WAAY,CACX,KACA,EACA,KAED,cAAe,CACd,KACA,EACA,KAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,eAAgB,CACf,KACA,EACA,MAED,UAAW,CACV,KACA,EACA,MAED,aAAc,CACb,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,MAED,eAAgB,CACf,KACA,EACA,MAED,gBAAiB,CAChB,KACA,EACA,KAED,mBAAoB,CACnB,KACA,EACA,KAED,SAAU,CACT,KACA,EACA,KAED,YAAa,CACZ,KACA,EACA,KAED,WAAY,CACX,KACA,EACA,MAED,cAAe,CACd,KACA,EACA,MAED,SAAU,CACT,KACA,EACA,MAED,YAAa,CACZ,KACA,EACA,OAGF,SAAS8M,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEjN,EAAK+M,GAC9B,OAAOlP,QAAQC,UAAUJ,MAAK,WAC7B,IAAIiJ,EAAI,IAAIuG,MAAM,uBAAyBH,EAAM,KAEjD,MADApG,EAAEzE,KAAO,mBACHyE,KAIR,IAAIwG,EAAMnN,EAAI+M,GAAMrO,EAAKyO,EAAI,GAC7B,OAAOH,EAAoBrG,EAAEwG,EAAI,IAAIzP,MAAK,WACzC,OAAOsP,EAAoB/P,EAAEyB,EAAa,GAATyO,EAAI,OAGvCL,EAAoBM,KAAO,WAAa,OAAO/F,OAAO+F,KAAKpN,IAC3D8M,EAAoBpO,GAAK,KACzBf,EAAO0P,QAAUP","sources":["panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts","panels/stations/edit-diag/name-list-items.tsx","panels/stations/edit-diag/interchange-tab.tsx","constants/colours|lazy|/^/.//.*$/|chunkName: colours|groupOptions: {}|namespace object"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button,\n    createStyles,\n    Divider,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    MenuItem,\n    Select,\n    TextField,\n    Tooltip,\n} from '@material-ui/core';\nimport { getTransText2 } from '../../utils';\nimport { CityCode, cityList } from '../../constants/city-config';\nimport { ColourHex, LanguageCode, MonoColour, PaletteEntry, Theme } from '../../constants/constants';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 24,\n            width: 24,\n            minWidth: 0,\n            marginRight: 8,\n            // border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = (theme: Theme) => {\n    const [list, setList] = React.useState([] as PaletteEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `../../constants/colours/${theme[0]}`).then(\n              module => module.default as PaletteEntry[]\n          )\n        : Promise.resolve([] as PaletteEntry[]);\n\n    useEffect(\n        () => {\n            if (typeof theme[0] === 'undefined') {\n                return;\n            }\n            (async () => {\n                const data = await listPromise;\n                setList(\n                    theme[0] === CityCode.Other\n                        ? [{ ...data[0], colour: theme[2], fg: theme[3] || MonoColour.white }]\n                        : data\n                );\n            })();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [theme.toString()]\n    );\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: Theme;\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport const PalettePanel = (props: ColourDialogProps) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const cityChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n        props.onUpdate('theme', [event.target.value, ...props.theme.slice(1)]);\n\n    // Hook for fetching line list of current city\n    const lineList = useLineList(props.theme);\n\n    // Hook for updating props.theme when lineList changed\n    useEffect(\n        () => {\n            if (lineList.length === 0) return; // initialising, ignore\n            if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n            let { id, colour, fg } = lineList[0];\n            let newTheme = [props.theme[0], id, colour, fg || MonoColour.white];\n            props.onUpdate('theme', newTheme);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [lineList]\n    );\n\n    const lineChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let line = event.target.value;\n        let { colour, fg } = lineList.filter(l => l.id === line)[0];\n        let newTheme = [props.theme[0], line, colour, fg || MonoColour.white];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <CitySelectItem value={props.theme[0]} onChange={cityChange} />\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.line')} />\n                <TextField\n                    select\n                    style={{ width: 166 }}\n                    onChange={lineChange}\n                    value={props.theme[1]}\n                    disabled={props.theme[0] === 'other'}\n                >\n                    {lineList.map(l => (\n                        <MenuItem key={l.id} value={l.id}>\n                            <span\n                                className={classes.menuItemSpan}\n                                style={{\n                                    backgroundColor: l.colour,\n                                    color: l.fg || MonoColour.white,\n                                }}\n                            >\n                                {getTransText2(l.name, i18n.languages as LanguageCode[])}\n                            </span>\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </ListItem>\n        </List>\n    );\n};\n\nexport const CustomPanel = (props: ColourDialogProps) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [hexTemp, setHexTemp] = useState(props.theme[2]);\n\n    useEffect(\n        () => setHexTemp(props.theme[2]),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.theme[2]]\n    );\n\n    const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let rgb = event.target.value;\n        // setHexTemp(rgb);\n        props.onUpdate('theme', [CityCode.Other, 'other', rgb, props.theme[3]]);\n    };\n\n    const hexChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let hex = event.target.value;\n        if (hex.match(/^#[0-9a-fA-F]{0,6}$/) === null) return;\n        setHexTemp(hex as ColourHex);\n\n        if (props.theme[0] !== 'other') {\n            if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = [CityCode.Other, 'other', hex, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex not valid, modify theme city only\n                let newTheme = [CityCode.Other, 'other', ...props.theme.slice(2)];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            }\n        } else {\n            if (hex.match(/^#[0-9a-fA-F]{6}$/) !== null) {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            } else {\n                // if hex not valid, do nothing\n            }\n        }\n    };\n\n    const fgChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let newTheme = [CityCode.Other, 'other', props.theme[2], event.target.value];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <ListItem>\n                <ListItemText primary={t('colour.colour')} />\n                <div className={classes.buttonContainer}>\n                    <input\n                        type=\"color\"\n                        id=\"input-color\"\n                        value={props.theme[2]}\n                        onChange={colourChange}\n                        className={classes.inputColour}\n                        style={{ opacity: 0 }}\n                    />\n                    <label htmlFor=\"input-color\">\n                        <Tooltip title={t('colour.tooltip') || ''} aria-label=\"colour picker\">\n                            <Button\n                                className={classes.button}\n                                style={{\n                                    backgroundColor: props.theme[2],\n                                    borderColor: props.theme[3] || MonoColour.white,\n                                }}\n                                variant=\"contained\"\n                                component=\"span\"\n                            >\n                                {' '}\n                            </Button>\n                        </Tooltip>\n                    </label>\n                </div>\n                <TextField\n                    error={!hexTemp?.match(/^#[0-9a-fA-F]{6}$/g)}\n                    style={{ width: 85 }}\n                    onChange={hexChange}\n                    value={hexTemp?.toUpperCase()}\n                />\n            </ListItem>\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.fg')} />\n                <Select\n                    native\n                    style={{ width: 85 }}\n                    label={t('colour.fg')}\n                    onChange={fgChange}\n                    value={props.theme[3] || MonoColour.white}\n                >\n                    <option value=\"#fff\">{t('colour.fgWhite')}</option>\n                    <option value=\"#000\">{t('colour.fgBlack')}</option>\n                </Select>\n            </ListItem>\n        </List>\n    );\n};\n\nconst CitySelectItem = (props: { value: string; onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const items = useMemo(\n        () =>\n            cityList.map(c => (\n                <MenuItem key={c.id} value={c.id}>\n                    <span className={classes.cityItem}>\n                        <CountryFlag code={c.country} />\n                        <span>{getTransText2(c.name, i18n.languages as LanguageCode[])}</span>\n                    </span>\n                </MenuItem>\n            )),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    return (\n        <ListItem>\n            <ListItemText primary={t('colour.city')} />\n            <TextField select style={{ width: 166 }} value={props.value} onChange={props.onChange}>\n                {items}\n            </TextField>\n        </ListItem>\n    );\n};\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: { code: string }) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => ((char.codePointAt(0) || 0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4'].concat(\n            props.code\n                .toUpperCase()\n                .split('')\n                .map(char => ((char.codePointAt(0) || 0) + 917536).toString(16).toUpperCase()),\n            'E007F'\n        );\n    }\n\n    // special case for simplified Chinese\n    if (\n        [LanguageCode.ChineseCN, LanguageCode.ChineseSimp].includes(i18n.language as LanguageCode) &&\n        props.code === 'TW'\n    )\n        codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img\n            src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`}\n            className={classes.img}\n            alt={`Flag of ${props.code}`}\n        />\n    ) : (\n        // <img src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import React, { useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button,\n    Chip,\n    createStyles,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Icon,\n    InputBase,\n    List,\n    ListItem,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Tab,\n    Tabs,\n} from '@material-ui/core';\nimport { CustomPanel, PalettePanel } from './theme-items';\nimport { InterchangeInfo, MonoColour, Name, Theme } from '../../constants/constants';\nimport { useAppSelector } from '../../redux';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        contentWrapper: {\n            display: 'flex',\n            overflow: 'hidden',\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        contentLeft: {\n            maxWidth: 280,\n        },\n        contentControl: {\n            flexGrow: 0,\n            flexShrink: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            width: 270,\n        },\n\n        paperRoot: {\n            maxWidth: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n\n        chipWrapper: {\n            overflowX: 'auto',\n            display: 'flex',\n        },\n        chipRoot: {\n            borderRadius: 4.5,\n            height: 32,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        chipLabel: {\n            padding: '0 6px',\n            '& > span': {\n                display: 'block',\n                textAlign: 'center',\n            },\n            '& > span:first-child': {\n                fontSize: '1rem',\n            },\n            '& > span:last-child': {\n                lineHeight: '0.8rem',\n            },\n        },\n    })\n);\n\ninterface Props {\n    open: boolean;\n    theme: Theme;\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst Dialog2 = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <Dialog open={props.open} onClose={props.onClose}>\n            <DialogTitle>{t('colour.title')}</DialogTitle>\n            <DialogContent className={classes.contentWrapper}>\n                <List component=\"div\" disablePadding className={classes.contentLeft}>\n                    <LineNameInput theme={props.theme} lineName={props.lineName} onUpdate={props.onUpdate} />\n                    <Divider />\n                    <RecentChipSet onUpdate={props.onUpdate} />\n                </List>\n                <div className={classes.contentControl}>\n                    <ColourControl theme={props.theme} onUpdate={props.onUpdate} />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\">\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Dialog2;\n\nconst LineNameInput = (props: { lineName: Name; theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const classes = useStyles();\n\n    const nameChange = (value: string, index: number) => {\n        let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n        props.onUpdate('name', newName);\n    };\n\n    return (\n        <ListItem style={{ justifyContent: 'center' }}>\n            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                <Icon className={classes.iconRoot}>edit</Icon>\n                <InputBase\n                    value={props.lineName[0]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputZH,\n                    }}\n                    style={{ color: props.theme[3] || MonoColour.white }}\n                    onChange={e => nameChange(e.target.value, 0)}\n                    autoFocus\n                />\n                <InputBase\n                    value={props.lineName[1]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputEN,\n                    }}\n                    style={{ color: props.theme[3] || MonoColour.white }}\n                    onChange={e => nameChange(e.target.value, 1)}\n                />\n            </Paper>\n        </ListItem>\n    );\n};\n\nconst RecentChipSet = (props: { onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const theme = useAppSelector(store => store.param.theme);\n    const lineName = useAppSelector(store => store.param.line_name);\n    const stationList = useAppSelector(store => store.param.stn_list);\n\n    const allInfos = useMemo(\n        () =>\n            new Set(\n                Object.values(stationList)\n                    .reduce(\n                        (acc, { transfer }) => {\n                            const { info } = transfer;\n                            return acc.concat(...info);\n                        },\n                        [[...theme, ...lineName]]\n                    )\n                    .map(val => JSON.stringify(val))\n                    .reverse()\n            ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    const chips = useMemo(\n        () =>\n            [...allInfos].map((x, i) => {\n                const info: InterchangeInfo = JSON.parse(x);\n                const label = info.slice(4).map((txt, i) => (\n                    <span key={i} style={{ color: info[3] }}>\n                        {txt}\n                    </span>\n                ));\n\n                return (\n                    <Chip\n                        key={i}\n                        onClick={() => {\n                            props.onUpdate('theme', info.slice(0, 4));\n                            props.onUpdate('name', info.slice(4));\n                        }}\n                        style={{ backgroundColor: info[2] }}\n                        className={classes.chipRoot}\n                        classes={{ label: classes.chipLabel }}\n                        {...{ label }}\n                    />\n                );\n            }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ListItem>\n            <ListItemText\n                primary={t('colour.recent')}\n                secondary={chips}\n                secondaryTypographyProps={{ component: 'div' }}\n                classes={{ secondary: classes.chipWrapper }}\n            />\n        </ListItem>\n    );\n};\n\nconst ColourControl = (props: { theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const [tabIndex, setTabIndex] = useState(props.theme[0] === 'other' ? 1 : 0);\n\n    const tabNav = (\n        <Tabs\n            value={tabIndex}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(_, val) => setTabIndex(val)}\n            variant=\"fullWidth\"\n            scrollButtons=\"off\"\n        >\n            <Tab label={t('colour.palette')} style={{ minWidth: 'unset' }} />\n            <Tab label={t('colour.custom')} style={{ minWidth: 'unset' }} />\n        </Tabs>\n    );\n\n    const panel = (idx => {\n        switch (idx) {\n            case 0:\n                return <PalettePanel {...props} />;\n            case 1:\n                return <CustomPanel {...props} />;\n            default:\n                return <></>;\n        }\n    })(tabIndex);\n\n    return (\n        <>\n            {tabNav}\n            {panel}\n        </>\n    );\n};\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ListItem, ListItemIcon, TextField, makeStyles, createStyles } from '@material-ui/core';\nimport { Name } from '../../../constants/constants';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        listItemIcon: {\n            width: '1em',\n            fontSize: '1.5rem',\n            textAlign: 'center',\n        },\n    })\n);\n\ninterface Props {\n    onUpdate: (index: number) => (event: React.ChangeEvent<HTMLInputElement>) => void;\n    name: Name;\n}\n\nconst NameListItems = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>文</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameZH')}\n                        onChange={props.onUpdate(0)}\n                        value={props.name[0]}\n                        autoFocus\n                    />\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <span className={classes.listItemIcon}>A</span>\n                    </ListItemIcon>\n                    <TextField\n                        style={{ width: '100%' }}\n                        variant=\"outlined\"\n                        label={t('stations.edit.name.nameEN')}\n                        onChange={props.onUpdate(1)}\n                        value={props.name[1]}\n                        helperText={t('stations.edit.name.nameENHelper')}\n                    />\n                </ListItem>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.name?.toString() || '']\n    );\n};\n\nexport default NameListItems;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button,\n    Chip,\n    createStyles,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Select,\n    Switch,\n    Tooltip,\n} from '@material-ui/core';\nimport ColourDialog from '../../colour-diag';\nimport NameListItems from './name-list-items';\nimport { useAppDispatch, useAppSelector } from '../../../redux';\nimport { InterchangeInfo, MonoColour, Name, RmgStyle, ShortDirection, Theme } from '../../../constants/constants';\nimport {\n    addInterchange,\n    removeInterchange,\n    updateInterchange,\n    updateStationOsiName,\n    updateStationPaidArea,\n    updateStationTickDirection,\n} from '../../../redux/param/action';\n\nconst StationEditInterchangeTab = (props: { stnId: string }) => {\n    const { stnId } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const rmgStyle = useAppSelector(store => store.param.style);\n    const theme = useAppSelector(store => store.param.theme);\n    const { transfer } = useAppSelector(store => store.param.stn_list[stnId]);\n\n    const [osiNameDialog0Opened, setOsiNameDialog0Opened] = React.useState(false);\n    const [osiNameDialog1Opened, setOsiNameDialog1Opened] = React.useState(false);\n\n    const addClick = (index: number) => {\n        let newInfo: InterchangeInfo = [...theme, '轉綫', 'Line'];\n        dispatch(addInterchange(stnId, index, newInfo));\n    };\n\n    const deleteClick = (setIdx: number, intIdx: number) => {\n        dispatch(removeInterchange(stnId, setIdx, intIdx));\n    };\n\n    return (\n        <List>\n            <ListItem>\n                <ListItemText>\n                    <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.within')}</h3>\n                </ListItemText>\n                <ListItemSecondaryAction>\n                    <Tooltip title={t('stations.edit.interchange.add') || ''} aria-label=\"add\">\n                        <IconButton onClick={() => addClick(0)}>\n                            <Icon>add_circle</Icon>\n                        </IconButton>\n                    </Tooltip>\n                </ListItemSecondaryAction>\n            </ListItem>\n            <ListItem>\n                <InterchangeChipSet stnId={stnId} setIndex={0} onDelete={i => deleteClick(0, i)} />\n            </ListItem>\n\n            {/* Out of station transfer */}\n            {[RmgStyle.MTR, RmgStyle.SHMetro].includes(rmgStyle) && (\n                <>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText>\n                            <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.osi')}</h3>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                            {[RmgStyle.MTR].includes(rmgStyle) && (\n                                <React.Fragment>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        style={{ lineHeight: '1rem', whiteSpace: 'pre', marginRight: 5 }}\n                                        onClick={() => setOsiNameDialog0Opened(true)}\n                                    >\n                                        {transfer.osi_names[0]\n                                            ? transfer.osi_names[0].join('\\r\\n')\n                                            : '車站名\\r\\nStn Name'}\n                                    </Button>\n                                    <OSINameDialog\n                                        open={osiNameDialog0Opened}\n                                        stnId={stnId}\n                                        setIndex={0}\n                                        onClose={() => setOsiNameDialog0Opened(false)}\n                                    />\n                                </React.Fragment>\n                            )}\n                            <Tooltip title={t('stations.edit.interchange.add') || ''} aria-label=\"add\">\n                                <IconButton onClick={() => addClick(1)}>\n                                    <Icon>add_circle</Icon>\n                                </IconButton>\n                            </Tooltip>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <InterchangeChipSet stnId={stnId} setIndex={1} onDelete={i => deleteClick(1, i)} />\n                    </ListItem>\n                </>\n            )}\n\n            {/* Out of system transfer */}\n            {[RmgStyle.SHMetro].includes(rmgStyle || '') && (\n                <>\n                    <Divider />\n                    <ListItem>\n                        <ListItemText>\n                            <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.osysi')}</h3>\n                        </ListItemText>\n                        <ListItemSecondaryAction>\n                            {[RmgStyle.MTR].includes(rmgStyle) && (\n                                <React.Fragment>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        style={{ lineHeight: '1rem', whiteSpace: 'pre', marginRight: 5 }}\n                                        onClick={() => setOsiNameDialog1Opened(true)}\n                                    >\n                                        {transfer.osi_names[1]\n                                            ? transfer.osi_names[1].join('\\r\\n')\n                                            : '車站名\\r\\nStn Name'}\n                                    </Button>\n                                    <OSINameDialog\n                                        open={osiNameDialog1Opened}\n                                        stnId={stnId}\n                                        setIndex={1}\n                                        onClose={() => setOsiNameDialog1Opened(false)}\n                                    />\n                                </React.Fragment>\n                            )}\n                            <Tooltip title={t('stations.edit.interchange.add') || ''} aria-label=\"add\">\n                                <IconButton onClick={() => addClick(2)}>\n                                    <Icon>add_circle</Icon>\n                                </IconButton>\n                            </Tooltip>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                    <ListItem>\n                        <InterchangeChipSet stnId={stnId} setIndex={2} onDelete={i => deleteClick(2, i)} />\n                    </ListItem>\n                </>\n            )}\n            {[RmgStyle.MTR, RmgStyle.SHMetro].includes(rmgStyle) && (\n                <ListItem>\n                    <span>{t('stations.edit.interchange.note')}</span>\n                </ListItem>\n            )}\n            {/* MTR more settings */ rmgStyle === RmgStyle.MTR && <InterchangeMore stnId={props.stnId} />}\n        </List>\n    );\n};\n\nexport default StationEditInterchangeTab;\n\nconst intChipSetStyles = makeStyles(() =>\n    createStyles({\n        intChip: {\n            borderRadius: 4.5,\n            height: 40,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        intChipText: {\n            display: 'block',\n            textAlign: 'center' as 'center',\n        },\n        intChipTextZH: {\n            fontSize: 18,\n            lineHeight: '1.2rem',\n        },\n        intChipTextEN: {\n            fontSize: '.75rem',\n            lineHeight: '.9rem',\n            whiteSpace: 'pre-wrap' as 'pre-wrap',\n        },\n        intChipLabel: {\n            paddingLeft: 6,\n            paddingRight: 6,\n        },\n        intChipDeleteIcon: {\n            marginLeft: -3,\n        },\n    })\n);\n\ninterface InterchangeChipSetProps {\n    stnId: string;\n    setIndex: number;\n    onDelete: (i: number) => void;\n}\n\nconst InterchangeChipSet = (props: InterchangeChipSetProps) => {\n    const { stnId, setIndex, onDelete } = props;\n    const classes = intChipSetStyles();\n    const dispatch = useAppDispatch();\n\n    const intInfos = useAppSelector(store => store.param.stn_list[stnId].transfer.info[setIndex]);\n\n    const [chipSelected, setChipSelected] = React.useState(-1);\n    const [nameDialogOpened, setNameDialogOpened] = React.useState(false);\n\n    const handleClick = (index: number) => {\n        setChipSelected(index);\n        setNameDialogOpened(true);\n    };\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'theme') {\n            const newInfo = (value as string[]).concat(Array(2)) as InterchangeInfo;\n            dispatch(updateInterchange(stnId, setIndex, chipSelected, newInfo));\n        }\n        if (key === 'name') {\n            const newInfo = Array(4).concat(value) as InterchangeInfo;\n            dispatch(updateInterchange(stnId, setIndex, chipSelected, newInfo));\n        }\n    };\n\n    const intChips = intInfos?.map((intInfo, i) => {\n        let label = (\n            <span style={{ color: intInfo[3] }}>\n                <span className={`${classes.intChipText} ${classes.intChipTextZH}`}>{intInfo[4]}</span>\n                <span className={`${classes.intChipText} ${classes.intChipTextEN}`}>{intInfo[5]}</span>\n            </span>\n        );\n        return (\n            <Chip\n                key={i}\n                label={label}\n                className={classes.intChip}\n                classes={{\n                    label: classes.intChipLabel,\n                    deleteIcon: classes.intChipDeleteIcon,\n                }}\n                style={{ backgroundColor: intInfo[2] }}\n                onDelete={() => onDelete(i)}\n                onClick={() => handleClick(i)}\n            />\n        );\n    });\n\n    return (\n        <div>\n            {intChips}\n\n            <ColourDialog\n                open={nameDialogOpened}\n                theme={\n                    intInfos?.[chipSelected] === undefined\n                        ? ([] as any as Theme)\n                        : [\n                              intInfos[chipSelected][0],\n                              intInfos[chipSelected][1],\n                              intInfos[chipSelected][2],\n                              intInfos[chipSelected][3] as MonoColour,\n                          ]\n                }\n                lineName={\n                    intInfos?.[chipSelected] === undefined\n                        ? ['', '']\n                        : [intInfos[chipSelected][4], intInfos[chipSelected][5]]\n                }\n                onUpdate={nameDialogUpdate}\n                onClose={() => setNameDialogOpened(false)}\n            />\n        </div>\n    );\n};\n\ninterface OSINameDialogProps {\n    open: boolean;\n    stnId: string;\n    setIndex: number;\n    onClose: () => void;\n}\n\nconst OSINameDialog = (props: OSINameDialogProps) => {\n    const { open, stnId, setIndex, onClose } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const osiName = useAppSelector(store => store.param.stn_list[stnId].transfer.osi_names[setIndex]) || [\n        '車站名',\n        'Stn Name',\n    ];\n\n    const handleUpdate =\n        (index: number) =>\n        ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n            let newOSIName = osiName.map((val, i) => (i === index ? value : val)) as Name;\n            dispatch(updateStationOsiName(stnId, setIndex, newOSIName));\n        };\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>{t('stations.edit.interchange.osiName')}</DialogTitle>\n            <DialogContent dividers>\n                <List>\n                    <NameListItems onUpdate={handleUpdate} name={osiName} />\n                </List>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\" autoFocus>\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nconst InterchangeMore = (props: { stnId: string }) => {\n    const { stnId } = props;\n    const { t } = useTranslation();\n    const dispatch = useAppDispatch();\n\n    const { transfer } = useAppSelector(store => store.param.stn_list[stnId]);\n\n    return React.useMemo(() => {\n        const tickDirecChange = ({ target: { value } }: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n            let direction = value;\n            if (direction === ShortDirection.left || direction === ShortDirection.right) {\n                dispatch(updateStationTickDirection(stnId, direction as ShortDirection));\n            }\n        };\n\n        return (\n            <>\n                <Divider />\n                <ListItem>\n                    <ListItemText>\n                        <h3 style={{ margin: 0 }}>{t('stations.edit.interchange.settings')}</h3>\n                    </ListItemText>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>format_textdirection_l_to_r</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.tickDirec.label')} />\n                    <ListItemSecondaryAction>\n                        <Select native value={transfer.tick_direc} onChange={tickDirecChange}>\n                            {Object.values(ShortDirection).map(d => (\n                                <option key={d} value={d}>\n                                    {t('stations.edit.interchange.tickDirec.' + d)}\n                                </option>\n                            ))}\n                        </Select>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>attach_money</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('stations.edit.interchange.paidArea')} />\n                    <ListItemSecondaryAction>\n                        <Switch\n                            color=\"primary\"\n                            edge=\"end\"\n                            onChange={(_, checked) => {\n                                dispatch(updateStationPaidArea(stnId, checked));\n                            }}\n                            checked={transfer.paid_area}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </>\n        );\n    }, [stnId, t, dispatch, transfer.paid_area, transfer.tick_direc]);\n};\n","var map = {\n\t\"./README.md\": [\n\t\t9542,\n\t\t1,\n\t\t9428\n\t],\n\t\"./baku\": [\n\t\t8962,\n\t\t9,\n\t\t2823\n\t],\n\t\"./baku.ts\": [\n\t\t8962,\n\t\t9,\n\t\t2823\n\t],\n\t\"./barcelona\": [\n\t\t2885,\n\t\t9,\n\t\t7328\n\t],\n\t\"./barcelona.ts\": [\n\t\t2885,\n\t\t9,\n\t\t7328\n\t],\n\t\"./beijing\": [\n\t\t2085,\n\t\t9,\n\t\t2783\n\t],\n\t\"./beijing.ts\": [\n\t\t2085,\n\t\t9,\n\t\t2783\n\t],\n\t\"./cairo\": [\n\t\t9878,\n\t\t9,\n\t\t4265\n\t],\n\t\"./cairo.ts\": [\n\t\t9878,\n\t\t9,\n\t\t4265\n\t],\n\t\"./changsha\": [\n\t\t6897,\n\t\t9,\n\t\t7111\n\t],\n\t\"./changsha.ts\": [\n\t\t6897,\n\t\t9,\n\t\t7111\n\t],\n\t\"./chengdu\": [\n\t\t3689,\n\t\t9,\n\t\t5226\n\t],\n\t\"./chengdu.ts\": [\n\t\t3689,\n\t\t9,\n\t\t5226\n\t],\n\t\"./chongqing\": [\n\t\t5482,\n\t\t9,\n\t\t8170\n\t],\n\t\"./chongqing.ts\": [\n\t\t5482,\n\t\t9,\n\t\t8170\n\t],\n\t\"./dalian\": [\n\t\t4939,\n\t\t9,\n\t\t5965\n\t],\n\t\"./dalian.ts\": [\n\t\t4939,\n\t\t9,\n\t\t5965\n\t],\n\t\"./delhi\": [\n\t\t2905,\n\t\t9,\n\t\t5140\n\t],\n\t\"./delhi.ts\": [\n\t\t2905,\n\t\t9,\n\t\t5140\n\t],\n\t\"./dongguan\": [\n\t\t6225,\n\t\t9,\n\t\t3836\n\t],\n\t\"./dongguan.ts\": [\n\t\t6225,\n\t\t9,\n\t\t3836\n\t],\n\t\"./dortmund\": [\n\t\t3096,\n\t\t9,\n\t\t368\n\t],\n\t\"./dortmund.ts\": [\n\t\t3096,\n\t\t9,\n\t\t368\n\t],\n\t\"./edinburgh\": [\n\t\t7552,\n\t\t9,\n\t\t6487\n\t],\n\t\"./edinburgh.ts\": [\n\t\t7552,\n\t\t9,\n\t\t6487\n\t],\n\t\"./foshan\": [\n\t\t4722,\n\t\t9,\n\t\t4100\n\t],\n\t\"./foshan.ts\": [\n\t\t4722,\n\t\t9,\n\t\t4100\n\t],\n\t\"./glasgow\": [\n\t\t7706,\n\t\t9,\n\t\t666\n\t],\n\t\"./glasgow.ts\": [\n\t\t7706,\n\t\t9,\n\t\t666\n\t],\n\t\"./guangzhou\": [\n\t\t1277,\n\t\t9,\n\t\t5668\n\t],\n\t\"./guangzhou.ts\": [\n\t\t1277,\n\t\t9,\n\t\t5668\n\t],\n\t\"./hangzhou\": [\n\t\t9236,\n\t\t9,\n\t\t2919\n\t],\n\t\"./hangzhou.ts\": [\n\t\t9236,\n\t\t9,\n\t\t2919\n\t],\n\t\"./harbin\": [\n\t\t8144,\n\t\t9,\n\t\t1818\n\t],\n\t\"./harbin.ts\": [\n\t\t8144,\n\t\t9,\n\t\t1818\n\t],\n\t\"./hongkong\": [\n\t\t4607,\n\t\t9,\n\t\t892\n\t],\n\t\"./hongkong.ts\": [\n\t\t4607,\n\t\t9,\n\t\t892\n\t],\n\t\"./istanbul\": [\n\t\t3153,\n\t\t9,\n\t\t83\n\t],\n\t\"./istanbul.ts\": [\n\t\t3153,\n\t\t9,\n\t\t83\n\t],\n\t\"./kansai\": [\n\t\t7285,\n\t\t9,\n\t\t2213\n\t],\n\t\"./kansai.ts\": [\n\t\t7285,\n\t\t9,\n\t\t2213\n\t],\n\t\"./kaohsiung\": [\n\t\t9488,\n\t\t9,\n\t\t7374\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t9488,\n\t\t9,\n\t\t7374\n\t],\n\t\"./klangvalley\": [\n\t\t7401,\n\t\t9,\n\t\t9938\n\t],\n\t\"./klangvalley.ts\": [\n\t\t7401,\n\t\t9,\n\t\t9938\n\t],\n\t\"./london\": [\n\t\t6497,\n\t\t9,\n\t\t6434\n\t],\n\t\"./london.ts\": [\n\t\t6497,\n\t\t9,\n\t\t6434\n\t],\n\t\"./macao\": [\n\t\t5386,\n\t\t9,\n\t\t2859\n\t],\n\t\"./macao.ts\": [\n\t\t5386,\n\t\t9,\n\t\t2859\n\t],\n\t\"./madrid\": [\n\t\t1890,\n\t\t9,\n\t\t7084\n\t],\n\t\"./madrid.ts\": [\n\t\t1890,\n\t\t9,\n\t\t7084\n\t],\n\t\"./nanjing\": [\n\t\t9096,\n\t\t9,\n\t\t6006\n\t],\n\t\"./nanjing.ts\": [\n\t\t9096,\n\t\t9,\n\t\t6006\n\t],\n\t\"./newtaipei\": [\n\t\t2654,\n\t\t9,\n\t\t3448\n\t],\n\t\"./newtaipei.ts\": [\n\t\t2654,\n\t\t9,\n\t\t3448\n\t],\n\t\"./osaka\": [\n\t\t1560,\n\t\t9,\n\t\t5349\n\t],\n\t\"./osaka.ts\": [\n\t\t1560,\n\t\t9,\n\t\t5349\n\t],\n\t\"./oslo\": [\n\t\t3619,\n\t\t9,\n\t\t5290\n\t],\n\t\"./oslo.ts\": [\n\t\t3619,\n\t\t9,\n\t\t5290\n\t],\n\t\"./other\": [\n\t\t1650,\n\t\t9,\n\t\t6643\n\t],\n\t\"./other.ts\": [\n\t\t1650,\n\t\t9,\n\t\t6643\n\t],\n\t\"./paris\": [\n\t\t256,\n\t\t9,\n\t\t1800\n\t],\n\t\"./paris.ts\": [\n\t\t256,\n\t\t9,\n\t\t1800\n\t],\n\t\"./qingdao\": [\n\t\t4348,\n\t\t9,\n\t\t1049\n\t],\n\t\"./qingdao.ts\": [\n\t\t4348,\n\t\t9,\n\t\t1049\n\t],\n\t\"./sanfrancisco\": [\n\t\t5522,\n\t\t9,\n\t\t4427\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t5522,\n\t\t9,\n\t\t4427\n\t],\n\t\"./sanktpeterburg\": [\n\t\t2086,\n\t\t9,\n\t\t1014\n\t],\n\t\"./sanktpeterburg.ts\": [\n\t\t2086,\n\t\t9,\n\t\t1014\n\t],\n\t\"./santiago\": [\n\t\t5320,\n\t\t9,\n\t\t7198\n\t],\n\t\"./santiago.ts\": [\n\t\t5320,\n\t\t9,\n\t\t7198\n\t],\n\t\"./saopaulo\": [\n\t\t4242,\n\t\t9,\n\t\t4786\n\t],\n\t\"./saopaulo.ts\": [\n\t\t4242,\n\t\t9,\n\t\t4786\n\t],\n\t\"./seoul\": [\n\t\t6331,\n\t\t9,\n\t\t309\n\t],\n\t\"./seoul.ts\": [\n\t\t6331,\n\t\t9,\n\t\t309\n\t],\n\t\"./shanghai\": [\n\t\t333,\n\t\t9,\n\t\t2907\n\t],\n\t\"./shanghai.ts\": [\n\t\t333,\n\t\t9,\n\t\t2907\n\t],\n\t\"./shenzhen\": [\n\t\t3129,\n\t\t9,\n\t\t7491\n\t],\n\t\"./shenzhen.ts\": [\n\t\t3129,\n\t\t9,\n\t\t7491\n\t],\n\t\"./singapore\": [\n\t\t7543,\n\t\t9,\n\t\t2879\n\t],\n\t\"./singapore.ts\": [\n\t\t7543,\n\t\t9,\n\t\t2879\n\t],\n\t\"./stockholm\": [\n\t\t2,\n\t\t9,\n\t\t9270\n\t],\n\t\"./stockholm.ts\": [\n\t\t2,\n\t\t9,\n\t\t9270\n\t],\n\t\"./suzhou\": [\n\t\t3222,\n\t\t9,\n\t\t1922\n\t],\n\t\"./suzhou.ts\": [\n\t\t3222,\n\t\t9,\n\t\t1922\n\t],\n\t\"./taipei\": [\n\t\t9004,\n\t\t9,\n\t\t325\n\t],\n\t\"./taipei.ts\": [\n\t\t9004,\n\t\t9,\n\t\t325\n\t],\n\t\"./tehran\": [\n\t\t5722,\n\t\t9,\n\t\t8927\n\t],\n\t\"./tehran.ts\": [\n\t\t5722,\n\t\t9,\n\t\t8927\n\t],\n\t\"./tianjin\": [\n\t\t8570,\n\t\t9,\n\t\t5967\n\t],\n\t\"./tianjin.ts\": [\n\t\t8570,\n\t\t9,\n\t\t5967\n\t],\n\t\"./tokyo\": [\n\t\t1908,\n\t\t9,\n\t\t9809\n\t],\n\t\"./tokyo.ts\": [\n\t\t1908,\n\t\t9,\n\t\t9809\n\t],\n\t\"./toronto\": [\n\t\t9907,\n\t\t9,\n\t\t5748\n\t],\n\t\"./toronto.ts\": [\n\t\t9907,\n\t\t9,\n\t\t5748\n\t],\n\t\"./tyneandwear\": [\n\t\t8675,\n\t\t9,\n\t\t470\n\t],\n\t\"./tyneandwear.ts\": [\n\t\t8675,\n\t\t9,\n\t\t470\n\t],\n\t\"./wuxi\": [\n\t\t9839,\n\t\t9,\n\t\t421\n\t],\n\t\"./wuxi.ts\": [\n\t\t9839,\n\t\t9,\n\t\t421\n\t],\n\t\"./xiamen\": [\n\t\t6081,\n\t\t9,\n\t\t3638\n\t],\n\t\"./xiamen.ts\": [\n\t\t6081,\n\t\t9,\n\t\t3638\n\t],\n\t\"./xian\": [\n\t\t1717,\n\t\t9,\n\t\t1839\n\t],\n\t\"./xian.ts\": [\n\t\t1717,\n\t\t9,\n\t\t1839\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 6273;\nmodule.exports = webpackAsyncContext;"],"names":["useStyles","makeStyles","createStyles","cityItem","display","flexDirection","alignItems","menuItemSpan","padding","button","borderRadius","height","width","minWidth","marginRight","inputColour","position","left","top","buttonContainer","flexShrink","PalettePanel","props","useTranslation","t","i18n","classes","lineList","theme","React","list","setList","listPromise","then","module","default","Promise","resolve","useEffect","data","CityCode","colour","fg","MonoColour","toString","useLineList","length","filter","l","id","newTheme","onUpdate","List","component","disablePadding","CitySelectItem","value","onChange","event","target","slice","Divider","variant","ListItem","ListItemText","primary","TextField","select","style","line","disabled","map","MenuItem","className","backgroundColor","color","getTransText2","name","languages","CustomPanel","useState","hexTemp","setHexTemp","type","rgb","opacity","htmlFor","Tooltip","title","Button","borderColor","error","match","hex","val","idx","toUpperCase","Select","native","label","items","useMemo","cityList","c","CountryFlag","code","country","useEmojiStyles","img","codePoints","split","char","codePointAt","concat","LanguageCode","includes","language","navigator","platform","indexOf","src","process","join","alt","String","fromCodePoint","cp","parseInt","contentWrapper","overflow","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","breakpoints","down","contentLeft","maxWidth","contentControl","flexGrow","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","textAlign","fontSize","inputBaseInputEN","chipWrapper","overflowX","chipRoot","lineHeight","margin","chipLabel","Dialog","open","onClose","DialogTitle","DialogContent","LineNameInput","lineName","RecentChipSet","ColourControl","DialogActions","onClick","nameChange","index","newName","Paper","Icon","InputBase","root","input","e","autoFocus","useAppSelector","store","param","line_name","stationList","stn_list","allInfos","Set","Object","values","reduce","acc","info","transfer","JSON","stringify","reverse","chips","x","i","parse","txt","Chip","secondary","secondaryTypographyProps","tabIndex","setTabIndex","tabNav","Tabs","indicatorColor","textColor","_","scrollButtons","Tab","panel","listItemIcon","ListItemIcon","helperText","stnId","dispatch","useAppDispatch","rmgStyle","osiNameDialog0Opened","setOsiNameDialog0Opened","osiNameDialog1Opened","setOsiNameDialog1Opened","addClick","newInfo","addInterchange","deleteClick","setIdx","intIdx","removeInterchange","ListItemSecondaryAction","IconButton","InterchangeChipSet","setIndex","onDelete","RmgStyle","whiteSpace","osi_names","OSINameDialog","InterchangeMore","intChipSetStyles","intChip","intChipText","intChipTextZH","intChipTextEN","intChipLabel","intChipDeleteIcon","marginLeft","intInfos","chipSelected","setChipSelected","nameDialogOpened","setNameDialogOpened","intChips","intInfo","deleteIcon","undefined","key","Array","updateInterchange","osiName","dividers","newOSIName","updateStationOsiName","tick_direc","direction","ShortDirection","updateStationTickDirection","d","Switch","edge","checked","updateStationPaidArea","paid_area","webpackAsyncContext","req","__webpack_require__","o","Error","ids","keys","exports"],"sourceRoot":""}