{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","panels/stations/edit-diag/name-tab.tsx"],"names":["SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","undefined","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","Switch","_props$color","color","_props$edge","edge","_props$size","size","thumb","edgeStart","edgeEnd","concat","capitalize","switchBase","track","theme","display","overflow","boxSizing","flexShrink","verticalAlign","marginLeft","marginRight","palette","grey","transition","transitions","create","duration","shortest","transform","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","Collapse","children","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","Component","inProp","in","onEnter","onEntered","onEntering","onExit","onExiting","style","_props$timeout","timeout","standard","useTheme","timer","wrapperRef","autoTransitionDuration","clearTimeout","current","Transition","node","isAppearing","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","getAutoHeightDuration","addEndListener","_","next","setTimeout","state","childProps","container","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","visibility","NameTab","rmgStyle","useContext","CanvasContext","NumInput","NameInput","SecondaryNameInput","useStyles","makeStyles","createStyles","lineNumRoot","alignItems","justifyContent","border","borderRightWidth","minWidth","fontSize","numInput","borderLeftWidth","marginTop","textAlign","nameInputZH","lineHeight","nameInputEN","fontFamily","join","collapseWrapper","collapseWrapperInner","secondaryNameRoot","secondaryNameParenthesis","secondaryNameInputRoot","flexDirection","secondaryNameInputZH","ParamContext","param","dispatch","line_num","fullWidth","stn_list","stnId","num","e","t","useTranslation","linestart","placeholder","helperText","secondaryName","unmountOnExit"],"mappings":"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","file":"static/js/panelStationsName.f774531c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  };\n\n  var handleEntered = function handleEntered(node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExiting = function handleExiting(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: ref\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import React, { useContext } from 'react';\nimport {\n    TextField,\n    makeStyles,\n    createStyles,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    Switch,\n    ListItemText,\n    Collapse,\n    ListItemIcon,\n    Icon,\n} from '@material-ui/core';\nimport { ParamContext, CanvasContext } from '../../../context';\nimport { useTranslation } from 'react-i18next';\n\ninterface Props {\n    stnId: string;\n}\n\nconst NameTab = (props: Props) => {\n    const { rmgStyle } = useContext(CanvasContext);\n\n    return (\n        <List component=\"div\">\n            {rmgStyle === 'gzmtr' && <NumInput {...props} />}\n            <NameInput {...props} />\n            {rmgStyle === 'gzmtr' && <SecondaryNameInput {...props} />}\n        </List>\n    );\n};\n\nexport default NameTab;\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        lineNumRoot: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            border: 'solid 2px',\n            borderRightWidth: 1,\n            borderRadius: '32px 0 0 32px',\n            padding: '2px 5px',\n            minWidth: 32,\n            height: 32,\n            fontSize: '1.5rem',\n        },\n        numInput: {\n            display: 'inline-block',\n            border: 'solid 2px',\n            borderLeftWidth: 1,\n            borderRadius: '0 32px 32px 0',\n            padding: '2px 5px',\n            width: 32,\n            height: 32,\n            '& .MuiInputBase-root': {\n                marginTop: 1.7,\n            },\n            '& .MuiInputBase-input': {\n                fontSize: '1.5rem',\n                padding: 'unset',\n                textAlign: 'center',\n            },\n        },\n        nameInputZH: {\n            '& .MuiInputBase-input': {\n                textAlign: 'center',\n                fontSize: '3rem',\n                lineHeight: '3rem',\n            },\n        },\n        nameInputEN: {\n            '& .MuiInputBase-input': {\n                textAlign: 'center',\n                fontSize: '1.2rem',\n                lineHeight: '1.2rem',\n            },\n        },\n        'nameInputZH-mtr': {\n            '& .MuiInputBase-input': {\n                fontFamily: [\n                    'Myriad Pro',\n                    'Vegur',\n                    'Noto Serif KR',\n                    'Noto Serif JP',\n                    'Noto Serif TC',\n                    'Noto Serif SC',\n                    'HiraMinProN-W6',\n                    'serif',\n                ].join(),\n            },\n        },\n        'nameInputEN-mtr': {\n            '& .MuiInputBase-input': {\n                fontFamily: ['Myriad Pro', 'Vegur', 'Arial', 'sans-serif'].join(),\n            },\n        },\n        'nameInputZH-gzmtr': {\n            '& .MuiInputBase-input': {\n                fontFamily: ['Arial', 'STKaiti', 'KaiTi', 'sans-serif'].join(),\n            },\n        },\n        collapseWrapper: {\n            justifyContent: 'center',\n        },\n        collapseWrapperInner: {\n            width: '65%',\n        },\n        secondaryNameRoot: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            '& .MuiInputBase-input': {\n                textAlign: 'center',\n            },\n        },\n        secondaryNameParenthesis: {\n            fontSize: '4rem',\n        },\n        secondaryNameInputRoot: {\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n        },\n        secondaryNameInputZH: {\n            '& .MuiInputBase-input': {\n                fontSize: '1.5rem',\n                lineHeight: '1.5rem',\n            },\n        },\n    })\n);\n\nconst NumInput = (props: Props) => {\n    const classes = useStyles();\n    const { param, dispatch } = useContext(ParamContext);\n    return (\n        <ListItem style={{ justifyContent: 'center' }}>\n            <div className={classes.lineNumRoot}>\n                <span>{param.line_num}</span>\n            </div>\n            <TextField\n                fullWidth\n                className={classes.numInput}\n                value={param.stn_list[props.stnId]?.num}\n                onChange={e => dispatch({ type: 'UPDATE_STATION_NUM', stnId: props.stnId, num: e.target.value })}\n            />\n        </ListItem>\n    );\n};\n\nconst NameInput = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { rmgStyle } = useContext(CanvasContext);\n    const { param, dispatch } = useContext(ParamContext);\n    const { name } = param.stn_list[props.stnId] || param.stn_list.linestart;\n    return (\n        <ListItem style={{ flexDirection: 'column' }}>\n            <TextField\n                fullWidth\n                placeholder={t('editor.zh')}\n                className={`${classes.nameInputZH} ${\n                    rmgStyle === 'gzmtr'\n                        ? classes['nameInputZH-gzmtr']\n                        : rmgStyle === 'mtr'\n                        ? classes['nameInputZH-mtr']\n                        : ''\n                }`}\n                value={name[0]}\n                onChange={e =>\n                    dispatch({ type: 'UPDATE_STATION_NAME', stnId: props.stnId, name: [e.target.value, name[1]] })\n                }\n                autoFocus\n            />\n            <TextField\n                fullWidth\n                placeholder={t('editor.en')}\n                className={`${classes.nameInputEN} ${rmgStyle === 'mtr' ? classes['nameInputEN-mtr'] : ''}`}\n                value={name[1]}\n                onChange={e =>\n                    dispatch({ type: 'UPDATE_STATION_NAME', stnId: props.stnId, name: [name[0], e.target.value] })\n                }\n                helperText={t('editor.backslashToWrap')}\n            />\n        </ListItem>\n    );\n};\n\nconst SecondaryNameInput = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = useContext(ParamContext);\n    const { secondaryName } = param.stn_list[props.stnId] || param.stn_list.linestart;\n    return (\n        <>\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>text_fields</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('stations.edit.name.secondary')} />\n                <ListItemSecondaryAction>\n                    <Switch\n                        color=\"primary\"\n                        edge=\"end\"\n                        checked={secondaryName !== false}\n                        onChange={(_, checked) =>\n                            dispatch({\n                                type: 'UPDATE_STATION_SECONDARY_NAME',\n                                stnId: props.stnId,\n                                name: checked ? ['', ''] : false,\n                            })\n                        }\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n            <Collapse\n                in={secondaryName !== false}\n                unmountOnExit\n                classes={{ wrapper: classes.collapseWrapper, wrapperInner: classes.collapseWrapperInner }}\n            >\n                <div className={classes.secondaryNameRoot}>\n                    <span className={classes.secondaryNameParenthesis}>{'('}</span>\n                    <div className={classes.secondaryNameInputRoot}>\n                        <TextField\n                            fullWidth\n                            placeholder={t('editor.zh')}\n                            className={classes.secondaryNameInputZH}\n                            value={secondaryName ? secondaryName[0] : ''}\n                            onChange={e =>\n                                dispatch({\n                                    type: 'UPDATE_STATION_SECONDARY_NAME',\n                                    stnId: props.stnId,\n                                    name: [e.target.value, secondaryName ? secondaryName[1] : ''],\n                                })\n                            }\n                        />\n                        <TextField\n                            fullWidth\n                            placeholder={t('editor.en')}\n                            value={secondaryName ? secondaryName[1] : ''}\n                            onChange={e =>\n                                dispatch({\n                                    type: 'UPDATE_STATION_SECONDARY_NAME',\n                                    stnId: props.stnId,\n                                    name: [secondaryName ? secondaryName[0] : '', e.target.value],\n                                })\n                            }\n                        />\n                    </div>\n                    <span className={classes.secondaryNameParenthesis}>{')'}</span>\n                </div>\n            </Collapse>\n        </>\n    );\n};\n"],"sourceRoot":""}