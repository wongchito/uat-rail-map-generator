{"version":3,"sources":["panels/design/list-shmetro.tsx"],"names":["DesignListShmetro","PanelTypeLi","t","useTranslation","reduxDispatch","useDispatch","panelType","useSelector","store","param","info_panel_type","dispatch","useContext","ParamContext","useMemo","style","transform","primary","native","value","onChange","target","type","variant","setPanelType","width","Object","values","PanelTypeShmetro","map"],"mappings":"iIAAA,sEA+BeA,UApBW,WACtB,OACI,qCAYI,cAAC,UAAD,IACA,cAACC,EAAD,QAOZ,IAAMA,EAAc,WAChB,IAAQC,EAAMC,2BAAND,EACFE,EAAgBC,wBAEhBC,EAAYC,uBAAY,SAACC,GAAD,OAAsBA,EAAMC,MAAMC,mBACxDC,EAAaC,qBAAWC,KAAxBF,SAER,OAAOG,mBAAQ,WAKX,OACI,eAAC,WAAD,WACI,cAAC,eAAD,UACI,cAAC,OAAD,CAAMC,MAAO,CAAEC,UAAW,kBAA1B,2BAEJ,cAAC,eAAD,CAAcC,QAASf,EAAE,6BACzB,cAAC,SAAD,CAAQgB,QAAM,EAACC,MAAOb,EAAWc,SAVpB,SAAC,GAA2E,IAA/DD,EAA8D,EAAxEE,OAAUF,MAC9BR,EAAS,CAAEW,KAAM,iBAAkBC,QAASJ,IAC5Cf,EAAcoB,YAAaL,KAQkCJ,MAAO,CAAEU,MAAO,KAAzE,SACKC,OAAOC,OAAOC,KAAkBC,KAAI,SAAAP,GAAI,OACrC,wBAAmBH,MAAOG,EAA1B,SACKpB,EAAE,oBAAsBoB,IADhBA,aAO9B,CAAChB,EAAWJ,EAAGS,EAAUP","file":"static/js/panelDesignShmetro.5e02bab6.chunk.js","sourcesContent":["import React, { ChangeEvent, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ListItem, ListItemIcon, Icon, ListItemText, Divider, Select } from '@material-ui/core';\n\nimport { ParamContext } from '../../context';\nimport { PanelTypeShmetro } from '../../constants/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../redux';\nimport { setPanelType } from '../../redux/param/action';\n\nconst DesignListShmetro = () => {\n    return (\n        <>\n            {/* TODO: Platform Door Number could be added\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>looks_one</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.psd')} />\n                <TextField\n                    value={param.psd_num}\n                    onChange={e => dispatch({ type: 'SET_PSD_NUM', num: e.target.value })}\n                />\n            </ListItem> */}\n            <Divider />\n            <PanelTypeLi />\n        </>\n    );\n};\n\nexport default DesignListShmetro;\n\nconst PanelTypeLi = () => {\n    const { t } = useTranslation();\n    const reduxDispatch = useDispatch();\n\n    const panelType = useSelector((store: RootState) => store.param.info_panel_type);\n    const { dispatch } = useContext(ParamContext);\n\n    return useMemo(() => {\n        const handleChange = ({ target: { value } }: ChangeEvent<{ name?: string; value: unknown }>) => {\n            dispatch({ type: 'SET_PANEL_TYPE', variant: value as PanelTypeShmetro });\n            reduxDispatch(setPanelType(value as PanelTypeShmetro));\n        };\n        return (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon style={{ transform: 'rotate(180deg)' }}>credit_card</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.panelType.button')} />\n                <Select native value={panelType} onChange={handleChange} style={{ width: 166 }}>\n                    {Object.values(PanelTypeShmetro).map(type => (\n                        <option key={type} value={type}>\n                            {t('design.panelType.' + type)}\n                        </option>\n                    ))}\n                </Select>\n            </ListItem>\n        );\n    }, [panelType, t, dispatch, reduxDispatch]);\n};\n"],"sourceRoot":""}