{"version":3,"sources":["panels/layout/gzmtr.tsx"],"names":["useStyles","makeStyles","theme","createStyles","nestedList","paddingLeft","spacing","slider","width","marginLeft","marginRight","React","DirectionGZLi","t","useTranslation","classes","ParamContext","param","dispatch","isOpen","setIsOpen","button","onClick","prevOpen","primary","color","in","unmountOnExit","component","disablePadding","className","value","direction_gz_x","onChange","_event","type","step","marks","label","valueLabelDisplay","variant","direction_gz_y"],"mappings":"6QAgBMA,EAAYC,aAAW,SAAAC,GAAK,OAC9BC,YAAa,CACTC,WAAY,CACRC,YAAaH,EAAMI,QAAQ,IAE/BC,OAAQ,CACJC,MAAO,IACPC,WAAY,EACZC,YAAa,QAKVC,kBAAW,WACtB,OACI,qCACI,cAAC,IAAD,IACA,cAACC,EAAD,UAKZ,IAAMA,EAAgB,WAClB,IAAQC,EAAMC,cAAND,EACFE,EAAUf,IAChB,EAA4BW,aAAiBK,KAArCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,EAA4BP,YAAe,GAA3C,mBAAOQ,EAAP,KAAeC,EAAf,KAEA,OAAOT,WACH,kBACI,qCACI,eAAC,IAAD,CAAUU,QAAM,EAACC,QAAS,kBAAMF,GAAU,SAAAG,GAAQ,OAAKA,MAAvD,UACI,cAAC,IAAD,UACI,cAAC,IAAD,0BAEJ,cAAC,IAAD,CAAcC,QAASX,EAAE,8BACxBM,EAAS,cAAC,IAAD,CAAMM,MAAM,SAAZ,yBAA0C,cAAC,IAAD,CAAMA,MAAM,SAAZ,4BAExD,cAAC,IAAD,CAAUC,GAAIP,EAAQQ,eAAa,EAAnC,SACI,eAAC,IAAD,CAAMC,UAAU,MAAMC,gBAAc,EAACC,UAAWf,EAAQX,WAAxD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAcoB,QAASX,EAAE,mCACzB,cAAC,IAAD,CACIiB,UAAWf,EAAQR,OACnBwB,MAAOd,EAAMe,eACbC,SAAU,SAACC,EAAQH,GAAT,OACNb,EAAS,CAAEiB,KAAM,qBAAsBJ,MAAOA,KAElDK,KAAM,IACNC,MAAO,CACH,CAAEN,MAAO,EAAGO,MAAOzB,EAAE,4BACrB,CAAEkB,MAAO,IAAKO,MAAOzB,EAAE,8BAE3B0B,kBAAkB,YAG1B,cAAC,IAAD,CAASC,QAAQ,WACjB,eAAC,IAAD,WACI,cAAC,IAAD,CAAchB,QAASX,EAAE,iCACzB,cAAC,IAAD,CACIiB,UAAWf,EAAQR,OACnBwB,MAAOd,EAAMwB,eACbR,SAAU,SAACC,EAAQH,GAAT,OACNb,EAAS,CAAEiB,KAAM,qBAAsBJ,MAAOA,KAElDK,KAAM,IACNC,MAAO,CACH,CAAEN,MAAO,EAAGO,MAAOzB,EAAE,2BACrB,CAAEkB,MAAO,IAAKO,MAAOzB,EAAE,+BAE3B0B,kBAAkB,sBAQ1C,CAACtB,EAAMe,eAAgBf,EAAMwB,eAAgBtB,EAAQJ,EAAQX,WAAYW,EAAQR","file":"static/js/panelLayoutGZMTR.13fee59c.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    Slider,\n    ListItem,\n    ListItemText,\n    Icon,\n    Collapse,\n    makeStyles,\n    createStyles,\n    List,\n    ListItemIcon,\n    Divider,\n} from '@material-ui/core';\nimport { ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        nestedList: {\n            paddingLeft: theme.spacing(5),\n        },\n        slider: {\n            width: 168,\n            marginLeft: 8,\n            marginRight: 8,\n        },\n    })\n);\n\nexport default React.memo(function LayoutGZMTR() {\n    return (\n        <>\n            <Divider />\n            <DirectionGZLi />\n        </>\n    );\n});\n\nconst DirectionGZLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    return React.useMemo(\n        () => (\n            <>\n                <ListItem button onClick={() => setIsOpen(prevOpen => !prevOpen)}>\n                    <ListItemIcon>\n                        <Icon>open_with</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('layout.directionGZ.title')} />\n                    {isOpen ? <Icon color=\"action\">expand_less</Icon> : <Icon color=\"action\">expand_more</Icon>}\n                </ListItem>\n                <Collapse in={isOpen} unmountOnExit>\n                    <List component=\"div\" disablePadding className={classes.nestedList}>\n                        <ListItem>\n                            <ListItemText primary={t('layout.directionGZ.horizontal')} />\n                            <Slider\n                                className={classes.slider}\n                                value={param.direction_gz_x}\n                                onChange={(_event, value) =>\n                                    dispatch({ type: 'SET_DIRECTION_GZ_X', value: value as number })\n                                }\n                                step={0.01}\n                                marks={[\n                                    { value: 0, label: t('layout.directionGZ.left') },\n                                    { value: 100, label: t('layout.directionGZ.right') },\n                                ]}\n                                valueLabelDisplay=\"auto\"\n                            />\n                        </ListItem>\n                        <Divider variant=\"middle\" />\n                        <ListItem>\n                            <ListItemText primary={t('layout.directionGZ.vertical')} />\n                            <Slider\n                                className={classes.slider}\n                                value={param.direction_gz_y}\n                                onChange={(_event, value) =>\n                                    dispatch({ type: 'SET_DIRECTION_GZ_Y', value: value as number })\n                                }\n                                step={0.01}\n                                marks={[\n                                    { value: 0, label: t('layout.directionGZ.top') },\n                                    { value: 100, label: t('layout.directionGZ.bottom') },\n                                ]}\n                                valueLabelDisplay=\"auto\"\n                            />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.direction_gz_x, param.direction_gz_y, isOpen, classes.nestedList, classes.slider]\n    );\n};\n"],"sourceRoot":""}