{"version":3,"sources":["i18n.ts","app-appbar.tsx","error-boundary.tsx","svgs/svg.tsx","svgs/index.ts","panels/panels.tsx","panels/index.tsx","App.tsx","serviceWorker.ts","index.tsx","context.ts","methods.ts","constants/constants.ts","utils.ts"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","default","backend","loadPath","process","interpolation","escapeValue","then","t","document","title","documentElement","setAttribute","language","useStyles","makeStyles","theme","createStyles","rootLight","backgroundColor","palette","primary","main","rootDark","background","paper","flexGrow","color","menuButton","AppAppBar","useTranslation","classes","prefersDarkMode","useMediaQuery","React","AppBar","position","className","Toolbar","variant","Typography","includes","CanvasToggle","CanvasContext","canvasAvailable","setCanvasToShown","canvasButtonEl","setCanvasButtonEl","handleClick","action","Tooltip","IconButton","onClick","e","currentTarget","Icon","Menu","anchorEl","open","Boolean","onClose","map","c","MenuItem","Divider","style","margin","toString","ZoomToggles","setCanvasScale","prevScale","ErrorBoundary","props","state","hasError","error","errorInfo","this","children","Component","root","display","flexDirection","overflowX","content","flex","border","SVGs","param","useContext","ParamContext","canvasScale","sharedProps","useCallback","canvas","id","xmlns","xmlnsXlink","height","svg_height","viewBox","svgWidth","colorInterpolationFilters","JSON","stringify","Object","keys","canvasList","s","path","StyleSpecificSVGs","rmgStyle","svgProps","to","URLSearchParams","window","location","search","get","memo","canvasToShown","setCanvasAvailable","useEffect","ProvidedCanvases","forEach","getElementById","href","prevCanvas","Suspense","fallback","CircularProgress","fill","width","strokeWidth","stroke","RunInGZMTR","lazy","RailMapGZMTR","DestinationMTR","RailMapMTR","DestinationSHMetro","RunInSHMetro","RailMapSHMetro","gzmtr","runin","railmap","mtr","destination","shmetro","PanelSave","PanelLayout","PanelDesign","PanelStations","PanelInfo","breakpoints","down","typography","tab","padding","up","justifyContent","minWidth","minHeight","marginBottom","paddingLeft","tabs","overflow","scrollbarWidth","WebkitOverflowScrolling","tabpanel","spacing","paddingBottom","alignItems","PanelTab","useTheme","isMobile","value","setValue","tabNav","component","Tabs","orientation","indicatorColor","textColor","onChange","_","val","scrollButtons","i","Tab","label","icon","role","index","panel","Panel","darkTheme","createMuiTheme","type","secondary","overrides","MuiDialog","lightTheme","light","App","useState","localStorage","rmgCanvas","setItem","Number","rmgScale","toFixed","basename","ThemeProvider","Provider","pathname","split","LinearProgress","AppBody","useReducer","paramReducer","parse","rmgParam","dispatch","paramString","deps","stn_list","reduce","acc","cur","k","o","a","branches","useMemo","getBranches","routes","getRoutes","tpo","useTpo","overflowY","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","console","message","head","append","tag","link","createElement","rel","renderApp","ReactDOM","querySelectorAll","updateParam","err","alert","removeItem","module","createContext","data","key","targetId","y_pc","branch_spacing","direction_gz_x","direction_gz_y","line_name","name","direction","platform_num","platform","namePosMTR","isStagger","checked","isFlip","customiseMTRDest","isLegacy","terminal","line_num","num","psd_num","info_panel_type","notesGZMTR","concat","filter","idx","note","current_stn_idx","stnId","lineend","parents","slice","reverse","branch","left","right","linestart","secondaryName","transfer","info","setIdx","nextInfo","infos","intIdx","int","j","undefined","osi_names","tick_direc","paid_area","isPaid","branchType","first","facility","services","Array","from","isChecked","Set","add","serviceId","stnList","getYShareMTR","length","stnPred","indexOf","log","stack","branchCount","curId","shift","prevId","push","branchNextId","setTpo","res","PanelTypesGZMTR","PanelTypesShmetro","dest_legacy","fontZH","fontEN","weightZH","weightEN","entries","stnInfo","interchange","arr","intInfo","splice","change_type","usage","svg_dest_width","svg_width","char_form","show_outer","strip_pc","txt_bg_gap","txt_flip","join","getTransText2","obj","langs","l","en","formatStnName","replace"],"mappings":"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","file":"static/js/main.d37c4bb7.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: {\n            'zh-CN': ['zh-Hans', 'en'],\n            'zh-Hant': ['zh-HK', 'en'],\n            'zh-HK': ['zh-Hant', 'en'],\n            'zh-TW': ['zh-HK', 'zh-Hant'],\n            default: ['en'],\n        },\n        // debug: true,\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: process.env.PUBLIC_URL + '/locale/{{lng}}.json',\n        },\n\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n    })\n    .then(t => {\n        document.title = t('title');\n        document.documentElement.setAttribute('lang', i18n.language);\n    });\n","import * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    AppBar,\n    Toolbar,\n    Tooltip,\n    IconButton,\n    Typography,\n    Icon,\n    makeStyles,\n    createStyles,\n    Menu,\n    MenuItem,\n    Divider,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { CanvasContext } from './context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        rootLight: {\n            backgroundColor: theme.palette.primary.main,\n        },\n        rootDark: {\n            backgroundColor: theme.palette.background.paper,\n        },\n        title: {\n            flexGrow: 1,\n            color: '#fff',\n        },\n        menuButton: {\n            color: '#fff',\n        },\n    })\n);\n\nconst AppAppBar = () => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    return React.useMemo(\n        () => (\n            <AppBar position=\"sticky\" className={prefersDarkMode ? classes.rootDark : classes.rootLight}>\n                <Toolbar variant=\"dense\">\n                    <Typography variant=\"h6\" className={classes.title} color=\"textPrimary\">\n                        {process.env.PUBLIC_URL.includes('uat') ? t('titleUAT') : t('title')}\n                    </Typography>\n\n                    <CanvasToggle />\n                    <ZoomToggles />\n                </Toolbar>\n            </AppBar>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [prefersDarkMode, i18n.language]\n    );\n};\n\nexport default AppAppBar;\n\nconst CanvasToggle = () => {\n    const { t } = useTranslation();\n\n    const classes = useStyles();\n\n    const { canvasAvailable, setCanvasToShown } = React.useContext(CanvasContext);\n    const [canvasButtonEl, setCanvasButtonEl] = React.useState<null | HTMLElement>(null);\n    const handleClick = (action: ProvidedCanvas | 'all') => () => {\n        setCanvasToShown(action);\n        setCanvasButtonEl(null);\n    };\n\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('toggle.tooltip')}>\n                    <IconButton onClick={e => setCanvasButtonEl(e.currentTarget)} className={classes.menuButton}>\n                        <Icon>photo_library</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Menu anchorEl={canvasButtonEl} open={Boolean(canvasButtonEl)} onClose={() => setCanvasButtonEl(null)}>\n                    {canvasAvailable.map((c: ProvidedCanvas) => (\n                        <MenuItem key={c} onClick={handleClick(c)}>\n                            {t('toggle.' + c)}\n                        </MenuItem>\n                    ))}\n                    <Divider style={{ margin: '6px 0' }} />\n                    <MenuItem onClick={handleClick('all')}>{t('toggle.all')}</MenuItem>\n                </Menu>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [canvasAvailable.toString(), canvasButtonEl, classes.menuButton]\n    );\n};\n\nconst ZoomToggles = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { setCanvasScale } = React.useContext(CanvasContext);\n    return React.useMemo(\n        () => (\n            <>\n                <Tooltip title={t('zoom.out')}>\n                    <IconButton\n                        onClick={() =>\n                            setCanvasScale((prevScale: number) => (prevScale <= 0.1 ? prevScale : prevScale - 0.1))\n                        }\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_out</Icon>\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title={t('zoom.in')}>\n                    <IconButton\n                        onClick={() => setCanvasScale((prevScale: number) => prevScale + 0.1)}\n                        className={classes.menuButton}\n                    >\n                        <Icon>zoom_in</Icon>\n                    </IconButton>\n                </Tooltip>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [classes.menuButton]\n    );\n};\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component<{ children: React.ReactNode }, { hasError: boolean }> {\n    constructor(props: { children: React.ReactNode }) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error: any) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: any, errorInfo: any) {\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return <h1>Something went wrong.</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n","import React, { useContext, useEffect, memo, lazy } from 'react';\nimport { makeStyles, createStyles, CircularProgress } from '@material-ui/core';\nimport { CanvasContext, ParamContext } from '../context';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport ErrorBoundary from '../error-boundary';\n\nimport { ProvidedCanvases } from '../constants/constants';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexDirection: 'row',\n            overflowX: 'scroll',\n            '&::before, &::after': {\n                content: '\"\"',\n                margin: 'auto',\n            },\n            '& > svg': {\n                flex: '0 0 auto',\n                border: '1px solid black',\n            },\n        },\n    })\n);\n\nconst SVGs = () => {\n    const classes = useStyles();\n\n    const { param } = React.useContext(ParamContext);\n    const { canvasScale } = React.useContext(CanvasContext);\n\n    const sharedProps = React.useCallback(\n        (canvas: ProvidedCanvas): React.SVGProps<SVGSVGElement> => ({\n            id: canvas,\n            xmlns: 'http://www.w3.org/2000/svg',\n            xmlnsXlink: 'http://www.w3.org/1999/xlink',\n            height: param.svg_height * canvasScale,\n            viewBox: `0 0 ${param.svgWidth[canvas]} ${param.svg_height}`,\n            colorInterpolationFilters: 'sRGB',\n            style: {\n                ['--rmg-svg-width' as any]: param.svgWidth[canvas] + 'px',\n                ['--rmg-svg-height' as any]: param.svg_height + 'px',\n                ['--rmg-theme-colour' as any]: param.theme[2],\n                ['--rmg-theme-fg' as any]: param.theme[3],\n            },\n        }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.svg_height, JSON.stringify(param.svgWidth), param.theme[2], param.theme[3], canvasScale]\n    );\n\n    return (\n        <div className={classes.root}>\n            <Switch>\n                {(Object.keys(canvasList) as ProvidedStyles[]).map(s => (\n                    <Route path={`/${s}`} key={s}>\n                        <StyleSpecificSVGs rmgStyle={s} canvasAvailable={canvasList[s]} svgProps={sharedProps} />\n                    </Route>\n                ))}\n                <Redirect to={'/' + (new URLSearchParams(window.location.search).get('style') || 'mtr')} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default SVGs;\n\nconst StyleSpecificSVGs = memo(\n    (props: {\n        rmgStyle: ProvidedStyles;\n        canvasAvailable: { [canvas in ProvidedCanvas]?: JSX.Element };\n        svgProps: (canvas: ProvidedCanvas) => React.SVGProps<SVGSVGElement>;\n    }) => {\n        const { canvasToShown, setCanvasToShown, setCanvasAvailable } = useContext(CanvasContext);\n        useEffect(\n            () => {\n                ['share', ...ProvidedCanvases].forEach(canvas => {\n                    if (canvas in props.canvasAvailable || canvas === 'share') {\n                        (document.getElementById('css_' + canvas) as HTMLLinkElement).href =\n                            process.env.PUBLIC_URL + `/styles/${canvas}_${props.rmgStyle}.css`;\n                    } else {\n                        (document.getElementById('css_' + canvas) as HTMLLinkElement).href = '';\n                    }\n                });\n                setCanvasAvailable(Object.keys(props.canvasAvailable) as ProvidedCanvas[]);\n                setCanvasToShown(prevCanvas =>\n                    ['all', ...Object.keys(props.canvasAvailable)].includes(prevCanvas) ? prevCanvas : 'all'\n                );\n            },\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            []\n        );\n\n        return (\n            <>\n                {(Object.keys(props.canvasAvailable) as (keyof typeof props.canvasAvailable)[]).map(\n                    canvas =>\n                        ['all', canvas].includes(canvasToShown) && (\n                            <React.Suspense key={canvas} fallback={<CircularProgress />}>\n                                <ErrorBoundary>\n                                    <svg {...props.svgProps(canvas)}>\n                                        <rect\n                                            id=\"canvas-bg\"\n                                            fill=\"white\"\n                                            style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n                                        />\n                                        {props.canvasAvailable[canvas]}\n                                        <rect\n                                            id=\"canvas-border\"\n                                            fill=\"none\"\n                                            strokeWidth={3}\n                                            stroke=\"none\"\n                                            style={{ height: 'var(--rmg-svg-height)', width: 'var(--rmg-svg-width)' }}\n                                        />\n                                    </svg>\n                                </ErrorBoundary>\n                            </React.Suspense>\n                        )\n                )}\n            </>\n        );\n    }\n);\n\n// Canvas available\n\nconst RunInGZMTR = lazy(() => import(/* webpackChunkName: \"runinGZMTR\" */ './runin/runin-gzmtr'));\nconst RailMapGZMTR = lazy(() => import(/* webpackChunkName: \"railmapGZMTR\" */ './railmap/railmap-gzmtr'));\n\nconst DestinationMTR = lazy(() => import(/* webpackChunkName: \"destinationMTR\" */ './destination/destination-mtr'));\nconst RailMapMTR = lazy(() => import(/* webpackChunkName: \"railmapMTR\" */ './railmap/railmap-mtr'));\n\nconst DestinationSHMetro = lazy(() =>\n    import(/* webpackChunkName: \"destinationSHMetro\" */ './destination/destination-shmetro')\n);\nconst RunInSHMetro = lazy(() => import(/* webpackChunkName: \"runinSHMetro\" */ './runin/runin-shmetro'));\nconst RailMapSHMetro = lazy(() => import(/* webpackChunkName: \"railmapSHMetro\" */ './railmap/railmap-shmetro'));\n\n/**\n * Each value of this object is an object of ORDERED key-value pairs\n */\nconst canvasList: { [s in ProvidedStyles]: { [c in ProvidedCanvas]?: JSX.Element } } = {\n    gzmtr: {\n        runin: <RunInGZMTR />,\n        railmap: <RailMapGZMTR />,\n    },\n    mtr: {\n        destination: <DestinationMTR />,\n        railmap: <RailMapMTR />,\n    },\n    shmetro: {\n        destination: <DestinationSHMetro />,\n        runin: <RunInSHMetro />,\n        railmap: <RailMapSHMetro />,\n    },\n};\n","import SVGs from './svg';\n\nexport default SVGs;","import * as React from 'react';\n\nimport {\n    Typography,\n    CircularProgress,\n    Tabs,\n    Tab,\n    Icon,\n    makeStyles,\n    createStyles,\n    useTheme,\n    useMediaQuery,\n} from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\nconst PanelSave = React.lazy(() => import(/* webpackChunkName: \"panelSave\" */ './save'));\nconst PanelLayout = React.lazy(() => import(/* webpackChunkName: \"panelLayout\" */ './layout'));\nconst PanelDesign = React.lazy(() => import(/* webpackChunkName: \"panelDesign\" */ './design'));\nconst PanelStations = React.lazy(() => import(/* webpackChunkName: \"panelStations\" */ './stations'));\nconst PanelInfo = React.lazy(() => import(/* webpackChunkName: \"panelInfo\" */ './panel-info'));\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexDirection: 'row',\n            height: '100%',\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        typography: {\n            background: theme.palette.background.default,\n        },\n        tab: {\n            padding: '6px 24px',\n            height: 48,\n            '& .MuiTab-wrapper': {\n                flexDirection: 'row',\n            },\n            [theme.breakpoints.up('sm')]: {\n                '& .MuiTab-wrapper': {\n                    justifyContent: 'flex-start',\n                },\n            },\n            [theme.breakpoints.down('xs')]: {\n                minWidth: 'calc(100% / 5)',\n            },\n            '&.MuiTab-labelIcon': {\n                minHeight: 'unset',\n                '& .MuiTab-wrapper': {\n                    '& > *:first-child': {\n                        marginBottom: 0,\n                    },\n                    '& > *:not(first-child)': {\n                        paddingLeft: 8,\n                    },\n                },\n            },\n        },\n        tabs: {\n            overflow: 'auto',\n            '&::-webkit-scrollbar': {\n                width: 0,\n            },\n            scrollbarWidth: 'none',\n            WebkitOverflowScrolling: 'touch',\n        },\n        tabpanel: {\n            overflow: 'auto',\n            flex: 1,\n            padding: theme.spacing(3),\n            paddingBottom: 0,\n            height: `calc(100% - ${theme.spacing(3)}px)`,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n        },\n    })\n);\n\nexport default function PanelTab() {\n    const { t, i18n } = useTranslation();\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const [value, setValue] = React.useState(0);\n\n    const panel = (index: number) => {\n        switch (index) {\n            case 0:\n                return <PanelSave />;\n            case 1:\n                return <PanelLayout />;\n            case 2:\n                return <PanelDesign />;\n            case 3:\n                return <PanelStations />;\n            case 4:\n                return <PanelInfo />;\n            default:\n                return <PanelSave />;\n        }\n    };\n\n    const tabNav = React.useMemo(\n        () => (\n            <Typography className={`${classes.typography} ${classes.tabs}`} component=\"div\">\n                <Tabs\n                    value={value}\n                    orientation={isMobile ? 'horizontal' : 'vertical'}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(_, val) => setValue(val)}\n                    variant=\"scrollable\"\n                    scrollButtons=\"off\"\n                >\n                    {[\n                        ['file', 'insert_drive_file'],\n                        ['layout', 'panorama'],\n                        ['design', 'brush'],\n                        ['stations', 'directions_transit'],\n                        ['info', 'info'],\n                    ].map((val, i) => (\n                        <Tab\n                            label={<span>{t('tab.' + val[0])}</span>}\n                            icon={<Icon>{val[1]}</Icon>}\n                            key={i}\n                            className={classes.tab}\n                        />\n                    ))}\n                </Tabs>\n            </Typography>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [value, i18n.language, classes.tab, isMobile]\n    );\n\n    return (\n        <div className={classes.root}>\n            {tabNav}\n            <Typography className={`${classes.typography} ${classes.tabpanel}`} component=\"div\" role=\"tabpanel\">\n                <React.Suspense fallback={<CircularProgress />}>{panel(value)}</React.Suspense>\n            </Typography>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport PanelTabs from './panels';\n\nexport default function Panel() {\n    return (\n        <React.Suspense fallback={<CircularProgress />}>\n            <PanelTabs />\n        </React.Suspense>\n    );\n}\n","import React, { useState, useMemo, useEffect, useReducer } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppAppBar from './app-appbar';\nimport SVGs from './svgs';\nimport Panels from './panels';\nimport { getBranches, useTpo, getRoutes } from './methods';\nimport { CanvasContext, ParamContext, paramReducer } from './context';\nimport { createMuiTheme, ThemeProvider, useMediaQuery, LinearProgress } from '@material-ui/core';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#bb86fc',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#cf6679',\n        },\n    },\n    // palette: {\n    //     type: 'dark',\n    //     primary: {\n    //         main: '#8ab4f8',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#bb86fc',\n            main: '#6200ee',\n        },\n        secondary: {\n            main: '#018786',\n        },\n        error: {\n            main: '#b00020',\n        },\n    },\n    // palette: {\n    //     primary: {\n    //         main: '#1a73e8',\n    //     },\n    //     text: {\n    //         primary: '#202124',\n    //         secondary: '#5f6368',\n    //     },\n    // },\n    overrides: {\n        MuiDialog: {\n            paper: {\n                minWidth: 280,\n            },\n        },\n    },\n});\n\nexport default function App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = prefersDarkMode ? darkTheme : lightTheme;\n\n    const [canvasAvailable, setCanvasAvailable] = useState<ProvidedCanvas[]>([]);\n    const [canvasToShown, setCanvasToShown] = useState<'all' | ProvidedCanvas>(localStorage.rmgCanvas);\n    useEffect(() => localStorage.setItem('rmgCanvas', canvasToShown), [canvasToShown]);\n    const [canvasScale, setCanvasScale] = useState(\n        Number(localStorage.rmgScale) >= 0.1 ? Number(localStorage.rmgScale) : 1\n    );\n    useEffect(() => localStorage.setItem('rmgScale', canvasScale.toFixed(1)), [canvasScale]);\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <ThemeProvider theme={theme}>\n                <CanvasContext.Provider\n                    value={{\n                        rmgStyle: window.location.pathname.split('/')[2] as ProvidedStyles,\n                        canvasAvailable,\n                        setCanvasAvailable,\n                        canvasToShown,\n                        setCanvasToShown,\n                        canvasScale,\n                        setCanvasScale,\n                    }}\n                >\n                    <React.Suspense fallback={<LinearProgress />}>\n                        <AppAppBar />\n                    </React.Suspense>\n                    <AppBody />\n                </CanvasContext.Provider>\n            </ThemeProvider>\n        </BrowserRouter>\n    );\n}\n\nconst AppBody = () => {\n    const [param, dispatch] = useReducer(paramReducer, JSON.parse(localStorage.rmgParam) as RMGParam);\n    const paramString = JSON.stringify(param);\n    useEffect(() => localStorage.setItem('rmgParam', paramString), [paramString]);\n\n    const deps = Object.keys(param.stn_list).reduce(\n        (acc, cur) =>\n            acc +\n            cur +\n            ((...k: (keyof StationInfo)[]) => (o: StationInfo) => k.reduce((a, c) => a + JSON.stringify(o[c]), ''))(\n                'parents',\n                'children',\n                'branch'\n            )(param.stn_list[cur]),\n        ''\n    );\n\n    const branches = useMemo(\n        () => getBranches(param.stn_list),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [deps]\n    );\n    const routes = useMemo(\n        () => getRoutes(param.stn_list),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [deps]\n    );\n    const tpo = useTpo(branches);\n\n    return (\n        <>\n            <ParamContext.Provider\n                value={{\n                    param,\n                    dispatch,\n                    branches,\n                    routes,\n                    deps,\n                    tpo,\n                }}\n            >\n                <div style={{ overflowY: 'auto' }}>\n                    <SVGs />\n                </div>\n                <div style={{ flex: 1, overflow: 'hidden' }}>\n                    <Panels />\n                </div>\n            </ParamContext.Provider>\n            <canvas style={{ display: 'none' }} />\n        </>\n    );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport './i18n';\nimport App from './App';\nimport { updateParam } from './utils';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ProvidedCanvases } from './constants/constants';\n\ndeclare global {\n    interface Window {\n        gtag: any;\n    }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// load empty stylesheet elements\ndocument.head.append(\n    ...['share', ...ProvidedCanvases].map(tag => {\n        let link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.id = 'css_' + tag;\n        return link;\n    })\n);\n\nconst renderApp = () => {\n    ReactDOM.render(\n        // <React.Suspense fallback=\"loading\">\n        <App />,\n        // </React.Suspense>,\n        document.querySelectorAll('div#root')[0]\n    );\n};\n\nif (localStorage.rmgParam) {\n    try {\n        updateParam();\n    } catch (err) {\n        alert(err + 'Something error! Please refresh to start from a new canvas. ');\n        console.error(err);\n        localStorage.removeItem('rmgParam');\n    }\n    renderApp();\n} else {\n    import('./constants/templates/basic/blank')\n        .then(module => {\n            localStorage.setItem('rmgParam', JSON.stringify(module.default));\n            updateParam();\n        })\n        .then(() => renderApp());\n}\n","import React, { createContext } from 'react';\n\ninterface ICanvasContext {\n    rmgStyle: ProvidedStyles;\n    canvasAvailable: ProvidedCanvas[];\n    setCanvasAvailable: React.Dispatch<React.SetStateAction<ProvidedCanvas[]>>;\n    canvasToShown: ProvidedCanvas | 'all';\n    setCanvasToShown: React.Dispatch<React.SetStateAction<ProvidedCanvas | 'all'>>;\n    canvasScale: number;\n    setCanvasScale: React.Dispatch<React.SetStateAction<number>>;\n}\n\ninterface IParamContext {\n    param: RMGParam;\n    dispatch: React.Dispatch<ReducerAction>;\n    branches: string[][];\n    routes: string[][];\n    deps: string;\n    tpo: string[];\n}\n\nexport const CanvasContext = createContext<ICanvasContext>({} as ICanvasContext);\nexport const ParamContext = createContext<IParamContext>({} as IParamContext);\n\ntype ReducerAction =\n    | { type: 'GLOBAL'; data: RMGParam }\n    | {\n          type: 'ANY';\n          key: string;\n          data: any;\n      }\n    | {\n          type: 'SET_HEIGHT';\n          value: number;\n      }\n    | {\n          type: 'SET_WIDTH';\n          targetId: ProvidedCanvas;\n          value: number;\n      }\n    | {\n          type: 'SET_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_BRANCH_SPACING';\n          value: number;\n      }\n    | {\n          type: 'SET_PADDING';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_X';\n          value: number;\n      }\n    | {\n          type: 'SET_DIRECTION_GZ_Y';\n          value: number;\n      }\n    | {\n          type: 'SET_LINE_NAME';\n          name: Name;\n      }\n    | {\n          type: 'SET_THEME';\n          theme: [string, string, string, '#fff' | '#000'];\n      }\n    | {\n          type: 'SET_DIRECTION';\n      }\n    | {\n          type: 'SET_PLATFORM';\n          platform: string | false;\n      }\n    | {\n          type: 'SET_TEXT_STAGGER';\n          checked: boolean;\n      }\n    | {\n          type: 'SET_TEXT_FLIP';\n      }\n    | {\n          type: 'SET_DEST_LEGACY';\n          isLegacy: boolean;\n      }\n    | {\n          type: 'SET_TERMINAL_OVERRIDE';\n          terminal: Name | false;\n      }\n    | {\n          type: 'SET_LINE_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PSD_NUM';\n          num: string;\n      }\n    | {\n          type: 'SET_PANEL_TYPE';\n          variant: PanelTypeGZMTR | PanelTypeShmetro;\n      }\n    | {\n          type: 'ADD_NOTE_GZMTR';\n      }\n    | {\n          type: 'REMOVE_NOTE_GZMTR';\n          idx: number;\n      }\n    | {\n          type: 'UPDATE_NOTE_GZMTR';\n          idx: number;\n          note: Note;\n      }\n    | {\n          type: 'SET_CURRENT_STATION';\n          stnId: string;\n      }\n    | {\n          type: 'REVERSE_STATIONS';\n      }\n    | {\n          type: 'UPDATE_STATION_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_SECONDARY_NAME';\n          stnId: string;\n          name: false | Name;\n      }\n    | {\n          type: 'UPDATE_STATION_NUM';\n          stnId: string;\n          num: string;\n      }\n    | {\n          type: 'ADD_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          info: InterchangeInfo;\n      }\n    | {\n          type: 'REMOVE_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          intIdx: number;\n      }\n    | {\n          type: 'UPDATE_STATION_INTERCHANGE_INFO';\n          stnId: string;\n          setIdx: number;\n          intIdx: number;\n          info: InterchangeInfo;\n      }\n    | {\n          type: 'UPDATE_STATION_OSI_NAME';\n          stnId: string;\n          name: Name;\n      }\n    | {\n          type: 'UPDATE_STATION_TICK_DIREC';\n          stnId: string;\n          direction: 'l' | 'r';\n      }\n    | {\n          type: 'UPDATE_STATION_PAID_AREA';\n          stnId: string;\n          isPaid: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_TYPE';\n          stnId: string;\n          direction: 'left' | 'right';\n          branchType: 'through' | 'nonthrough';\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_FIRST';\n          branches: [\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              },\n              {\n                  stnId: string;\n                  direction: 'left' | 'right';\n                  first: string;\n              }\n          ];\n      }\n    | {\n          type: 'UPDATE_STATION_BRANCH_POS';\n          left: string;\n          right: string;\n      }\n    | {\n          type: 'UPDATE_STATION_FACILITY';\n          stnId: string;\n          facility: '' | 'airport' | 'hsr' | 'disney';\n      }\n    | {\n          type: 'UPDATE_STATION_SERVICES';\n          stnId: string;\n          serviceId: Services;\n          isChecked: boolean;\n      }\n    | {\n          type: 'UPDATE_STATION_LIST';\n          stnList: StationDict;\n      };\n\nexport const paramReducer = (state: RMGParam, action: ReducerAction): RMGParam => {\n    switch (action.type) {\n        case 'GLOBAL':\n            return action.data;\n        case 'ANY':\n            return {\n                ...state,\n                [action.key]: action.data,\n            };\n        case 'SET_HEIGHT':\n            return {\n                ...state,\n                svg_height: action.value,\n            };\n        case 'SET_WIDTH':\n            return {\n                ...state,\n                svgWidth: {\n                    ...state.svgWidth,\n                    [action.targetId]: action.value,\n                },\n            };\n        case 'SET_Y':\n            return {\n                ...state,\n                y_pc: action.value,\n            };\n        case 'SET_BRANCH_SPACING':\n            return {\n                ...state,\n                branch_spacing: action.value,\n            };\n        case 'SET_PADDING':\n            return {\n                ...state,\n                padding: action.value,\n            };\n        case 'SET_DIRECTION_GZ_X':\n            return {\n                ...state,\n                direction_gz_x: action.value,\n            };\n        case 'SET_DIRECTION_GZ_Y':\n            return {\n                ...state,\n                direction_gz_y: action.value,\n            };\n        case 'SET_LINE_NAME':\n            return {\n                ...state,\n                line_name: action.name,\n            };\n        case 'SET_THEME':\n            return {\n                ...state,\n                theme: action.theme,\n            };\n        case 'SET_DIRECTION':\n            return {\n                ...state,\n                direction: state.direction === 'l' ? 'r' : 'l',\n            };\n        case 'SET_PLATFORM':\n            return {\n                ...state,\n                platform_num: action.platform,\n            };\n        case 'SET_TEXT_STAGGER':\n            return {\n                ...state,\n                namePosMTR: {\n                    ...state.namePosMTR,\n                    isStagger: action.checked,\n                },\n            };\n        case 'SET_TEXT_FLIP':\n            return {\n                ...state,\n                namePosMTR: {\n                    ...state.namePosMTR,\n                    isFlip: !state.namePosMTR.isFlip,\n                },\n            };\n        case 'SET_DEST_LEGACY':\n            return {\n                ...state,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    isLegacy: action.isLegacy,\n                },\n            };\n        case 'SET_TERMINAL_OVERRIDE':\n            return {\n                ...state,\n                customiseMTRDest: {\n                    ...state.customiseMTRDest,\n                    terminal: action.terminal,\n                },\n            };\n        case 'SET_LINE_NUM':\n            return {\n                ...state,\n                line_num: action.num,\n            };\n        case 'SET_PSD_NUM':\n            return {\n                ...state,\n                psd_num: action.num,\n            };\n        case 'SET_PANEL_TYPE':\n            return {\n                ...state,\n                info_panel_type: action.variant,\n            };\n        case 'ADD_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.concat([['', '', 0, 0, false]]),\n            };\n        case 'REMOVE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.filter((_, i) => i !== action.idx),\n            };\n        case 'UPDATE_NOTE_GZMTR':\n            return {\n                ...state,\n                notesGZMTR: state.notesGZMTR?.map((note, i) => (i === action.idx ? action.note : note)),\n            };\n        case 'SET_CURRENT_STATION':\n            return {\n                ...state,\n                current_stn_idx: action.stnId,\n            };\n        case 'REVERSE_STATIONS':\n            return {\n                ...state,\n                stn_list: Object.keys(state.stn_list).reduce(\n                    (acc, stnId) => ({\n                        ...acc,\n                        [stnId]: (id => {\n                            switch (id) {\n                                case 'linestart':\n                                    return {\n                                        ...state.stn_list.lineend,\n                                        parents: [],\n                                        children: state.stn_list.lineend.parents.slice().reverse(),\n                                        branch: { left: [] as [], right: state.stn_list.lineend.branch.left },\n                                    };\n                                case 'lineend':\n                                    return {\n                                        ...state.stn_list.linestart,\n                                        parents: state.stn_list.linestart.children.slice().reverse(),\n                                        children: [],\n                                        branch: { left: state.stn_list.linestart.branch.right, right: [] as [] },\n                                    };\n                                default:\n                                    return {\n                                        ...state.stn_list[id],\n                                        parents: state.stn_list[id].children\n                                            .map(id =>\n                                                id === 'linestart' ? 'lineend' : id === 'lineend' ? 'linestart' : id\n                                            )\n                                            .reverse(),\n                                        children: state.stn_list[id].parents\n                                            .map(id =>\n                                                id === 'linestart' ? 'lineend' : id === 'lineend' ? 'linestart' : id\n                                            )\n                                            .reverse(),\n                                        branch: {\n                                            left: state.stn_list[id].branch.right,\n                                            right: state.stn_list[id].branch.left,\n                                        },\n                                    };\n                            }\n                        })(stnId),\n                    }),\n                    {} as StationDict\n                ),\n            };\n        case 'UPDATE_STATION_NAME':\n            // window.myLine.updateStnName(action.stnId, action.name);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        name: action.name,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_SECONDARY_NAME':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        secondaryName: action.name,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_NUM':\n            // (window.myLine as RMGLineGZ).updateStnNum(action.stnId, action.num);\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        num: action.num,\n                    },\n                },\n            };\n        case 'ADD_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: (({ setIdx, info }) => {\n                                let nextInfo = state.stn_list[action.stnId].transfer.info.slice();\n                                nextInfo[setIdx] = (nextInfo[setIdx] || ([] as InterchangeInfo[])).concat([info]);\n                                return nextInfo;\n                            })(action),\n                        },\n                    },\n                },\n            };\n        case 'REMOVE_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: state.stn_list[action.stnId].transfer.info.map((infos, i) =>\n                                i === action.setIdx\n                                    ? infos.slice(0, action.intIdx).concat(infos.slice(action.intIdx + 1))\n                                    : infos\n                            ),\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_INTERCHANGE_INFO':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            info: state.stn_list[action.stnId].transfer?.info.map((infos, i) =>\n                                i === action.setIdx\n                                    ? infos.map((int, j) =>\n                                          j === action.intIdx\n                                              ? (([0, 1, 2, 3, 4, 5].map(k =>\n                                                    action.info[k] === undefined ? int[k] : action.info[k]\n                                                ) as unknown) as InterchangeInfo)\n                                              : int\n                                      )\n                                    : infos\n                            ),\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_OSI_NAME':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            osi_names: [action.name],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_TICK_DIREC':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            tick_direc: action.direction,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_PAID_AREA':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        transfer: {\n                            ...state.stn_list[action.stnId].transfer,\n                            paid_area: action.isPaid,\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_TYPE':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        branch: {\n                            ...state.stn_list[action.stnId].branch,\n                            [action.direction]: [\n                                action.branchType,\n                                state.stn_list[action.stnId].branch[action.direction][1],\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_FIRST':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.branches[0].stnId]: {\n                        ...state.stn_list[action.branches[0].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[0].stnId].branch,\n                            [action.branches[0].direction]: [\n                                state.stn_list[action.branches[0].stnId].branch[action.branches[0].direction][0],\n                                action.branches[0].first,\n                            ],\n                        },\n                    },\n                    [action.branches[1].stnId]: {\n                        ...state.stn_list[action.branches[1].stnId],\n                        branch: {\n                            ...state.stn_list[action.branches[1].stnId].branch,\n                            [action.branches[1].direction]: [\n                                state.stn_list[action.branches[1].stnId].branch[action.branches[1].direction][0],\n                                action.branches[1].first,\n                            ],\n                        },\n                    },\n                },\n            };\n        case 'UPDATE_STATION_BRANCH_POS':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.left]: {\n                        ...state.stn_list[action.left],\n                        parents: state.stn_list[action.left].parents.slice().reverse(),\n                    },\n                    [action.right]: {\n                        ...state.stn_list[action.right],\n                        children: state.stn_list[action.right].children.slice().reverse(),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_FACILITY':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        facility: action.facility,\n                    },\n                },\n            };\n        case 'UPDATE_STATION_SERVICES':\n            return {\n                ...state,\n                stn_list: {\n                    ...state.stn_list,\n                    [action.stnId]: {\n                        ...state.stn_list[action.stnId],\n                        services: Array.from(\n                            action.isChecked\n                                ? new Set(state.stn_list[action.stnId].services).add(action.serviceId)\n                                : state.stn_list[action.stnId].services.filter(s => s !== action.serviceId)\n                        ),\n                    },\n                },\n            };\n        case 'UPDATE_STATION_LIST':\n            return {\n                ...state,\n                stn_list: action.stnList,\n            };\n        default:\n            return state;\n    }\n};\n","import React from 'react';\n\n/**\n * Vertical position (in shares) of station icon if using MTR style (for consistency of method `RMGLine.newStnPossibleLoc()`).\n */\nexport const getYShareMTR = (stnId: string, stnList: StationDict): -1 | 0 | 1 => {\n    if (\n        ['linestart', 'lineend'].includes(stnId) ||\n        stnList[stnId].parents.length > 1 ||\n        stnList[stnId].children.length > 1\n    ) {\n        return 0;\n    }\n    var stnPred = stnList[stnId].parents[0];\n    if (stnPred) {\n        // parent exist\n        if (stnList[stnPred].children.length === 1) {\n            // no sibling, then y same as parent\n            return getYShareMTR(stnPred, stnList);\n        } else {\n            // sibling exists, then y depends on its idx of being children\n            return stnList[stnPred].children.indexOf(stnId) === 0 ? 1 : -1;\n        }\n    } else {\n        // no parent, must be linestart\n        return 0;\n    }\n};\n\n/**\n * Getter of all branches (支線段) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui]\n * [2]: [University, Racecourse, Sha Tin]\n * /\n */\nexport const getBranches = (stnList: StationDict) => {\n    console.log('computing branches');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    let branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push([curId]);\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                            // all branching out nodes are added to stack in the first loop\n                        }\n                    }\n                    curId = children.filter(stnId => stnId !== branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1]) {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Getter of all routes (行車交路) of the line (both ends included). The first branch must be the main line.\n * @example MTREastRailLine.branches\n * /*\n * [0]: [LineStart, Lo Wu, Sheung Shui, ..., Hung Hom, LineEnd]\n * [1]: [LineStart, Lok Ma Chau, Sheung Shui, ..., Hung Hom, LineEnd]\n * [2]: [LineStart, Lo Wu, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * [3]: [LineStart, Lok Ma Chau, Sheung Shui, ..., University, Racecourse, Sha Tin, ..., Hung Hom, LineEnd]\n * /\n */\nexport const getRoutes = (stnList: StationDict) => {\n    console.log('computing routes');\n\n    var stack = ['linestart'];\n    var branches = [['linestart']];\n    var branchCount = 0;\n\n    while (stack.length) {\n        var curId = stack.shift() as string;\n        var prevId = branches[branchCount].slice().reverse()[0] || null;\n        if (prevId && curId !== 'linestart') {\n            branches[branchCount].push(curId);\n        } else {\n            branches[branchCount] = [curId];\n        }\n        while (curId !== 'lineend') {\n            prevId = curId;\n            var children = stnList[prevId].children;\n            switch (children.length) {\n                case 1:\n                    curId = children[0];\n                    break;\n                case 2:\n                    let branchNextId = stnList[prevId].branch.right[1] as string;\n                    // if (branchCount === 0) {\n                    if (stnList[prevId].branch.right[0] === 'through') {\n                        branches.push(branches[branchCount].slice());\n                        stack.push(branchNextId);\n                    } else {\n                        if (branchCount === 0) {\n                            branches.push([prevId]);\n                            stack.push(branchNextId);\n                        }\n                        // branches.push([prevId]);\n                    }\n                    // stack.push(branchNextId);\n                    // }\n                    curId = children.filter(stnId => stnId !== branchNextId)[0];\n                    break;\n            }\n            branches[branchCount].push(curId);\n\n            if (prevId === stnList[curId].branch.left[1] && stnList[curId].branch.left[0] === 'nonthrough') {\n                break;\n            }\n        }\n        // branches[branchCount] = curBranch;\n        branchCount++;\n    }\n\n    return branches;\n};\n\n/**\n * Memo of topological ordering for all stations by stacking all branches into an one-dimensional array.\n * @param branches Branches from `useBranches` memo\n */\nexport const useTpo = (branches: string[][]) => {\n    const [tpo, setTpo] = React.useState([] as string[]);\n\n    React.useEffect(\n        () => {\n            console.log('computing tpo');\n            if (branches.length === 1) {\n                setTpo(branches[0].slice(1, -1));\n                return;\n            } else {\n                let res = branches\n                    .reduce(\n                        (acc, cur) => {\n                            let idx = acc.indexOf(cur.slice(-1)[0]);\n                            return acc.slice(0, idx).concat(cur.slice(1), acc.slice(idx + 1));\n                        },\n                        ['lineend']\n                    )\n                    .slice(0, -1);\n                setTpo(res);\n                return;\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [branches.toString()]\n    );\n\n    return tpo;\n};\n","export const ProvidedCanvases: ProvidedCanvas[] = ['destination', 'runin', 'railmap'];\n\nexport const PanelTypesGZMTR: PanelTypeGZMTR[] = [\n    'gz1',\n    'gz2otis',\n    'gz28',\n    'gz3',\n    'gz4',\n    'gz1421',\n    'gz5',\n    'gz6',\n    'gzgf',\n];\n\nexport const PanelTypesShmetro: PanelTypeShmetro[] = [\n    'sh',\n    'sh2020',\n];\n","export function updateParam() {\n    var param = JSON.parse(localStorage.rmgParam) as { [x: string]: any };\n\n    // Version 0.10\n    if (!('line_name' in param)) {\n        param.line_name = ['路線名', 'Name of Line'];\n    }\n    if (!('dest_legacy' in param)) {\n        param.dest_legacy = false;\n    }\n\n    // Version 0.11\n    delete param.fontZH;\n    delete param.fontEN;\n    delete param.weightZH;\n    delete param.weightEN;\n\n    // Version 0.12\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('branch' in stnInfo)) {\n            param.stn_list[stnId].branch = { left: [], right: [] };\n            if (stnInfo.children.length === 2) {\n                param.stn_list[stnId].branch.right = ['through', stnInfo.children[1]];\n            } else {\n                param.stn_list[stnId].branch.right = [];\n            }\n            if (stnInfo.parents.length === 2) {\n                param.stn_list[stnId].branch.left = ['through', stnInfo.parents[1]];\n            } else {\n                param.stn_list[stnId].branch.left = [];\n            }\n        }\n    }\n\n    // Version 1.2\n    if (!('psd_num' in param)) {\n        param.psd_num = '1';\n    } else {\n        param.psd_num = param.psd_num.toString();\n    }\n\n    if (!('line_num' in param)) {\n        param.line_num = '1';\n    }\n    delete param.style;\n    if (param.theme.length === 3) {\n        param.theme.push('#fff');\n    }\n\n    // Version 1.3\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('num' in stnInfo)) {\n            param.stn_list[stnId].num = '00';\n        }\n        if ('interchange' in stnInfo) {\n            stnInfo.interchange.map((arr: any) => {\n                return arr.forEach((intInfo: any) => {\n                    if (intInfo.length === 5) {\n                        intInfo.splice(3, 0, '#fff');\n                    }\n                });\n            });\n        }\n    }\n\n    // Version 1.5\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (stnInfo.change_type === 'osi22_end_p') {\n            param.stn_list[stnId].change_type = 'osi22_pr';\n        }\n        if (stnInfo.change_type === 'osi22_end_u') {\n            param.stn_list[stnId].change_type = 'osi22_ur';\n        }\n    }\n\n    // Version 2.1\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('interchange' in stnInfo)) {\n            param.stn_list[stnId].interchange = [[]];\n        }\n    }\n\n    // Version 1.4\n    // Version 2.2\n    // Version 2.3\n    if (!('info_panel_type' in param)) {\n        param.info_panel_type = 'gz28';\n    } else {\n        param.info_panel_type = (type => {\n            switch (type) {\n                case 'gz_1':\n                case 'panasonic':\n                    return 'gz28';\n                case 'gz_2':\n                    return 'gz6';\n                case 'gz_3':\n                    return 'gz3';\n                default:\n                    return type;\n            }\n        })(param.info_panel_type);\n    }\n\n    if (!('direction_gz_x' in param)) {\n        param.direction_gz_x = 50;\n    }\n    if (!('direction_gz_y' in param)) {\n        param.direction_gz_y = 70;\n    }\n\n    // Version 2.6\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('transfer' in stnInfo)) {\n            param.stn_list[stnId].transfer = {\n                // type: stnInfo.change_type?.split('_')[0] as 'none' | 'int2' | 'int3' | 'osi11' | 'osi12' | 'osi22',\n                tick_direc:\n                    stnInfo.change_type === 'none' || stnInfo.change_type === 'int2'\n                        ? 'r'\n                        : (stnInfo.change_type\n                              ?.split('_')[1]\n                              .split('')\n                              .slice()\n                              .reverse()[0] as 'l' | 'r'),\n                paid_area:\n                    stnInfo.change_type?.indexOf('osi') !== -1 ? stnInfo.change_type?.split('_')[1][0] === 'p' : true,\n                osi_names: stnInfo.change_type?.indexOf('osi') !== -1 ? [stnInfo.interchange[1][0]] : [],\n                info:\n                    stnInfo.interchange.length === 2\n                        ? [stnInfo.interchange[0], stnInfo.interchange[1].slice(1)]\n                        : stnInfo.interchange,\n            };\n        }\n        delete param.stn_list[stnId].change_type;\n        delete param.stn_list[stnId].interchange;\n    }\n\n    // Version 2.8\n    // Version 3.0\n    for (let [stnId, stnInfo] of Object.entries(param.stn_list as { [x: string]: any })) {\n        if (!('services' in stnInfo)) {\n            param.stn_list[stnId].services = ['local'];\n        }\n        if (!('facility' in stnInfo)) {\n            if ('usage' in stnInfo) {\n                param.stn_list[stnId].facility = stnInfo.usage;\n            } else {\n                param.stn_list[stnId].facility = '';\n            }\n        }\n        delete param.stn_list[stnId].usage;\n    }\n\n    // Version 3.4\n    if (!('customiseMTRDest' in param)) {\n        param.customiseMTRDest = { isLegacy: param.dest_legacy || false, terminal: false };\n    }\n    delete param.dest_legacy;\n\n    // Version 3.4\n    if (!('svgWidth' in param)) {\n        param.svgWidth = {\n            destination: param.svg_dest_width,\n            runin: param.svg_dest_width,\n            railmap: param.svg_width,\n        };\n    }\n    delete param.svg_width;\n    delete param.svg_dest_width;\n\n    if (!('notesGZMTR' in param)) {\n        param.notesGZMTR = [];\n    }\n\n    param.notesGZMTR = param.notesGZMTR?.map((note: any[]) =>\n        note.length === 4 ? note.concat([false]) : note\n    ) as Note[];\n\n    // Version 3.5.3\n    delete param.char_form;\n    delete param.show_outer;\n    delete param.strip_pc;\n    delete param.txt_bg_gap;\n\n    // Version 3.5.4\n    if (!('namePosMTR' in param)) {\n        param.namePosMTR = {\n            isStagger: true,\n            isFlip: param.txt_flip,\n        };\n    }\n    delete param.txt_flip;\n\n    // Version 3.5.6\n    // Version 3.6.2\n    Object.keys(param.stn_list).forEach(stnId => {\n        if (!('secondaryName' in param.stn_list[stnId])) {\n            param.stn_list[stnId].secondaryName = false;\n        } else {\n            if (param.stn_list[stnId].secondaryName !== false && param.stn_list[stnId].secondaryName.join() === ',') {\n                param.stn_list[stnId].secondaryName = false;\n            }\n        }\n\n        if ('type' in param.stn_list[stnId].transfer) {\n            delete param.stn_list[stnId].transfer.type;\n        }\n    });\n\n    localStorage.setItem('rmgParam', JSON.stringify(param));\n}\n\nexport const getTransText2 = (obj: ITrans, langs: string[]) => {\n    for (let l of langs) {\n        if (obj[l]) return obj[l];\n    }\n    return obj.en;\n};\n\n/**\n * Format display style of station name as `[num: ]nameZH,nameEN`.\n */\nexport const formatStnName = (stnInfo: StationInfo, style: ProvidedStyles) =>\n    (style === 'gzmtr' ? (stnInfo?.num || '-') + ': ' : '') + stnInfo?.name.join().replace('\\\\', ' ');\n"],"sourceRoot":""}