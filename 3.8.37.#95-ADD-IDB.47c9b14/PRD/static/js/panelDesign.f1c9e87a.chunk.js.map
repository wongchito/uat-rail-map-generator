{"version":3,"sources":["panels/colour-diag/colours lazy /^/.//.*$/ groupOptions: {} namespace object","panels/colour-diag/data.ts","panels/colour-diag/theme-items.tsx","panels/colour-diag/dialog.tsx","panels/colour-diag/index.ts","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","panels/design/list-common.tsx","panels/design/panel.tsx","panels/design/index.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","cityList","country","name","en","zh","ga","ja","pt","ko","useStyles","makeStyles","createStyles","cityItem","display","flexDirection","alignItems","menuItemSpan","padding","button","borderRadius","height","width","minWidth","marginRight","inputColour","position","left","top","buttonContainer","flexShrink","PalettePanel","props","useTranslation","t","i18n","classes","lineList","theme","React","useState","list","setList","listPromise","default","useEffect","a","data","colour","fg","toString","useLineList","length","filter","l","newTheme","onUpdate","List","component","disablePadding","value","onChange","event","target","slice","Divider","variant","ListItem","ListItemText","primary","TextField","select","style","line","disabled","MenuItem","className","backgroundColor","color","getTransText2","languages","CustomPanel","hexTemp","setHexTemp","type","rgb","opacity","htmlFor","Tooltip","title","Button","borderColor","error","match","hex","val","idx","toUpperCase","Select","native","label","CitySelectItem","items","useMemo","c","CountryFlag","useEmojiStyles","img","codePoints","split","char","codePointAt","concat","includes","language","navigator","platform","indexOf","src","process","join","alt","String","fromCodePoint","cp","parseInt","contentWrapper","overflow","paddingTop","spacing","paddingBottom","paddingLeft","paddingRight","breakpoints","down","contentLeft","maxWidth","contentControl","flexGrow","paperRoot","listItemPaper","justifyContent","iconRoot","palette","action","active","inputBaseRoot","inputBaseInputZH","textAlign","fontSize","inputBaseInputEN","chipWrapper","overflowX","chipRoot","lineHeight","margin","chipLabel","Dialog2","Dialog","open","onClose","DialogTitle","DialogContent","lineName","DialogActions","onClick","LineNameInput","nameChange","index","newName","Paper","Icon","InputBase","root","input","autoFocus","RecentChipSet","param","useContext","ParamContext","allInfos","Set","values","stn_list","reduce","acc","info","transfer","line_name","JSON","stringify","reverse","chips","x","i","parse","txt","Chip","secondary","secondaryTypographyProps","ColourControl","tabIndex","setTabIndex","tabNav","Tabs","indicatorColor","textColor","_","scrollButtons","Tab","panel","ColourDialog","Collapse","ref","children","_props$collapsedHeigh","collapsedHeight","collapsedHeightProp","_props$component","Component","inProp","in","onEnter","onEntered","onEntering","onExit","onExiting","_props$timeout","timeout","duration","standard","other","_objectWithoutProperties","useTheme","timer","wrapperRef","autoTransitionDuration","clearTimeout","current","Transition","_extends","node","isAppearing","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","transitions","getAutoHeightDuration","addEndListener","next","setTimeout","state","childProps","clsx","container","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","withStyles","transition","create","visibility","dividerVertical","nestedList","DesignList","rmgStyle","CanvasContext","dispatch","isCDiagOpen","setIsCDiagOpen","ListItemIcon","key","DirectionLi","direction","orientation","flexItem","PlatformNumLi","platform_num","PlatformNumSHMetroLi","handleSwitch","checked","ListItemSecondaryAction","Switch","unmountOnExit","placeholder","DesignMTR","lazy","DesignGZMTR","DesignShmetro","DesignPanel","Grid","justify","item","xs","sm","md","lg","Suspense","fallback","LinearProgress","Panel"],"mappings":"oHAAA,IAAIA,EAAM,CACT,cAAe,CACd,IACA,IAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,aAAc,CACb,IACA,GAED,gBAAiB,CAChB,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,WAAY,CACX,IACA,GAED,cAAe,CACd,IACA,GAED,YAAa,CACZ,IACA,GAED,eAAgB,CACf,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,WAAY,CACX,IACA,IAED,cAAe,CACd,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,SAAU,CACT,IACA,IAED,YAAa,CACZ,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,UAAW,CACV,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,I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","file":"static/js/panelDesign.f1c9e87a.chunk.js","sourcesContent":["var map = {\n\t\"./README.md\": [\n\t\t221,\n\t\t73\n\t],\n\t\"./barcelona\": [\n\t\t170,\n\t\t4\n\t],\n\t\"./barcelona.ts\": [\n\t\t170,\n\t\t4\n\t],\n\t\"./beijing\": [\n\t\t171,\n\t\t15\n\t],\n\t\"./beijing.ts\": [\n\t\t171,\n\t\t15\n\t],\n\t\"./changsha\": [\n\t\t172,\n\t\t26\n\t],\n\t\"./changsha.ts\": [\n\t\t172,\n\t\t26\n\t],\n\t\"./chengdu\": [\n\t\t173,\n\t\t37\n\t],\n\t\"./chengdu.ts\": [\n\t\t173,\n\t\t37\n\t],\n\t\"./chongqing\": [\n\t\t174,\n\t\t39\n\t],\n\t\"./chongqing.ts\": [\n\t\t174,\n\t\t39\n\t],\n\t\"./dongguan\": [\n\t\t175,\n\t\t5\n\t],\n\t\"./dongguan.ts\": [\n\t\t175,\n\t\t5\n\t],\n\t\"./edinburgh\": [\n\t\t176,\n\t\t6\n\t],\n\t\"./edinburgh.ts\": [\n\t\t176,\n\t\t6\n\t],\n\t\"./foshan\": [\n\t\t177,\n\t\t7\n\t],\n\t\"./foshan.ts\": [\n\t\t177,\n\t\t7\n\t],\n\t\"./glasgow\": [\n\t\t178,\n\t\t8\n\t],\n\t\"./glasgow.ts\": [\n\t\t178,\n\t\t8\n\t],\n\t\"./guangzhou\": [\n\t\t179,\n\t\t9\n\t],\n\t\"./guangzhou.ts\": [\n\t\t179,\n\t\t9\n\t],\n\t\"./hangzhou\": [\n\t\t180,\n\t\t10\n\t],\n\t\"./hangzhou.ts\": [\n\t\t180,\n\t\t10\n\t],\n\t\"./hongkong\": [\n\t\t181,\n\t\t11\n\t],\n\t\"./hongkong.ts\": [\n\t\t181,\n\t\t11\n\t],\n\t\"./kansai\": [\n\t\t182,\n\t\t12\n\t],\n\t\"./kansai.ts\": [\n\t\t182,\n\t\t12\n\t],\n\t\"./kaohsiung\": [\n\t\t183,\n\t\t13\n\t],\n\t\"./kaohsiung.ts\": [\n\t\t183,\n\t\t13\n\t],\n\t\"./london\": [\n\t\t184,\n\t\t14\n\t],\n\t\"./london.ts\": [\n\t\t184,\n\t\t14\n\t],\n\t\"./macao\": [\n\t\t185,\n\t\t16\n\t],\n\t\"./macao.ts\": [\n\t\t185,\n\t\t16\n\t],\n\t\"./madrid\": [\n\t\t186,\n\t\t17\n\t],\n\t\"./madrid.ts\": [\n\t\t186,\n\t\t17\n\t],\n\t\"./nanjing\": [\n\t\t187,\n\t\t18\n\t],\n\t\"./nanjing.ts\": [\n\t\t187,\n\t\t18\n\t],\n\t\"./newtaipei\": [\n\t\t188,\n\t\t19\n\t],\n\t\"./newtaipei.ts\": [\n\t\t188,\n\t\t19\n\t],\n\t\"./osaka\": [\n\t\t189,\n\t\t20\n\t],\n\t\"./osaka.ts\": [\n\t\t189,\n\t\t20\n\t],\n\t\"./oslo\": [\n\t\t190,\n\t\t21\n\t],\n\t\"./oslo.ts\": [\n\t\t190,\n\t\t21\n\t],\n\t\"./other\": [\n\t\t191,\n\t\t22\n\t],\n\t\"./other.ts\": [\n\t\t191,\n\t\t22\n\t],\n\t\"./paris\": [\n\t\t192,\n\t\t23\n\t],\n\t\"./paris.ts\": [\n\t\t192,\n\t\t23\n\t],\n\t\"./qingdao\": [\n\t\t193,\n\t\t24\n\t],\n\t\"./qingdao.ts\": [\n\t\t193,\n\t\t24\n\t],\n\t\"./sanfrancisco\": [\n\t\t194,\n\t\t25\n\t],\n\t\"./sanfrancisco.ts\": [\n\t\t194,\n\t\t25\n\t],\n\t\"./seoul\": [\n\t\t195,\n\t\t27\n\t],\n\t\"./seoul.ts\": [\n\t\t195,\n\t\t27\n\t],\n\t\"./shanghai\": [\n\t\t196,\n\t\t28\n\t],\n\t\"./shanghai.ts\": [\n\t\t196,\n\t\t28\n\t],\n\t\"./shenzhen\": [\n\t\t197,\n\t\t29\n\t],\n\t\"./shenzhen.ts\": [\n\t\t197,\n\t\t29\n\t],\n\t\"./singapore\": [\n\t\t198,\n\t\t30\n\t],\n\t\"./singapore.ts\": [\n\t\t198,\n\t\t30\n\t],\n\t\"./stockholm\": [\n\t\t199,\n\t\t31\n\t],\n\t\"./stockholm.ts\": [\n\t\t199,\n\t\t31\n\t],\n\t\"./taipei\": [\n\t\t200,\n\t\t32\n\t],\n\t\"./taipei.ts\": [\n\t\t200,\n\t\t32\n\t],\n\t\"./tianjin\": [\n\t\t201,\n\t\t33\n\t],\n\t\"./tianjin.ts\": [\n\t\t201,\n\t\t33\n\t],\n\t\"./tokyo\": [\n\t\t202,\n\t\t34\n\t],\n\t\"./tokyo.ts\": [\n\t\t202,\n\t\t34\n\t],\n\t\"./toronto\": [\n\t\t203,\n\t\t35\n\t],\n\t\"./toronto.ts\": [\n\t\t203,\n\t\t35\n\t],\n\t\"./tyneandwear\": [\n\t\t204,\n\t\t36\n\t],\n\t\"./tyneandwear.ts\": [\n\t\t204,\n\t\t36\n\t],\n\t\"./xian\": [\n\t\t205,\n\t\t38\n\t],\n\t\"./xian.ts\": [\n\t\t205,\n\t\t38\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 213;\nmodule.exports = webpackAsyncContext;","export const cityList: CityEntry[] = [\n    {\n        id: 'barcelona',\n        country: 'ES',\n        name: {\n            en: 'Barcelona',\n            'zh-Hans': '巴塞罗那',\n            'zh-HK': '巴塞隆拿',\n            'zh-TW': '巴塞隆納',\n        },\n    },\n    {\n        id: 'beijing',\n        country: 'CN',\n        name: {\n            en: 'Beijing',\n            zh: '北京',\n        },\n    },\n    {\n        id: 'changsha',\n        country: 'CN',\n        name: {\n            en: 'Changsha',\n            'zh-Hans': '长沙',\n            'zh-Hant': '長沙',\n        },\n    },\n    {\n        id: 'chengdu',\n        country: 'CN',\n        name: {\n            en: 'Chengdu',\n            zh: '成都',\n        },\n    },\n    {\n        id: 'chongqing',\n        country: 'CN',\n        name: {\n            en: 'Chongqing',\n            'zh-Hans': '重庆',\n            'zh-Hant': '重慶',\n        },\n    },\n    {\n        id: 'dongguan',\n        country: 'CN',\n        name: {\n            en: 'Dongguan',\n            'zh-Hans': '东莞',\n            'zh-Hant': '東莞',\n        },\n    },\n    {\n        id: 'edinburgh',\n        country: 'GBSCT',\n        name: {\n            en: 'Edinburgh',\n            ga: 'Dùn Èideann',\n            'zh-Hans': '爱丁堡',\n            'zh-Hant': '愛丁堡',\n        },\n    },\n    {\n        id: 'foshan',\n        country: 'CN',\n        name: {\n            en: 'Foshan',\n            zh: '佛山',\n        },\n    },\n    {\n        id: 'glasgow',\n        country: 'GBSCT',\n        name: {\n            en: 'Glasgow',\n            ga: 'Glaschu',\n            zh: '格拉斯哥',\n        },\n    },\n    {\n        id: 'guangzhou',\n        country: 'CN',\n        name: {\n            en: 'Guangzhou',\n            'zh-Hans': '广州',\n            'zh-Hant': '廣州',\n        },\n    },\n    {\n        id: 'hangzhou',\n        country: 'CN',\n        name: {\n            en: 'Hangzhou',\n            zh: '杭州',\n        },\n    },\n    {\n        id: 'hongkong',\n        country: 'HK',\n        name: {\n            en: 'Hong Kong',\n            zh: '香港',\n        },\n    },\n    {\n        id: 'kansai',\n        country: 'JP',\n        name: {\n            en: 'Kansai Area',\n            ja: '近畿地方',\n            'zh-Hans': '近畿地方（关西地方）',\n            'zh-Hant': '近畿地方（關西地方）',\n        },\n    },\n    {\n        id: 'kaohsiung',\n        country: 'TW',\n        name: {\n            en: 'Kaohsiung',\n            zh: '高雄',\n        },\n    },\n    {\n        id: 'london',\n        country: 'GBENG',\n        name: {\n            en: 'London',\n            'zh-Hans': '伦敦',\n            'zh-Hant': '倫敦',\n        },\n    },\n    {\n        id: 'macao',\n        country: 'MO',\n        name: {\n            en: 'Macao',\n            pt: 'Macau',\n            'zh-Hans': '澳门',\n            'zh-Hant': '澳門',\n        },\n    },\n    {\n        id: 'madrid',\n        country: 'ES',\n        name: {\n            en: 'Madrid',\n            'zh-Hans': '马德里',\n            'zh-Hant': '馬德里',\n        },\n    },\n    {\n        id: 'nanjing',\n        country: 'CN',\n        name: {\n            en: 'Nanjing',\n            zh: '南京',\n        },\n    },\n    {\n        id: 'newtaipei',\n        country: 'TW',\n        name: {\n            en: 'New Taipei',\n            zh: '新北',\n        },\n    },\n    {\n        id: 'osaka',\n        country: 'JP',\n        name: {\n            en: 'Osaka',\n            ja: '大阪',\n            zh: '大阪',\n        },\n    },\n    {\n        id: 'oslo',\n        country: 'NO',\n        name: {\n            en: 'Oslo',\n            'zh-Hans': '奥斯陆',\n            'zh-Hant': '奧斯陸',\n        },\n    },\n    {\n        id: 'paris',\n        country: 'FR',\n        name: {\n            en: 'Paris',\n            zh: '巴黎',\n        },\n    },\n    {\n        id: 'qingdao',\n        country: 'CN',\n        name: {\n            en: 'Qingdao',\n            'zh-Hans': '青岛',\n            'zh-Hant': '青島',\n        },\n    },\n    {\n        id: 'sanfrancisco',\n        country: 'US',\n        name: {\n            en: 'San Francisco',\n            'zh-Hans': '旧金山',\n            'zh-HK': '三藩市',\n            'zh-TW': '舊金山',\n        },\n    },\n    {\n        id: 'seoul',\n        country: 'KR',\n        name: {\n            en: 'Seoul (Metropolitan Area)',\n            ko: '서울(수도권)',\n            'zh-Hans': '首尔（首都圈）',\n            'zh-Hant': '首爾（首都圈）',\n        },\n    },\n    {\n        id: 'shanghai',\n        country: 'CN',\n        name: {\n            en: 'Shanghai',\n            zh: '上海',\n        },\n    },\n    {\n        id: 'shenzhen',\n        country: 'CN',\n        name: {\n            en: 'Shenzhen',\n            zh: '深圳',\n        },\n    },\n    {\n        id: 'singapore',\n        country: 'SG',\n        name: {\n            en: 'Singapore',\n            zh: '新加坡',\n        },\n    },\n    {\n        id: 'stockholm',\n        country: 'SE',\n        name: {\n            en: 'Stockholm',\n            'zh-Hans': '斯德哥尔摩',\n            'zh-Hant': '斯德哥爾摩',\n        },\n    },\n    {\n        id: 'taipei',\n        country: 'TW',\n        name: {\n            en: 'Taipei',\n            zh: '台北',\n        },\n    },\n    {\n        id: 'tianjin',\n        country: 'CN',\n        name: {\n            en: 'Tianjin',\n            zh: '天津',\n        },\n    },\n    {\n        id: 'tokyo',\n        country: 'JP',\n        name: {\n            en: 'Tokyo (Greater Tokyo Area)',\n            ja: '東京（首都圏）',\n            'zh-Hans': '东京（首都圈）',\n            'zh-Hant': '東京（首都圈）',\n        },\n    },\n    {\n        id: 'toronto',\n        country: 'CA',\n        name: {\n            en: 'Toronto',\n            'zh-Hans': '多伦多',\n            'zh-Hant': '多倫多',\n        },\n    },\n    {\n        id: 'tyneandwear',\n        country: 'GBENG',\n        name: {\n            en: 'Tyne and Wear',\n            'zh-Hans': '泰恩-威尔',\n            'zh-HK': '泰威',\n            'zh-TW': '泰恩-威爾',\n        },\n    },\n    {\n        id: 'xian',\n        country: 'CN',\n        name: {\n            en: \"Xi'an\",\n            zh: '西安',\n        },\n    },\n    {\n        id: 'other',\n        country: 'UN',\n        name: {\n            en: 'Customise',\n            'zh-Hans': '自定义',\n            'zh-Hant': '自訂',\n        },\n    },\n];\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    List,\n    ListItem,\n    TextField,\n    MenuItem,\n    Button,\n    makeStyles,\n    createStyles,\n    Tooltip,\n    ListItemText,\n    Divider,\n    Select,\n} from '@material-ui/core';\nimport { getTransText2 } from '../../utils';\nimport { cityList } from './data';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        cityItem: {\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        menuItemSpan: {\n            padding: '0 .3rem',\n        },\n        button: {\n            borderRadius: '50%',\n            height: 24,\n            width: 24,\n            minWidth: 0,\n            marginRight: 8,\n            // border: 'solid',\n            padding: 0,\n        },\n        inputColour: {\n            position: 'absolute',\n            width: 0,\n            height: 0,\n            left: 27,\n            top: 32,\n        },\n        buttonContainer: {\n            display: 'flex',\n            flexShrink: 1,\n        },\n    })\n);\n\nconst useLineList = (theme: Theme) => {\n    const [list, setList] = React.useState([] as LineEntry[]);\n\n    const listPromise = theme[0]\n        ? import(/* webpackChunkName: \"colours\" */ `./colours/${theme[0]}`).then(\n              module => module.default as LineEntry[]\n          )\n        : Promise.resolve([] as LineEntry[]);\n\n    useEffect(\n        () => {\n            if (typeof theme[0] === 'undefined') {\n                return;\n            }\n            (async () => {\n                const data = await listPromise;\n                setList(theme[0] === 'other' ? [{ ...data[0], colour: theme[2], fg: theme[3] || '#fff' }] : data);\n            })();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [theme.toString()]\n    );\n\n    return list;\n};\n\ninterface ColourDialogProps {\n    theme: [string, string, string, '#000' | '#fff'];\n    onUpdate: (key: string, value: any) => void;\n}\n\nexport const PalettePanel = (props: ColourDialogProps) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const cityChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n        props.onUpdate('theme', [event.target.value, ...props.theme.slice(1)]);\n\n    // Hook for fetching line list of current city\n    const lineList = useLineList(props.theme);\n\n    // Hook for updating props.theme when lineList changed\n    useEffect(\n        () => {\n            if (lineList.length === 0) return; // initialising, ignore\n            if (lineList.filter(l => l.id === props.theme[1]).length) return; // current city, ignore\n            let { id, colour, fg } = lineList[0];\n            let newTheme = [props.theme[0], id, colour, fg || '#fff'];\n            props.onUpdate('theme', newTheme);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [lineList]\n    );\n\n    const lineChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let line = event.target.value;\n        let { colour, fg } = lineList.filter(l => l.id === line)[0];\n        let newTheme = [props.theme[0], line, colour, fg || '#fff'];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <CitySelectItem value={props.theme[0]} onChange={cityChange} />\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.line')} />\n                <TextField\n                    select\n                    style={{ width: 166 }}\n                    onChange={lineChange}\n                    value={props.theme[1]}\n                    disabled={props.theme[0] === 'other'}\n                >\n                    {lineList.map(l => (\n                        <MenuItem key={l.id} value={l.id}>\n                            <span\n                                className={classes.menuItemSpan}\n                                style={{\n                                    backgroundColor: l.colour,\n                                    color: l.fg || '#fff',\n                                }}\n                            >\n                                {getTransText2(l.name, i18n.languages)}\n                            </span>\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </ListItem>\n        </List>\n    );\n};\n\nexport const CustomPanel = (props: ColourDialogProps) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const [hexTemp, setHexTemp] = useState(props.theme[2]);\n\n    useEffect(\n        () => setHexTemp(props.theme[2]),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.theme[2]]\n    );\n\n    const colourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let rgb = event.target.value;\n        // setHexTemp(rgb);\n        props.onUpdate('theme', ['other', 'other', rgb, props.theme[3]]);\n    };\n\n    const hexChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        let hex = event.target.value;\n        if (hex.match(/^#[0-9a-fA-F]{0,6}$/) === null) return;\n        setHexTemp(hex);\n\n        if (props.theme[0] !== 'other') {\n            if (hex.match(/^#[0-9a-fA-f]{6}$/) !== null) {\n                // if hex valid, modify theme city and props.hex\n                let newTheme = ['other', 'other', hex, props.theme[3]];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            } else {\n                // if hex not valid, modify theme city only\n                let newTheme = ['other', 'other', ...props.theme.slice(2)];\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (along with selection)\n                // then line will be updated by hook\n            }\n        } else {\n            if (hex.match(/^#[0-9a-fA-F]{6}$/) !== null) {\n                // if hex valid, modify props.hex\n                let newTheme = props.theme.map((val, idx) => (idx === 2 ? hex : val));\n                props.onUpdate('theme', newTheme);\n                // then lineList will be updated by hook (actually only hex is changed)\n            } else {\n                // if hex not valid, do nothing\n            }\n        }\n    };\n\n    const fgChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n        let newTheme = ['other', 'other', props.theme[2], event.target.value];\n        props.onUpdate('theme', newTheme);\n    };\n\n    return (\n        <List component=\"div\" disablePadding>\n            <ListItem>\n                <ListItemText primary={t('colour.colour')} />\n                <div className={classes.buttonContainer}>\n                    <input\n                        type=\"color\"\n                        id=\"input-color\"\n                        value={props.theme[2]}\n                        onChange={colourChange}\n                        className={classes.inputColour}\n                        style={{ opacity: 0 }}\n                    />\n                    <label htmlFor=\"input-color\">\n                        <Tooltip title={t('colour.tooltip')} aria-label=\"colour picker\">\n                            <Button\n                                className={classes.button}\n                                style={{\n                                    backgroundColor: props.theme[2],\n                                    borderColor: props.theme[3] || '#fff',\n                                }}\n                                variant=\"contained\"\n                                component=\"span\"\n                            >\n                                {' '}\n                            </Button>\n                        </Tooltip>\n                    </label>\n                </div>\n                <TextField\n                    error={!hexTemp?.match(/^#[0-9a-fA-F]{6}$/g)}\n                    style={{ width: 85 }}\n                    onChange={hexChange}\n                    value={hexTemp?.toUpperCase()}\n                />\n            </ListItem>\n            <Divider variant=\"middle\" />\n            <ListItem>\n                <ListItemText primary={t('colour.fg')} />\n                <Select\n                    native\n                    style={{ width: 85 }}\n                    label={t('colour.fg')}\n                    onChange={fgChange}\n                    value={props.theme[3] || '#fff'}\n                >\n                    <option value=\"#fff\">{t('colour.fgWhite')}</option>\n                    <option value=\"#000\">{t('colour.fgBlack')}</option>\n                </Select>\n            </ListItem>\n        </List>\n    );\n};\n\nconst CitySelectItem = (props: { value: string; onChange: (event: React.ChangeEvent<HTMLInputElement>) => void }) => {\n    const { t, i18n } = useTranslation();\n    const classes = useStyles();\n\n    const items = useMemo(\n        () =>\n            cityList.map(c => (\n                <MenuItem key={c.id} value={c.id}>\n                    <span className={classes.cityItem}>\n                        <CountryFlag code={c.country} />\n                        <span>{getTransText2(c.name, i18n.languages)}</span>\n                    </span>\n                </MenuItem>\n            )),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n    return (\n        <ListItem>\n            <ListItemText primary={t('colour.city')} />\n            <TextField select style={{ width: 166 }} value={props.value} onChange={props.onChange}>\n                {items}\n            </TextField>\n        </ListItem>\n    );\n};\n\nconst useEmojiStyles = makeStyles(() =>\n    createStyles({\n        img: {\n            height: 20,\n            marginRight: '0.2rem',\n        },\n    })\n);\n\n/**\n * Convert ISO 3166 alpha-2 country code (followed by BS 6879 UK subdivision code, if applicable) to flag Emoji. For Windows platform, an `img` element with image source from OpenMoji is returned.\n */\nfunction CountryFlag(props: { code: string }) {\n    const { i18n } = useTranslation();\n    const classes = useEmojiStyles();\n\n    let codePoints = [] as string[];\n\n    if (props.code.length === 2) {\n        codePoints = props.code\n            .toUpperCase()\n            .split('')\n            .map(char => ((char.codePointAt(0) || 0) + 127397).toString(16).toUpperCase());\n    } else {\n        codePoints = ['1F3F4'].concat(\n            props.code\n                .toUpperCase()\n                .split('')\n                .map(char => ((char.codePointAt(0) || 0) + 917536).toString(16).toUpperCase()),\n            'E007F'\n        );\n    }\n\n    // special case for simplified Chinese\n    if (['zh-CN', 'zh-Hans'].includes(i18n.language) && props.code === 'TW') codePoints = ['1F3F4'];\n\n    return navigator.platform.indexOf('Win32') !== -1 || navigator.platform.indexOf('Win64') !== -1 ? (\n        <img\n            src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`}\n            className={classes.img}\n            alt={`Flag of ${props.code}`}\n        />\n    ) : (\n        // <img src={process.env.PUBLIC_URL + `/images/flags/${codePoints.join('-')}.svg`} className={classes.img} />\n        <span>{String.fromCodePoint(...codePoints.map(cp => parseInt(cp, 16)))}</span>\n    );\n}\n","import React, { useState, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Paper,\n    ListItem,\n    List,\n    Icon,\n    InputBase,\n    makeStyles,\n    DialogActions,\n    Button,\n    createStyles,\n    Tabs,\n    Tab,\n    Chip,\n    Divider,\n    ListItemText,\n} from '@material-ui/core';\nimport { PalettePanel, CustomPanel } from './theme-items';\nimport { ParamContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        contentWrapper: {\n            display: 'flex',\n            overflow: 'hidden',\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n            [theme.breakpoints.down('xs')]: {\n                flexDirection: 'column',\n            },\n        },\n        contentLeft: {\n            maxWidth: 280,\n        },\n        contentControl: {\n            flexGrow: 0,\n            flexShrink: 0,\n            display: 'flex',\n            flexDirection: 'column',\n            width: 270,\n        },\n\n        paperRoot: {\n            maxWidth: 250,\n        },\n        listItemPaper: {\n            justifyContent: 'center',\n        },\n        iconRoot: {\n            position: 'absolute',\n            color: theme.palette.action.active,\n        },\n        inputBaseRoot: {\n            display: 'block',\n        },\n        inputBaseInputZH: {\n            textAlign: 'center',\n            fontSize: 36,\n            padding: 0,\n            paddingTop: 6,\n            height: 45,\n        },\n        inputBaseInputEN: {\n            textAlign: 'center',\n            fontSize: 18,\n            padding: 0,\n            paddingBottom: 6,\n            height: 'auto',\n        },\n\n        chipWrapper: {\n            overflowX: 'auto',\n            display: 'flex',\n        },\n        chipRoot: {\n            borderRadius: 4.5,\n            height: 32,\n            lineHeight: '1rem',\n            margin: 2,\n        },\n        chipLabel: {\n            padding: '0 6px',\n            '& > span': {\n                display: 'block',\n                textAlign: 'center',\n            },\n            '& > span:first-child': {\n                fontSize: '1rem',\n            },\n            '& > span:last-child': {\n                lineHeight: '0.8rem',\n            },\n        },\n    })\n);\n\ninterface Props {\n    open: boolean;\n    theme: [string, string, string, '#000' | '#fff'];\n    lineName: Name;\n    onUpdate: (key: string, value: any) => void;\n    onClose: () => void;\n}\n\nconst Dialog2 = (props: Props) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    return (\n        <Dialog open={props.open} onClose={props.onClose}>\n            <DialogTitle>{t('colour.title')}</DialogTitle>\n            <DialogContent className={classes.contentWrapper}>\n                <List component=\"div\" disablePadding className={classes.contentLeft}>\n                    <LineNameInput theme={props.theme} lineName={props.lineName} onUpdate={props.onUpdate} />\n                    <Divider />\n                    <RecentChipSet onUpdate={props.onUpdate} />\n                </List>\n                <div className={classes.contentControl}>\n                    <ColourControl theme={props.theme} onUpdate={props.onUpdate} />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\">\n                    {t('dialog.done')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Dialog2;\n\nconst LineNameInput = (props: { lineName: Name; theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const classes = useStyles();\n\n    const nameChange = (value: string, index: number) => {\n        let newName = props.lineName.map((val, idx) => (idx === index ? value : val));\n        props.onUpdate('name', newName);\n    };\n\n    return (\n        <ListItem style={{ justifyContent: 'center' }}>\n            <Paper className={classes.paperRoot} style={{ backgroundColor: props.theme[2] }}>\n                <Icon className={classes.iconRoot}>edit</Icon>\n                <InputBase\n                    value={props.lineName[0]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputZH,\n                    }}\n                    style={{ color: props.theme[3] || '#fff' }}\n                    onChange={e => nameChange(e.target.value, 0)}\n                    autoFocus\n                />\n                <InputBase\n                    value={props.lineName[1]}\n                    classes={{\n                        root: classes.inputBaseRoot,\n                        input: classes.inputBaseInputEN,\n                    }}\n                    style={{ color: props.theme[3] || '#fff' }}\n                    onChange={e => nameChange(e.target.value, 1)}\n                />\n            </Paper>\n        </ListItem>\n    );\n};\n\nconst RecentChipSet = (props: { onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n\n    const { param } = useContext(ParamContext);\n\n    const allInfos = useMemo(\n        () =>\n            new Set(\n                Object.values(param.stn_list)\n                    .reduce(\n                        (acc, { transfer }) => {\n                            const { info } = transfer;\n                            return acc.concat(...info);\n                        },\n                        [[...param.theme, ...param.line_name] as InterchangeInfo]\n                    )\n                    .map(val => JSON.stringify(val))\n                    .reverse()\n            ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    const chips = useMemo(\n        () =>\n            [...allInfos].map((x, i) => {\n                const info: InterchangeInfo = JSON.parse(x);\n                const label = info.slice(4).map((txt, i) => (\n                    <span key={i} style={{ color: info[3] }}>\n                        {txt}\n                    </span>\n                ));\n\n                return (\n                    <Chip\n                        key={i}\n                        onClick={() => {\n                            props.onUpdate('theme', info.slice(0, 4));\n                            props.onUpdate('name', info.slice(4));\n                        }}\n                        style={{ backgroundColor: info[2] }}\n                        className={classes.chipRoot}\n                        classes={{ label: classes.chipLabel }}\n                        {...{ label }}\n                    />\n                );\n            }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        []\n    );\n\n    return (\n        <ListItem>\n            <ListItemText\n                primary={t('colour.recent')}\n                secondary={chips}\n                secondaryTypographyProps={{ component: 'div' }}\n                classes={{ secondary: classes.chipWrapper }}\n            />\n        </ListItem>\n    );\n};\n\nconst ColourControl = (props: { theme: Theme; onUpdate: Props['onUpdate'] }) => {\n    const { t } = useTranslation();\n    const [tabIndex, setTabIndex] = useState(props.theme[0] === 'other' ? 1 : 0);\n\n    const tabNav = (\n        <Tabs\n            value={tabIndex}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(_, val) => setTabIndex(val)}\n            variant=\"fullWidth\"\n            scrollButtons=\"off\"\n        >\n            <Tab label={t('colour.palette')} style={{ minWidth: 'unset' }} />\n            <Tab label={t('colour.custom')} style={{ minWidth: 'unset' }} />\n        </Tabs>\n    );\n\n    const panel = (idx => {\n        switch (idx) {\n            case 0:\n                return <PalettePanel {...props} />;\n            case 1:\n                return <CustomPanel {...props} />;\n            default:\n                return <></>;\n        }\n    })(tabIndex);\n\n    return (\n        <>\n            {tabNav}\n            {panel}\n        </>\n    );\n};\n","import ColourDialog from './dialog';\n\nexport default ColourDialog;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the container element. */\n    container: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the container element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the container element when the transition has exited and `collapsedHeight` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$collapsedHeigh = props.collapsedHeight,\n      collapsedHeightProp = _props$collapsedHeigh === void 0 ? '0px' : _props$collapsedHeigh,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExiting\", \"style\", \"timeout\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedHeight = typeof collapsedHeightProp === 'number' ? \"\".concat(collapsedHeightProp, \"px\") : collapsedHeightProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    node.style.height = collapsedHeight;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  };\n\n  var handleEntered = function handleEntered(node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  };\n\n  var handleExit = function handleExit(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExiting = function handleExiting(node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedHeight;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  };\n\n  var addEndListener = function addEndListener(_, next) {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedHeight === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedHeight\n      }, style),\n      ref: ref\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import React, { useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport {\n    ListItem,\n    ListItemIcon,\n    Icon,\n    ListItemText,\n    TextField,\n    Divider,\n    makeStyles,\n    createStyles,\n    Button,\n    ListItemSecondaryAction,\n    Switch,\n    Collapse,\n    List,\n} from '@material-ui/core';\nimport ColourDialog from '../colour-diag';\nimport { ParamContext, CanvasContext } from '../../context';\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        dividerVertical: {\n            margin: theme.spacing(0, 2),\n        },\n        nestedList: {\n            paddingLeft: theme.spacing(5),\n        },\n    })\n);\n\nconst DesignList = () => {\n    const { t } = useTranslation();\n\n    const { rmgStyle } = useContext(CanvasContext);\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    const [isCDiagOpen, setIsCDiagOpen] = React.useState(false);\n\n    const nameDialogUpdate = (key: string, value: any) => {\n        if (key === 'name') {\n            dispatch({ type: 'SET_LINE_NAME', name: Object.values(value) as Name });\n        }\n        if (key === 'theme') {\n            dispatch({ type: 'SET_THEME', theme: value });\n        }\n    };\n\n    return (\n        <>\n            <ListItem button onClick={() => setIsCDiagOpen(true)}>\n                <ListItemIcon>\n                    <Icon>color_lens</Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={t('design.theme')}\n                    secondary={\n                        <span\n                            style={{\n                                backgroundColor: param.theme[2],\n                                color: param.theme[3],\n                                padding: '.1rem .3rem',\n                            }}\n                        >\n                            {Object.values(param.line_name).join()}\n                        </span>\n                    }\n                />\n                <Icon color=\"action\">arrow_right</Icon>\n            </ListItem>\n            <ColourDialog\n                open={isCDiagOpen}\n                theme={param.theme}\n                lineName={param.line_name}\n                onUpdate={nameDialogUpdate}\n                onClose={() => setIsCDiagOpen(false)}\n            />\n            <Divider />\n            <DirectionLi />\n            <Divider />\n            {rmgStyle === 'shmetro' ? <PlatformNumSHMetroLi /> : <PlatformNumLi />}\n        </>\n    );\n};\n\nexport default DesignList;\n\nconst DirectionLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>directions</Icon>\n                </ListItemIcon>\n                <ListItemText\n                    primary={t('design.direction.button')}\n                    secondary={t('design.direction.' + param.direction)}\n                />\n                <Divider orientation=\"vertical\" flexItem className={classes.dividerVertical} />\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => dispatch({ type: 'SET_DIRECTION' })}>\n                    {t('design.direction.switch')}\n                </Button>\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [classes.dividerVertical, param.direction]\n    );\n};\n\nconst PlatformNumLi = () => {\n    const { t } = useTranslation();\n    const { param, dispatch } = React.useContext(ParamContext);\n\n    return React.useMemo(\n        () => (\n            <ListItem>\n                <ListItemIcon>\n                    <Icon>looks_one</Icon>\n                </ListItemIcon>\n                <ListItemText primary={t('design.platform')} />\n                <TextField\n                    value={param.platform_num}\n                    onChange={e => dispatch({ type: 'SET_PLATFORM', platform: e.target.value })}\n                />\n            </ListItem>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.platform_num]\n    );\n};\n\nconst PlatformNumSHMetroLi = () => {\n    const { t } = useTranslation();\n    const classes = useStyles();\n    const { param, dispatch } = useContext(ParamContext);\n\n    const handleSwitch = (_: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n        if (checked) {\n            dispatch({ type: 'SET_PLATFORM', platform: '' });\n        } else {\n            dispatch({ type: 'SET_PLATFORM', platform: false });\n        }\n    };\n\n    return useMemo(\n        () => (\n            <>\n                <ListItem>\n                    <ListItemIcon>\n                        <Icon>looks_one</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={t('design.platform')} />\n                    <ListItemSecondaryAction>\n                        <Switch color=\"primary\" checked={param.platform_num !== false} onChange={handleSwitch} />\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <Collapse in={param.platform_num !== false} unmountOnExit>\n                    <List component=\"div\" disablePadding className={classes.nestedList}>\n                        <ListItem>\n                            <TextField\n                                placeholder={t('design.platform')}\n                                value={param.platform_num}\n                                onChange={e => dispatch({ type: 'SET_PLATFORM', platform: e.target.value })}\n                            />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [param.platform_num, classes.nestedList]\n    );\n};\n","import React, { useContext } from 'react';\n\nimport { Grid, Paper, List, Divider, LinearProgress } from '@material-ui/core';\n\nimport DesignCommon from './list-common';\nimport { CanvasContext } from '../../context';\nconst DesignMTR = React.lazy(() => import(/* webpackChunkName: \"panelDesignMTR\" */ './list-mtr'));\nconst DesignGZMTR = React.lazy(() => import(/* webpackChunkName: \"panelDesignGZMTR\" */ './list-gzmtr'));\nconst DesignShmetro = React.lazy(() => import(/* webpackChunkName: \"panelDesignShmetro\" */ './list-shmetro'));\n\nconst DesignPanel = () => {\n    const { rmgStyle } = useContext(CanvasContext);\n    return (\n        <Grid container spacing={3} justify=\"center\" alignItems=\"flex-start\">\n            <Grid item xs={12} sm={10} md={7} lg={5}>\n                <Paper>\n                    <List component=\"div\" disablePadding>\n                        <DesignCommon />\n                        {rmgStyle === 'mtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignMTR />\n                            </React.Suspense>\n                        )}\n                        {rmgStyle === 'gzmtr' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignGZMTR />\n                            </React.Suspense>\n                        )}\n                        {rmgStyle === 'shmetro' && (\n                            <React.Suspense fallback={<LinearProgress />}>\n                                <Divider />\n                                <DesignShmetro />\n                            </React.Suspense>\n                        )}\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default DesignPanel;\n","import Panel from './panel';\n\nexport default Panel;\n"],"sourceRoot":""}